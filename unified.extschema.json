{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "id": "master.extschema.json#",
  "name": "OpenSwitch",
  "version": "0.1.8",
  "groups": {
    "/Queue/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/Power_supply/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/System/QoS configuration": {
      "doc": [
        "Specifies QoS (Quality of Service) configuration options that are global or are",
        "the configured default to use if no per-port override has been specified."
      ]
    },
    "/System/Database Configuration": {
      "doc": [
        "These columns primarily configure the OpenSwitch database (`ovsdb-server`), not",
        "the OpenSwitch switch (`pswitchd`).  The OVSDB database also uses the",
        "[ssl](System.ssl) settings.",
        "",
        "The OpenSwitch switch does read the database configuration to determine remote",
        "IP addresses to which in-band control should apply."
      ]
    },
    "/Manager/Connection Parameters": {
      "doc": [
        "Additional configuration for a connection between the manager and the OpenSwitch",
        "Database."
      ]
    },
    "/Mirror/Mirror Session Statistics": {
      "doc": [
        "Key-value pairs that report mirror statistics.  The counts are reset to zero",
        "whenever the operation state transitions to active. The update period is",
        "controlled by [System](System) [stats-update-interval](System.other_config.stats-update-interval).",
        "No counts may be available initally until the first",
        "update period has elasped.  If any key-value pairs remains missing, the hardware",
        "does not support that count."
      ]
    },
    "/QoS_DSCP_Map_Entry/Hardware Default": {
      "doc": [
        "The key-value pairs document the hardware defaults for configuration columns in",
        "this row."
      ]
    },
    "/BGP_Neighbor/BGP Neighbor Statistics": {
      "doc": [
        "The `statistics` column contains various counters about this BGP neighbor."
      ]
    },
    "/Prefix_List/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/Port/Port Statistics": {
      "doc": [
        "Key-value pairs that report port statistics.  The update period is controlled by",
        "[stats-update-interval](System.other_config.stats-update-interval) in the",
        "[System](System) table."
      ]
    },
    "/System/BroadView configuration": {
      "doc": [
        "The parameters in this group are used to configure BroadView agent. Parameter",
        "enabled is used to enable/disable BroadView. Agent sends asynch reports to the",
        "application at client_ip and client_port. Parameter agent_port is the port",
        "number on which agent listens for client connections. The communication on agent",
        "port is of request - response style."
      ]
    },
    "/BGP_Neighbor/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/VLAN/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/System/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/QoS_COS_Map_Entry/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/Interface/Module Information": {
      "doc": [
        "Information about the pluggable module inserted into the physical interface",
        "socket."
      ]
    },
    "/Port/L3 Configuration/Port level OSPFv2 Configurations": {
      "doc": [
        "The \"Port\" level OSPFv2 Routing Configurations."
      ]
    },
    "/QoS_COS_Map_Entry/Hardware Default": {
      "doc": [
        "The key-value pairs document the hardware defaults for configuration columns in",
        "this row."
      ]
    },
    "/Nexthop/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/QoS_DSCP_Map_Entry/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/Power_supply/Status": {
      "doc": [
        "If the PSU does not have a means to obtain information through software to",
        "populate a field in a Status column, then that field will remain blank."
      ]
    },
    "/Port/DHCP-Relay Statistics": {
      "doc": [
        "DHCP-Relay statistics counters for both IPv4 and IPv6. The update period is",
        "controlled by [stats-update-interval](System.other_config.stats-update-interval)in",
        "[System](System). If certain key is missing, then the assummed counter value is",
        "0."
      ]
    },
    "/Route/Protocol Specific": {
      "doc": [
        "The `protocol_specific` column contains key-value pairs that are used by the",
        "owner of the entry. Example: If BGP created an entry BGP can populate these key-",
        "value pairs for its internal use. These values may not add value to other",
        "daemons"
      ]
    },
    "/Temp_sensor/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/Port/Hardware Port Configuration": {
      "doc": [
        "The following fields are not meant to be configured by the user, but rather by",
        "`portd` daemon that is responsible to consider user configuration and business",
        "logic in order to determine hardware configuration."
      ]
    },
    "/MAC/status": {
      "doc": [
        "This column specifies the status of this entry in the table."
      ]
    },
    "/VRF/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/LED/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/System/Version Reporting": {
      "doc": [
        "These columns report the types and versions of the hardware and software running",
        "OpenSwitch.  We recommend in general that software should test whether specific",
        "features are supported instead of relying on version number checks.  These",
        "values are primarily intended for reporting to human administrators."
      ]
    },
    "/Bridge/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/Interface/Tunnel Options": {
      "doc": [
        "These options apply to interfaces with [type](Interface.type) of `vxlan`.",
        "",
        "Each tunnel must be uniquely identified by the combination of",
        "[type](Interface.type), [remote_ip](Interface.options.remote_ip),",
        "[local_ip](Interface.options.local_ip), and [in_key](Interface.options.in_key).",
        "If two ports are defined that are the same except one has an optional identifier",
        "and the other does not, the more specific one is matched first.",
        "[in_key](Interface.options.in_key) is considered more specific than",
        "[local_ip](Interface.options.local_ip) if a port defines one and another port",
        "defines the other."
      ]
    },
    "/Port/Bonding Configuration": {
      "doc": [
        "A port that has more than one interface is a ``bonded port.'' Bonding allows for",
        "load balancing and fail-over.",
        "",
        "The following modes (bond_mode) require the upstream switch to support 802.3ad",
        "with successful LACP negotiation.",
        "",
        "These columns apply only to bonded ports.  Their values are otherwise ignored."
      ]
    },
    "/BGP_Router/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/Bridge/Bridge Status": {
      "doc": [
        "Status information about bridges."
      ]
    },
    "/Interface/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/Port/ACL Configuration": {
      "doc": [
        "ACL applied to ports."
      ]
    },
    "/Port/Bonding Configuration/LACP Configuration": {
      "doc": [
        "LACP, the Link Aggregation Control Protocol, is an IEEE standard that allows",
        "switches to automatically detect that they are connected by multiple links and",
        "aggregate across those links.  These settings control LACP behavior."
      ]
    },
    "/Subsystem/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/Nexthop/Status": {
      "doc": [
        "Status information to indicate the current state of the nexthop."
      ]
    },
    "/VLAN/ACL Status": {
      "doc": [
        "Status of applied ACLs and ACL statistics per VLAN."
      ]
    },
    "/BGP_Neighbor/BGP Neighbor or Peer group Status Info": {
      "doc": [
        "The `status` column contains one or more informational entries indicating",
        "various status values for this BGP neighbor."
      ]
    },
    "/Route_Map/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/System/NTP configuration": {
      "doc": [
        "Specifies the NTP global configuration."
      ]
    },
    "/MSTP_Common_Instance_Port/Status": {
      "doc": [
        "These are status parameters for the common instance. These values will be",
        "calculated from the time of protocol initialization."
      ]
    },
    "/System/COPP Statistics": {
      "doc": [
        "Contains key-value pairs that report overall Control Plane Policing statistics",
        "regarding packets/bytes delivered to the management CPU or packets/bytes dropped",
        "due to excessive rate."
      ]
    },
    "/ACL/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/Interface/Hardware Interface Configuration": {
      "doc": [
        "The following fields are not meant to be configured by the user, but rather by",
        "`intfd` daemon that is responsible to consider user configuration or the port",
        "admin_state configuration and business logic in order to determine hardware",
        "configuration. When port associated with the interface is configured to down the",
        "hardware configuration is forced to down."
      ]
    },
    "/VLAN/ACL Configuration": {
      "doc": [
        "ACL applied to VLANs."
      ]
    },
    "/System/Statistics": {
      "doc": [
        "The `statistics` column contains key-value pairs that report statistics about a",
        "system running OpenSwitch.  These are updated periodically (by default, every 5",
        "seconds).  Key-value pairs that cannot be determined or that do not apply to a",
        "platform are omitted."
      ]
    },
    "/Q_Profile/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/BGP_Router/Configuration": {
      "doc": [
        "BGP_router includes all bgp config related information. The entries are created",
        "on per asn basis."
      ]
    },
    "/Mirror/Mirroring Source(s) Configuration": {
      "doc": [
        "To be selected for mirroring, a given packet must enter or leave the bridge",
        "through a selected port.  If a source port is in both the select_src_port and",
        "select_dst_port sets, then both transmitted and received packets will be",
        "mirrored."
      ]
    },
    "/VLAN/Internal VLAN Config": {
      "doc": [
        "Information about how this VLAN is used internally by the system. VLAN could be",
        "used for L3 interface, sflow, etc."
      ]
    },
    "/Port/QoS configuration": {
      "doc": [
        "Specifies QoS (Quality of Service) port configuration options."
      ]
    },
    "/Bridge/MSTP Status": {
      "doc": [
        "MSTP global status for all MSTIs."
      ]
    },
    "/Bridge/MSTP Configurations": {
      "doc": [
        "MSTP global configurations for all MSTIs."
      ]
    },
    "/NTP_Association/NTP Association Status": {
      "doc": [
        "Status information about NTP associations. For more info refer to",
        "`http://doc.ntp.org/4.2.6p5/debug.html`"
      ]
    },
    "/Interface/Statistics": {
      "doc": [
        "Key-value pairs that report interface statistics.  The current implementation",
        "updates these counters periodically.  The update period is controlled by [stats-",
        "update-interval](System.other_config.stats-update-interval) in the",
        "[System](System) table.",
        "",
        "If an interface does not support a given statistic, then that pair is omitted."
      ]
    },
    "/Prefix_List_Entry/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/SSL/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/System/Loop-protect Configuration": {
      "doc": [
        "Contains global configuration for the Loop-protect feature."
      ]
    },
    "/MSTP_Instance_Port/Status": {
      "doc": [
        "These are status parameters for the port. These values will be calculated at the",
        "time of protocol initialization."
      ]
    },
    "/Port/Port Status": {
      "doc": [
        "Status information about ports attached to bridges."
      ]
    },
    "/Port/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/ACL_Entry/ACL L4 Port Configuration": {
      "doc": [
        "L4 Port: specifies the IPv4 L4 port to be used as the minimum value.  It is used",
        "in conjunction with src/dst_l4_port_max and src/dst_l4_port_range_reverse to",
        "determine the desired L4 port functionality:  Applicable to TCP and UDP",
        "protocols."
      ]
    },
    "/Manager/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/Interface/User Configuration": {
      "doc": [
        "The following fields are meant to be configured by the user. It represents the",
        "configuration of the interface in the bridge."
      ]
    },
    "/Port/VLAN Configuration": {
      "doc": [
        "Bridge ports support the following types of VLAN configuration:",
        "",
        "+ __trunk__:    A trunk port carries packets on one or more VLANs specified in",
        "the [trunks](Port.trunks) column (or all VLANs defined in [VLAN](VLAN) table if",
        "trunks is empty or not specified). A packet that ingresses on a trunk port is in",
        "the VLAN specified in its 802.1Q header, or VLAN 1 if the packet has no 802.1Q",
        "header.  A packet that egresses through a trunk port will have an 802.1Q header",
        "if it has a nonzero VLAN ID.    Any packet that ingresses on a trunk port tagged",
        "with a VLAN that the port does not trunk is dropped.",
        "+ __access__:    An access port carries packets on exactly one VLAN specified in",
        "the [tag](Port.tag) column.  Packets egressing on an access port have no 802.1Q",
        "header.    Any packet with an 802.1Q header with a nonzero VLAN ID that",
        "ingresses on an access port is dropped, regardless of whether the VLAN ID in the",
        "header is the access port's VLAN ID.",
        "+ __native-tagged__:   A native-tagged port resembles a trunk port, with the",
        "exception that a packet without an 802.1Q header that ingresses on a native-",
        "tagged port is in the ``native VLAN'' (specified in the [tag](Port.tag) column).",
        "+ __native-untagged__:   A native-untagged port resembles a native-tagged port,",
        "with the exception that a packet that egresses on a native-untagged port in the",
        "native VLAN will not have an 802.1Q header.",
        "",
        "A packet will only egress through bridge ports that carry the VLAN of the",
        "packet, as described by the rules above."
      ]
    },
    "/Route_Map_Entry/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/CLI_Alias/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/Port/ACL Status": {
      "doc": [
        "Status of applied ACLs and ACLs statistics per port."
      ]
    },
    "/Fan/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/MSTP_Instance/Status": {
      "doc": [
        "These are status parameters for a particular MSTP instance. These values will be",
        "calculated at the time of protocol initialization."
      ]
    },
    "/BGP_Route/Path attributes": {
      "doc": [
        "The `path_attributes` column contains key-value pairs that represent route",
        "attributes."
      ]
    },
    "/QoS/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/Interface/Hardware Interface Information": {
      "doc": [
        "The following fields describes the hardware information of",
        "[Interface](Interface). These values do not change through the life of the",
        "system."
      ]
    },
    "/Q_Profile_Entry/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    },
    "/System/ECMP configuration": {
      "doc": [
        "Specifies the various ECMP (Equal Cost Multi-Path) configuration options."
      ]
    },
    "/Interface/Interface Status": {
      "doc": [
        "Status information about interfaces attached to bridges, updated every 5",
        "seconds.  Not all interfaces have all of these properties; virtual interfaces",
        "don't have a link speed, for example.  Non-applicable columns will have empty",
        "values."
      ]
    },
    "/Mirror/Common Columns": {
      "doc": [
        "The overall purpose of these columns is described under `Common Columns` at the",
        "beginning of this document."
      ]
    }
  },
  "tables": {
    "System": {
      "doc": [
        "Configuration for an OpenSwitch system. There must be exactly one record in the",
        "[System](System) table."
      ],
      "columns": {
        "db_version": {
          "category": "status",
          "doc": [
            "The database schema version number in the form `_major_._minor_._tweak_`, e.g.",
            "`1.2.3`.  Whenever the database schema is changed in a non-backward compatible",
            "way (e.g. deleting a column or a table), _major_ is incremented.  When the",
            "database schema is changed in a backward compatible way (e.g. adding a new",
            "column), _minor_ is incremented.  When the database schema is changed",
            "cosmetically (e.g. reindenting its syntax), _tweak_ is incremented.",
            "",
            "The schema version is part of the database schema, so it can also be retrieved",
            "by fetching the schema using the Open vSwitch database protocol."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string"
            },
            "min": 0
          },
          "group": "/System/Version Reporting"
        },
        "dns_servers": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": {
              "type": "string"
            },
            "min": 0
          },
          "group": "/System/Configuration"
        },
        "qos": {
          "category": "configuration",
          "doc": [
            "Specifies the schedule profile for ports that do not specify their own schedule",
            "profile (see [Port](Port) qos column). When missing, the [QoS](QoS) row with",
            "[hw_default](QoS.hw_default) true will be used."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "uuid",
              "refTable": "QoS"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/System/QoS configuration"
        },
        "ntp_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "authentication_enable": {
                "emptyValue": false,
                "doc": [
                  "Determines whether NTP Authentication is enabled in the system. Default is",
                  "false."
                ],
                "type": "boolean",
                "group": "/System/NTP configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/System/NTP configuration"
        },
        "next_cfg": {
          "doc": [
            "Sequence number for client to increment.  When a client modifies any part of the",
            "database configuration and wishes to wait for OpenSwitch to finish applying the",
            "changes, it may increment this sequence number."
          ],
          "type": "integer",
          "group": "/System/Status"
        },
        "qos_cos_map_entries": {
          "category": "configuration",
          "doc": [
            "Contains references to each entry in the global COS map used by port trust mode",
            "COS. (see [QoS_DSCP_Map_Entry](QoS_DSCP_Map_Entry))"
          ],
          "type": {
            "max": 8,
            "key": {
              "type": "uuid",
              "refTable": "QoS_COS_Map_Entry"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/System/QoS configuration"
        },
        "asset_tag_number": {
          "category": "configuration",
          "type": "string",
          "group": "/System/Configuration"
        },
        "broadview_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "client_ip": {
                "emptyValue": "127.0.0.1",
                "doc": [
                  "Specifies BroadView client ip address. This is the IP that BroadView Agent tries",
                  "to reach out to send async reports. If the value is not configured then default",
                  "is 127.0.0.1."
                ],
                "type": "string",
                "group": "/System/BroadView configuration"
              },
              "enabled": {
                "emptyValue": false,
                "doc": [
                  "Specifies whether the BroadView feature is enabled on the system. False, if the",
                  "value is not present."
                ],
                "type": "boolean",
                "group": "/System/BroadView configuration"
              },
              "client_port": {
                "emptyValue": 9070,
                "doc": [
                  "Specifies BroadView client tcp port number. This is the port number along with",
                  "client_ip that BroadView agent shoud try to reach out to send async reports. If",
                  "no value is set, the default is 9070."
                ],
                "type": {
                  "minInteger": 1,
                  "maxInteger": 65535,
                  "type": "integer"
                },
                "group": "/System/BroadView configuration"
              },
              "agent_port": {
                "emptyValue": 8080,
                "doc": [
                  "Specifies BroadView agent tcp port number. Agent listens on this port for client",
                  "connections. If no value is set, the default is 8080."
                ],
                "type": {
                  "minInteger": 1,
                  "maxInteger": 65535,
                  "type": "integer"
                },
                "group": "/System/BroadView configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/System/BroadView configuration"
        },
        "syslog_remotes": {
          "category": "configuration",
          "doc": [
            "List of syslog servers to which syslog messages will be forwarded.",
            "[Syslog_Remote](Syslog_Remote)"
          ],
          "type": {
            "max": 4,
            "key": {
              "type": "uuid",
              "refTable": "Syslog_Remote"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/System/Configuration/Syslog Remotes Configurations"
        },
        "qos_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "qos_trust": {
                "doc": [
                  "Specifies the QoS Trust Mode for ports that do not specify their own Trust Mode",
                  "(see [Port](Port) qos_config column).",
                  "",
                  "`none` - no fields are inspected on arriving packets.  The initial local-",
                  "priority and color meta-data values are taken from PCP 0 entry of the COS Map",
                  "table (see [QoS_COS_Map_Entry](QoS_COS_Map_Entry)).",
                  "",
                  "`cos` - will use the PCP of the outermost 802.1 VLAN tag to index the COS Map",
                  "entry to initialize the local-priority and color meta-data values of the packet.",
                  "For untagged packets, the initial local-priority and color meta-data values are",
                  "taken from PCP 0 entry of the COS Map table (see",
                  "[QoS_COS_Map_Entry](QoS_COS_Map_Entry)).",
                  "",
                  "`dscp` - will use the DSCP value of IP packets to index the DSCP Map entry to",
                  "initialize the local-priority and color meta-data values of the packet.  For",
                  "non-IP packets, what meta-data values are assigned is hardware dependent.",
                  "",
                  "If the key is not specified, then the system will use 'none'."
                ],
                "type": {
                  "enum": [
                    "none",
                    "cos",
                    "dscp"
                  ],
                  "type": "string"
                },
                "group": "/System/QoS configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/System/QoS configuration"
        },
        "manager_options": {
          "category": "configuration",
          "doc": [
            "Database clients to which the OpenSwitch database server should connect or to",
            "which it should listen, along with options for how these connection should be",
            "configured.  See the [Manager](Manager) table for more information."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "Manager"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/System/Database Configuration"
        },
        "ntp_statistics": {
          "category": "statistics",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "ntp_pkts_declined": {
                "doc": [
                  "Number of packets denied access for any reason."
                ],
                "type": "string",
                "group": "/System/Statistics/NTP Statistics"
              },
              "ntp_pkts_with_older_version": {
                "doc": [
                  "Number of packets matching the previous NTP version."
                ],
                "type": "string",
                "group": "/System/Statistics/NTP Statistics"
              },
              "ntp_pkts_with_auth_failed": {
                "doc": [
                  "Number of packets not verified as authentic."
                ],
                "type": "string",
                "group": "/System/Statistics/NTP Statistics"
              },
              "ntp_pkts_with_bad_length_or_format": {
                "doc": [
                  "Number of packets with invalid length, format or port number."
                ],
                "type": "string",
                "group": "/System/Statistics/NTP Statistics"
              },
              "ntp_pkts_restricted": {
                "doc": [
                  "Number of packets restricted for any reason."
                ],
                "type": "string",
                "group": "/System/Statistics/NTP Statistics"
              },
              "ntp_pkts_rate_limited": {
                "doc": [
                  "Number of packets discarded due to rate limitation."
                ],
                "type": "string",
                "group": "/System/Statistics/NTP Statistics"
              },
              "ntp_pkts_with_current_version": {
                "doc": [
                  "Number of packets matching the current NTP version."
                ],
                "type": "string",
                "group": "/System/Statistics/NTP Statistics"
              },
              "ntp_pkts_kod_responses": {
                "doc": [
                  "Number of KoD packets from the server."
                ],
                "type": "string",
                "group": "/System/Statistics/NTP Statistics"
              },
              "ntp_pkts_received": {
                "doc": [
                  "Total number of packets received."
                ],
                "type": "string",
                "group": "/System/Statistics/NTP Statistics"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "ephemeral": true,
          "group": "/System/Statistics/NTP Statistics"
        },
        "ecmp_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "resilient_hash_enabled": {
                "emptyValue": true,
                "doc": [
                  "Determines whether ECMP hashing preserves traffic flows when ECMP group",
                  "membership changes. Default is true."
                ],
                "type": "boolean",
                "group": "/System/ECMP configuration"
              },
              "enabled": {
                "emptyValue": true,
                "doc": [
                  "Determines whether ECMP is enabled in the system. Default is true."
                ],
                "type": "boolean",
                "group": "/System/ECMP configuration"
              },
              "hash_dstport_enabled": {
                "emptyValue": true,
                "doc": [
                  "Determines whether destination TCP/UDP port participates in ECMP hash",
                  "calculation. Default is true."
                ],
                "type": "boolean",
                "group": "/System/ECMP configuration"
              },
              "hash_srcport_enabled": {
                "emptyValue": true,
                "doc": [
                  "Determines whether source TCP/UDP port participates in ECMP hash calculation.",
                  "Default is true."
                ],
                "type": "boolean",
                "group": "/System/ECMP configuration"
              },
              "hash_srcip_enabled": {
                "emptyValue": true,
                "doc": [
                  "Determines whether source IP participates in ECMP hash calculation. Default is",
                  "true."
                ],
                "type": "boolean",
                "group": "/System/ECMP configuration"
              },
              "hash_dstip_enabled": {
                "emptyValue": true,
                "doc": [
                  "Determines whether destination IP participates in ECMP hash calculation. Default",
                  "is true."
                ],
                "type": "boolean",
                "group": "/System/ECMP configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/System/ECMP configuration"
        },
        "dhcp_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "v4relay_option82_remote_id": {
                "emptyValue": "mac",
                "doc": [
                  "Specifies the remote ID suboption that the switch uses in Option 82 fields added",
                  "or appended to DHCP client packets. The type of remote ID defines DHCP policy",
                  "areas in the client requests sent to the DHCP server.",
                  "",
                  "`ip` - Specifies the IP address of the interface on which the client DHCP packet",
                  "enters the switch.",
                  "",
                  "`mac` - Specifies the router's MAC address. (The MAC address used is the same",
                  "MAC address that is assigned to all interfaces configured on the routing",
                  "switch.)",
                  "",
                  "If the key is not specified, configuration is assumed to be \"mac\"."
                ],
                "type": {
                  "enum": [
                    "ip",
                    "mac"
                  ],
                  "type": "string"
                },
                "group": "/System/DHCP Configurations"
              },
              "v6relay_option79_enabled": {
                "doc": [
                  "Set this value to `true` to enable the DHCPv6-Relay Option 79 and set it to",
                  "`false` otherwise. This configuration is disabled by default."
                ],
                "type": "boolean",
                "group": "/System/DHCP Configurations"
              },
              "v4relay_option82_policy": {
                "doc": [
                  "Specifies the forwarding policy of DHCP-Relay Option 82.",
                  "",
                  "`drop` - Drop an inbound dhcp-client request with an Option 82 field already",
                  "appended. If no Option 82 fields are present, drop causes the router to add an",
                  "Option 82 field to dhcp request and forward.",
                  "",
                  "`keep` - If the relay agent receives a client request that already has one or",
                  "more Option 82 fields, keep causes the relay agent to retain such fields and",
                  "forward the request without adding another Option 82 field. But if the incoming",
                  "client request does not already have any Option 82 fields, the relay agent",
                  "appends an Option 82 field and forwards the dhcp request.",
                  "",
                  "`replace` - Replace any existing Option 82 fields from downstream relay agents",
                  "(and/or the originating client) with an Option 82 field for the current relay",
                  "agent.",
                  "",
                  "If the keys is missing, Option 82 configuration is assumed to be disabled."
                ],
                "type": {
                  "enum": [
                    "drop",
                    "keep",
                    "replace"
                  ],
                  "type": "string"
                },
                "group": "/System/DHCP Configurations"
              },
              "v4relay_hop_count_increment_disabled": {
                "emptyValue": false,
                "doc": [
                  "Set this value to `true` to disable the hop count increment in the relayed DHCP",
                  "requests and set it to `false` otherwise. This configuration is enabled by",
                  "default. If the key is missing, the configuration is assumed to be enabled."
                ],
                "type": "boolean",
                "group": "/System/DHCP Configurations"
              },
              "v4relay_disabled": {
                "emptyValue": false,
                "doc": [
                  "Set this value to `true` to disable DHCP-Relay functionality globally and set it",
                  "to `false` to enable it. DHCP-Relay is enabled by default. If the key is",
                  "missing, the configuration is assumed to be enabled. Though DHCP-Relay",
                  "configuration is enabled globally, the functionality is effective only after the",
                  "port level server configuration."
                ],
                "type": "boolean",
                "group": "/System/DHCP Configurations"
              },
              "v4relay_option82_enabled": {
                "emptyValue": false,
                "doc": [
                  "Set this value to `true` to enable the DHCP-Relay Option 82 and set it to",
                  "`false` otherwise. This configuration is disabled by default. If the key is",
                  "missing, the configuration is assumed to be disabled."
                ],
                "type": "boolean",
                "group": "/System/DHCP Configurations"
              },
              "v4relay_option82_validation_enabled": {
                "emptyValue": false,
                "doc": [
                  "Set this value to `true` to validate server response packets and set it to",
                  "`false` otherwise. This configuration is disabled by default. If the key is",
                  "missing, the configuration is assumed to be disabled. This configuration is",
                  "valid only for drop or replace dhcp-relay Option 82 policy."
                ],
                "type": "boolean",
                "group": "/System/DHCP Configurations"
              },
              "v6relay_enabled": {
                "doc": [
                  "Set this value to `true` to enable DHCPv6-Relay functionality globally and set",
                  "it to `false` to disable it. This configuration is disabled by default. Though",
                  "DHCPv6-Relay configuration is enabled globally, the functionality is effective",
                  "only after the port level server configuration."
                ],
                "type": "boolean",
                "group": "/System/DHCP Configurations"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/System/DHCP Configurations"
        },
        "management_vrf": {
          "type": {
            "max": 1,
            "key": {
              "type": "uuid",
              "refTable": "VRF"
            },
            "min": 0
          }
        },
        "ntp_status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "uptime": {
                "doc": [
                  "Time in hours since the system was last rebooted."
                ],
                "type": "string",
                "group": "/System/Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "doc": [
            "This column holds the global status information for NTP."
          ],
          "ephemeral": true,
          "group": "/System/Status"
        },
        "bridges": {
          "category": "configuration",
          "doc": [
            "Set of bridges."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "Bridge"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/System/Configuration"
        },
        "subsystems": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "Subsystem"
            },
            "min": 0
          },
          "group": "/System/Configuration",
          "relationship": "1:m"
        },
        "statistics": {
          "category": "statistics",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "load_average": {
                "doc": [
                  "A comma-separated list of three floating-point numbers, representing the system",
                  "load average over the last 1, 5, and 15 minutes, respectively."
                ],
                "type": "string",
                "group": "/System/Statistics"
              },
              "process_NAME": {
                "doc": [
                  "One such key-value pair, with `NAME` replaced by a process name, will exist for",
                  "each running OpenSwitch daemon process, with _name_ replaced by the daemon's",
                  "name (e.g. `process_sysd`).  The value is a comma-separated list of integers.",
                  "The integers represent the following, with memory measured in kilobytes and",
                  "durations in milliseconds:",
                  "",
                  "1. The process's virtual memory size.",
                  "1. The process's resident set size.",
                  "1. The amount of user and system CPU time consumed by the process.",
                  "1. The number of times that the process has crashed and been automatically",
                  "restarted by the monitor.",
                  "1. The duration since the process was started.",
                  "1. The duration for which the process has been running.",
                  "",
                  "The interpretation of some of these values depends on whether the process was",
                  "started with the `--monitor`.  If it was not, then the crash count will always",
                  "be 0 and the two durations will always be the same.  If `--monitor` was given,",
                  "then the crash count may be positive; if it is, the latter duration is the",
                  "amount of time since the most recent crash and restart.",
                  "",
                  "There will be one key-value pair for each file in OpenSwitch's ``run directory''",
                  "(usually `/var/run/openvswitch`) whose name ends in `.pid`, whose contents are a",
                  "process ID, and which is locked by a running process.  The _name_ is taken from",
                  "the pidfile's name."
                ],
                "type": "string",
                "group": "/System/Statistics"
              },
              "cpu": {
                "doc": [
                  "Number of CPU processors, threads, or cores currently online and available to",
                  "the operating system, as an integer.  This may be less than the number",
                  "installed, if some are not online or if they are not available to the operating",
                  "system."
                ],
                "type": {
                  "minInteger": 1,
                  "type": "integer"
                },
                "group": "/System/Statistics"
              },
              "file_systems": {
                "doc": [
                  "A space-separated list of information on local, writable file systems.  Each",
                  "item in the list describes one file system and consists in turn of a comma-",
                  "separated list of the following:",
                  "",
                  "1. Mount point, e.g. `/` or `/var/log`. Any spaces or commas in the mount point",
                  "are replaced by underscores.",
                  "1. Total size, in kilobytes, as an integer.",
                  "1. Amount of storage in use, in kilobytes, as an integer.",
                  "",
                  "This key-value pair is omitted if there are no local, writable file systems or",
                  "if OpenSwitch cannot obtain the needed information."
                ],
                "type": "string",
                "group": "/System/Statistics"
              },
              "memory": {
                "doc": [
                  "A comma-separated list of integers, each of which represents a quantity of",
                  "memory in kilobytes that describes the operating system.  In respective order,",
                  "these values are:",
                  "",
                  "1. Total amount of RAM allocated to the OS.",
                  "1. RAM allocated to the OS that is in use.",
                  "1. RAM that can be flushed out to disk or otherwise discarded if that space is",
                  "needed for another purpose.  This number is necessarily less than or equal to",
                  "the previous value.",
                  "1. Total disk space allocated for swap.",
                  "1. Swap space currently in use."
                ],
                "type": "string",
                "group": "/System/Statistics"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "ephemeral": true,
          "group": "/System/Statistics"
        },
        "auto_provisioning_status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "url": {
                "doc": [
                  "Specifies the URL that was used to fetch auto-provisioning script. Would not be",
                  "present if auto-provisioning was not performed."
                ],
                "type": "string",
                "group": "/System/Database Configuration"
              },
              "performed": {
                "emptyValue": false,
                "doc": [
                  "Specifies whether auto-provisioning was performed. False if not specified."
                ],
                "type": "boolean",
                "group": "/System/Database Configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/System/Database Configuration"
        },
        "hostname": {
          "category": "configuration",
          "type": "string",
          "group": "/System/Configuration"
        },
        "domain_name": {
          "category": "configuration",
          "doc": [
            "Domain name as configured by the user."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string"
            },
            "min": 0
          },
          "group": "/System/Configuration"
        },
        "acls": {
          "category": "configuration",
          "doc": [
            "List of all Access Control Lists (ACLs) in the system.  The existence of the",
            "list is not an indication that it has been applied."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "ACL"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/System/Database Configuration"
        },
        "mgmt_intf": {
          "category": "configuration",
          "doc": [
            "This column is a map of string-string pairs Management interface column contains",
            "the attributes of management interface. The keys are name, mode, ip, subnet",
            "mask, default gateway, dns server IPv4 addresses. This column holds values that",
            "are configured by the user."
          ],
          "type": {
            "max": "unlimited",
            "valueMap": {
              "name": {
                "doc": [
                  "The value for this key is a valid interface name that is to be configured as",
                  "management interface"
                ],
                "type": "string",
                "group": "/System/Database Configuration"
              },
              "default_gateway": {
                "doc": [
                  "The value for this key is default gateway IPv4 address."
                ],
                "type": "string",
                "group": "/System/Database Configuration"
              },
              "ip": {
                "doc": [
                  "The value for this key is interface IPv4 address of the management interface."
                ],
                "type": "string",
                "group": "/System/Database Configuration"
              },
              "default_gateway_v6": {
                "doc": [
                  "The value for this key is default gateway IPv6 address"
                ],
                "type": "string",
                "group": "/System/Database Configuration"
              },
              "subnet_mask": {
                "doc": [
                  "The value for this key is subnet mask of the interface IP of management",
                  "interface in CIDR format. The valid value range is 1 to 31."
                ],
                "type": "string",
                "group": "/System/Database Configuration"
              },
              "dns_server_2": {
                "doc": [
                  "The value for this key is Secondary nameserver IPv4 address."
                ],
                "type": "string",
                "group": "/System/Database Configuration"
              },
              "mode": {
                "emptyValue": "dhcp",
                "doc": [
                  "The value is static or dhcp based on the mode in which the management ip is to",
                  "be obtained. Default value is dhcp."
                ],
                "type": "string",
                "group": "/System/Database Configuration"
              },
              "ipv6": {
                "doc": [
                  "The value for this key is IPv6 address of the management interface. Possible",
                  "value X:X::X:X/M."
                ],
                "type": "string",
                "group": "/System/Database Configuration"
              },
              "dns_server_1": {
                "doc": [
                  "The value for this key is Primary nameserver IPv4 address."
                ],
                "type": "string",
                "group": "/System/Database Configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/System/Database Configuration"
        },
        "radius_servers": {
          "category": "configuration",
          "doc": [
            "Specifies radius servers configuration. See the [Radius_Server](Radius_Server)",
            "table for more information."
          ],
          "type": {
            "max": 64,
            "key": {
              "type": "uuid",
              "refTable": "Radius_Server"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/System/Database Configuration"
        },
        "next_hw": {
          "doc": [
            "Sequence number to indicate that a change has occurred in the hardware",
            "configuration (e.g., a subsystem has been added or removed)."
          ],
          "type": "integer",
          "group": "/System/Status"
        },
        "cur_hw": {
          "doc": [
            "Sequence number that indicates the current change level for the h/w",
            "configuration. When [cur_hw](System.cur_hw) is the same as",
            "[next_hw](System.next_hw), then all platform daemon processing has completed in",
            "response to the hardware addition or removal. This is not used for transceiver",
            "pluggable module insertion/removal."
          ],
          "type": "integer",
          "group": "/System/Status"
        },
        "vrfs": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "VRF"
            },
            "min": 0
          },
          "group": "/System/Configuration",
          "relationship": "1:m"
        },
        "router_id": {
          "category": "configuration",
          "type": {
            "max": 2,
            "valueMap": {
              "router_id_val": {
                "doc": [
                  "The system global router identifier. Any routing protocol may pick up this as",
                  "router id, if it doesn't have a specific one configured. The router-ID may be an",
                  "IPv4 address of the router. It can be any arbitrary 32bit number. However it",
                  "MUST be non-zero and unique within the entire Autonomus System domain."
                ],
                "type": {
                  "minInteger": 1,
                  "maxInteger": 4294967295,
                  "type": "integer"
                },
                "group": "/System/Configuration"
              },
              "router_id_static": {
                "emptyValue": false,
                "doc": [
                  "This determines whether the system global router-ID is configured statically or",
                  "selected by Routing Manager dynamically. The default value is false."
                ],
                "type": "boolean",
                "group": "/System/Configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/System/Configuration"
        },
        "management_mac": {
          "category": "status",
          "doc": [
            "Ethernet MAC address for the management interface port for this system."
          ],
          "type": {
            "key": {
              "minLength": 17,
              "type": "string",
              "maxLength": 17
            }
          },
          "group": "/System/Configuration"
        },
        "other_info": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "max_acls": {
                "doc": [
                  "Total number of ACLs that may be configured in the system."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 4294967295,
                  "type": "integer"
                },
                "group": "/System/ACL Limits"
              },
              "max_aces_per_acl": {
                "doc": [
                  "Total number of ACL entries that may be configured in one ACL."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 512,
                  "type": "integer"
                },
                "group": "/System/ACL Limits"
              },
              "max_aces": {
                "doc": [
                  "Total number of ACL entries that may be configured in the system."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 4294967295,
                  "type": "integer"
                },
                "group": "/System/ACL Limits"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/System/ACL Limits"
        },
        "q_profile": {
          "category": "configuration",
          "doc": [
            "Specifies the queue profile for ports that do not specify their own queue",
            "profile (see [Port](Port) q_profile column). When missing, the",
            "[Q_Profile](Q_Profile) row with [hw_default](Q_Profile.hw_default) true will be",
            "used."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "uuid",
              "refTable": "Q_Profile"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/System/QoS configuration"
        },
        "ssl": {
          "category": "configuration",
          "type": {
            "max": 1,
            "key": {
              "type": "uuid",
              "refTable": "SSL"
            },
            "min": 0
          },
          "group": "/System/Configuration",
          "relationship": "1:m"
        },
        "copp_statistics": {
          "category": "statistics",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "total_packets_dropped": {
                "doc": [
                  "Total number of protocol packets dropped due to excessive rate."
                ],
                "type": "string",
                "group": "/System/COPP Statistics"
              },
              "total_bytes_passed": {
                "doc": [
                  "Total number of protocol bytes delivered to the management CPU."
                ],
                "type": "string",
                "group": "/System/COPP Statistics"
              },
              "total_bytes_dropped": {
                "doc": [
                  "Total number of protocol bytes dropped due to excessive rate."
                ],
                "type": "string",
                "group": "/System/COPP Statistics"
              },
              "total_packets_passed": {
                "doc": [
                  "Total number of protocol packets delivered to the management CPU."
                ],
                "type": "string",
                "group": "/System/COPP Statistics"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "ephemeral": true,
          "group": "/System/COPP Statistics"
        },
        "boot_time": {
          "category": "status",
          "doc": [
            "Boot time of the machine, represented in seconds since 1970-01-01 00:00:00 UTC.",
            "OVSDB integers are 64 bit, which means it will take some time until we roll",
            "over."
          ],
          "type": "integer",
          "group": "/System/Status"
        },
        "daemons": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "Daemon"
            },
            "min": 0
          },
          "group": "/System/Configuration",
          "relationship": "1:m"
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/System/Common Columns"
        },
        "logrotate_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "maxsize": {
                "emptyValue": 10,
                "doc": [
                  "Log size (in megabytes), which would trigger rotation. 10 megabytes if not",
                  "specified"
                ],
                "type": {
                  "minInteger": 1,
                  "maxInteger": 200,
                  "type": "integer"
                },
                "group": "/System/Logrotate configuration"
              },
              "period": {
                "emptyValue": "daily",
                "doc": [
                  "The user configured period of logrotation. The possible values are",
                  "'hourly','daily','weekly'or 'monthly'. Default value is 'daily'"
                ],
                "type": {
                  "enum": [
                    "hourly",
                    "daily",
                    "weekly",
                    "monthly"
                  ],
                  "type": "string"
                },
                "group": "/System/Logrotate configuration"
              },
              "target": {
                "doc": [
                  "The user configured URI of the remote host .The valid value is",
                  "'tftp://A.B.C.D'.If not specified log files will be rotated locally."
                ],
                "type": "string",
                "group": "/System/Logrotate configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/System/Logrotate configuration"
        },
        "lldp_statistics": {
          "category": "statistics",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "lldp_table_inserts": {
                "emptyValue": "0",
                "doc": [
                  "Number of neighbor entries inserted to LLDP neighbor table. Default is 0."
                ],
                "type": "string",
                "group": "/System/Statistics/LLDP Statistics"
              },
              "lldp_table_ageouts": {
                "emptyValue": "0",
                "doc": [
                  "Number of times neighbor info was deleted from LLDP neighbor table because of",
                  "the TTL timer associated with a neighbor has expired. Default is 0."
                ],
                "type": "string",
                "group": "/System/Statistics/LLDP Statistics"
              },
              "lldp_table_drops": {
                "emptyValue": "0",
                "doc": [
                  "Number of neighbor entries that could not be added to LLDP neighbor table and",
                  "dropped. Default is 0."
                ],
                "type": "string",
                "group": "/System/Statistics/LLDP Statistics"
              },
              "lldp_table_deletes": {
                "emptyValue": "0",
                "doc": [
                  "Number of neighbor entries deleted from LLDP neighbor table. Default is 0."
                ],
                "type": "string",
                "group": "/System/Statistics/LLDP Statistics"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "ephemeral": true,
          "group": "/System/Statistics/LLDP Statistics"
        },
        "mgmt_intf_status": {
          "category": "status",
          "doc": [
            "This column holds the status of the management interface IP parameters. This",
            "column contains key-value pairs that report the mangement interface IP",
            "attributes like IP address, subnet, default gateway, primary and secondary name",
            "server. These values are either statically configured by the user or populated",
            "by the DHCP client. The keys of this column is same as that of mgmt_intf column."
          ],
          "type": {
            "max": "unlimited",
            "valueMap": {
              "dhcp_domain_name": {
                "doc": [
                  "The domain name as it was received from dhcp."
                ],
                "type": "string",
                "group": "/System/Status"
              },
              "hostname": {
                "emptyValue": "switch",
                "doc": [
                  "Hostname the system is configured with. Hostname can be configured through CLI,",
                  "or specified in DHCP messages. If none of these are available, it defaults to",
                  "\"switch\"."
                ],
                "type": "string",
                "group": "/System/Status"
              },
              "domain_name": {
                "doc": [
                  "This key contains the domain name configured for the system. It can be",
                  "configured by the user or through dhcp messages. If none of these are present",
                  "the key itself ceases to exist."
                ],
                "type": "string",
                "group": "/System/Status"
              },
              "dhcp_hostname": {
                "doc": [
                  "Holds hostname configured by dhcp client."
                ],
                "type": "string",
                "group": "/System/Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/System/Status"
        },
        "switch_version": {
          "category": "status",
          "doc": [
            "The OpenSwitch version number, e.g. `0.1.0`."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string"
            },
            "min": 0
          },
          "group": "/System/Version Reporting"
        },
        "status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "lldp_last_clear_counters_performed": {
                "doc": [
                  "Last time when clear statistic counters was perfomed."
                ],
                "type": "string",
                "group": "/System/Status/LLDP Status Info"
              },
              "lldp_local_system_name": {
                "doc": [
                  "System Name currently being advertised by LLDP."
                ],
                "type": "string",
                "group": "/System/Status/LLDP Status Info"
              },
              "lldp_local_system_desc": {
                "doc": [
                  "System Description info currently being advertised by LLDP."
                ],
                "type": "string",
                "group": "/System/Status/LLDP Status Info"
              },
              "lldp_local_system_cap": {
                "doc": [
                  "System Capabilities currently being advertised by LLDP."
                ],
                "type": "string",
                "group": "/System/Status/LLDP Status Info"
              },
              "lldp_num_clear_counters_requested": {
                "doc": [
                  "Number of times clear statistic counters was requested by user."
                ],
                "type": "string",
                "group": "/System/Status/LLDP Status Info"
              },
              "lldp_last_table_change_time": {
                "doc": [
                  "Last time when LLDP neighbor table was changed."
                ],
                "type": "string",
                "group": "/System/Status/LLDP Status Info"
              },
              "lldp_last_clear_table_performed": {
                "doc": [
                  "Last time when neighbor table was cleared."
                ],
                "type": "string",
                "group": "/System/Status/LLDP Status Info"
              },
              "lldp_num_clear_table_requested": {
                "doc": [
                  "Number of times clearing of neighbor table was requested by user."
                ],
                "type": "string",
                "group": "/System/Status/LLDP Status Info"
              },
              "lldp_local_mgmt_ip": {
                "doc": [
                  "Management IP Address currently being advertised by LLDP."
                ],
                "type": "string",
                "group": "/System/Status/LLDP Status Info"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "doc": [
            "System level status information per service like `LLDP`, etc."
          ],
          "ephemeral": true,
          "group": [
            "/System/Status",
            "/System/Status/LLDP Status Info"
          ]
        },
        "lacp_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "lacp-system-id": {
                "doc": [
                  "The LACP system ID of this [Bridge](Bridge).  The system ID of a LACP bond is",
                  "used to identify itself to its partners.  Must be a nonzero MAC address.",
                  "Defaults to the bridge Ethernet address if unset."
                ],
                "type": "string",
                "group": "/System/Configuration/LACP Configurations"
              },
              "lacp-system-priority": {
                "emptyValue": 65534,
                "doc": [
                  "The LACP system priority of this [Bridge](Bridge).  In LACP negotiations, link",
                  "status decisions are made by the system with the numerically lower priority.",
                  "Defaults to 65534."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 65535,
                  "type": "integer"
                },
                "group": "/System/Configuration/LACP Configurations"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/System/Configuration/LACP Configurations"
        },
        "snmp_communities": {
          "category": "configuration",
          "doc": [
            "Community strings to be used by the system when communicating over",
            "SNMPv1/SNMPv2c."
          ],
          "type": {
            "max": 10,
            "key": {
              "minLength": 1,
              "type": "string",
              "maxLength": 32
            },
            "min": 0
          },
          "group": "/System/Configuration"
        },
        "loop_protect_disable_timer": {
          "category": "configuration",
          "doc": [
            "This specifies the time in seconds for which the ports are to be disabled on",
            "detecting a loop. Default value is `0` i.e the port is disabled indefinitely."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 604800,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 0,
          "group": "/System/Loop-protect Configuration"
        },
        "aaa": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "radius_auth": {
                "emptyValue": "pap",
                "doc": [
                  "Specifies encoding to be used for the user password for radius based",
                  "authentication. By default `pap` is used."
                ],
                "type": {
                  "enum": [
                    "pap",
                    "chap"
                  ],
                  "type": "string"
                },
                "group": "/System/Database Configuration"
              },
              "fallback": {
                "doc": [
                  "This column used for AAA feature. The valid values for the key 'fallback' are",
                  "true or false based on the user request for authentication. If fallback=true,",
                  "fall to local authentication if radius server is not reachable."
                ],
                "type": "string",
                "group": "/System/Database Configuration"
              },
              "radius": {
                "doc": [
                  "This column used for AAA feature. The valid values for the key 'radius' are true",
                  "or false based on the user request for authentication. If radius=true, radius",
                  "based authentication is enabled. By default authentication is local."
                ],
                "type": "string",
                "group": "/System/Database Configuration"
              },
              "ssh_publickeyauthentication_enable": {
                "emptyValue": true,
                "doc": [
                  "Controls whether ssh public key authentication is enabled. Default is true."
                ],
                "type": "boolean",
                "group": "/System/Database Configuration"
              },
              "ssh_passkeyauthentication_enable": {
                "emptyValue": true,
                "doc": [
                  "Controls whether ssh password based authentication is enabled. Default is true."
                ],
                "type": "boolean",
                "group": "/System/Database Configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/System/Database Configuration"
        },
        "system_mac": {
          "category": "status",
          "doc": [
            "Ethernet MAC address available to use anywhere a non-unique MAC is needed."
          ],
          "type": {
            "key": {
              "minLength": 17,
              "type": "string",
              "maxLength": 17
            }
          },
          "group": "/System/Configuration"
        },
        "sflow": {
          "category": "configuration",
          "doc": [
            "sFlow(R) configuration."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "uuid",
              "refTable": "sFlow"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/System/Configuration"
        },
        "software_info": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "boot_loader_version": {
                "type": "string",
                "group": "/System/Version Reporting"
              },
              "diag_version": {
                "type": "string",
                "group": "/System/Version Reporting"
              },
              "os_name": {
                "doc": [
                  "This column is used for the software info. The value of the key 'os_name' will",
                  "identify the operating system, without a version component, and suitable for",
                  "presentation to the user. If not set, defaults to `os_name=OpenSwitch`. Example:",
                  "`os_name=Fedora` or `os_name=\"Debian GNU/Linux\"`.  This is equivalent of `NAME`",
                  "variable of the `/etc/os-release` file.  Please refer to",
                  "`http://www.freedesktop.org/software/systemd/man/os-release.html` for more",
                  "detailed information."
                ],
                "type": "string",
                "group": "/System/Version Reporting"
              },
              "bios_vendor": {
                "type": "string",
                "group": "/System/Version Reporting"
              },
              "install_env_version": {
                "type": "string",
                "group": "/System/Version Reporting"
              },
              "bios_release_date": {
                "type": "string",
                "group": "/System/Version Reporting"
              },
              "bios_version": {
                "type": "string",
                "group": "/System/Version Reporting"
              },
              "install_env": {
                "type": "string",
                "group": "/System/Version Reporting"
              },
              "boot_loader": {
                "type": "string",
                "group": "/System/Version Reporting"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/System/Version Reporting"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "lldp_tlv_port_desc_enable": {
                "emptyValue": true,
                "doc": [
                  "Set this value to `true` to enable transmission of LLDP Port Description TLV or",
                  "set it to `false` to disable transmitting it. Default is `enable`."
                ],
                "type": "boolean",
                "group": "/System/Configuration/LLDP Configurations"
              },
              "banner_exec": {
                "emptyValue": "",
                "doc": [
                  "Banner to be displayed on CLI login. Maximum length 4095.",
                  "",
                  "No banner by default."
                ],
                "type": {
                  "type": "string",
                  "maxLength": 4095
                },
                "group": "/System/Configuration"
              },
              "internal_vlan_policy": {
                "emptyValue": "ascending",
                "doc": [
                  "This key indicates order of assignment of internal VLAN ID (ascending or",
                  "descending).",
                  "",
                  "Default option is ascending order."
                ],
                "type": {
                  "enum": [
                    "ascending",
                    "descending"
                  ],
                  "type": "string"
                },
                "group": "/System/Configuration"
              },
              "cli_session_timeout": {
                "emptyValue": 30,
                "doc": [
                  "This key specifies cli idle session timeout in minutes. Set this value to 0 to",
                  "disable session timeout.",
                  "",
                  "Default value is 30."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 43200,
                  "type": "integer"
                },
                "group": "/System/Configuration"
              },
              "lldp_enable": {
                "emptyValue": false,
                "doc": [
                  "Set this value to `true` to enable System level LLDP or to `false` to explicitly",
                  "disable it. Default is `disable`."
                ],
                "type": "boolean",
                "group": "/System/Configuration/LLDP Configurations"
              },
              "lldp_tlv_sys_cap_enable": {
                "emptyValue": true,
                "doc": [
                  "Set this value to `true` to enable transmission of LLDP System Capabilities TLV",
                  "or set it to `false` to disable transmitting it. Default is `enable`."
                ],
                "type": "boolean",
                "group": "/System/Configuration/LLDP Configurations"
              },
              "min_internal_vlan": {
                "emptyValue": 1024,
                "doc": [
                  "This key specifies a lower bound of the VLAN range, which is being used for",
                  "internal system purposes.",
                  "",
                  "Default value is 1024."
                ],
                "type": {
                  "minInteger": 1,
                  "maxInteger": 4094,
                  "type": "integer"
                },
                "group": "/System/Configuration"
              },
              "lldp_reinit": {
                "emptyValue": 2,
                "doc": [
                  "The amount of time in seconds to wait before performing LLDP initialization on",
                  "any interface.",
                  "",
                  "Default value is 2."
                ],
                "type": {
                  "minInteger": 1,
                  "maxInteger": 10,
                  "type": "integer"
                },
                "group": "/System/Configuration/LLDP Configurations"
              },
              "snmp_agent_port": {
                "emptyValue": "161",
                "doc": [
                  "The port on which the SNMP agent listens for SNMP requests. The default port is",
                  "161."
                ],
                "type": "string",
                "group": "/System/Configuration/SNMP configuration"
              },
              "lldp_tlv_port_vlan_enable": {
                "emptyValue": true,
                "doc": [
                  "Set this value to `true` to enable transmission of LLDP Port VLAN TLV or set it",
                  "to `false` to disable transmitting it. Default is `enable`."
                ],
                "type": "boolean",
                "group": "/System/Configuration/LLDP Configurations"
              },
              "tftp_source": {
                "doc": [
                  "Provides source interface or IP address for tftp client. If not present, regular",
                  "routing rules take place."
                ],
                "type": {
                  "type": "string",
                  "maxLength": 256
                },
                "group": "/System/Configuration/Source Interface Selection Configurations"
              },
              "system_description": {
                "doc": [
                  "This key represents the system description."
                ],
                "type": "string",
                "group": "/System/Configuration/SNMP configuration"
              },
              "system_location": {
                "doc": [
                  "This key represents the system location."
                ],
                "type": "string",
                "group": "/System/Configuration/SNMP configuration"
              },
              "sftp_server_enable": {
                "emptyValue": false,
                "doc": [
                  "Set this value to `true` to enable SFTP server and to set to `false` to disable",
                  "it. If not set, SFTP server would be disabled by default."
                ],
                "type": "boolean",
                "group": "/System/Configuration/SFTP Server Configurations"
              },
              "udp_bcast_forwarder_enabled": {
                "emptyValue": false,
                "doc": [
                  "Set this value to `true` to enable UDP-Broadcast-Forwarder functionality",
                  "globally and set it to `false` to disable it. UDP-Broadcast-Forwarder is",
                  "disabled by default. If the key is missing, the configuration is assumed to be",
                  "disabled. UDP-Broadcast-Forwarder port level configuration is present in",
                  "[UDP_Bcast_Forwarder_Server](UDP_Bcast_Forwarder_Server)."
                ],
                "type": "boolean",
                "group": "/System/Configuration/UDP Broadcast Forwarder Configurations"
              },
              "system_contact": {
                "doc": [
                  "This key represents the system contact."
                ],
                "type": "string",
                "group": "/System/Configuration/SNMP configuration"
              },
              "tftp_server_enable": {
                "emptyValue": true,
                "doc": [
                  "Set this value to `true` to enable TFTP server and set to `false` to disable it.",
                  "If not set, TFTP server would be enabled."
                ],
                "type": "boolean",
                "group": "/System/Configuration/TFTP Server Configurations"
              },
              "acl_log_timer_interval": {
                "doc": [
                  "This key specifies the interval in seconds of the ACL logging timer.",
                  "",
                  "Default value is 300 seconds."
                ],
                "type": {
                  "minInteger": 30,
                  "maxInteger": 300,
                  "type": "integer"
                },
                "group": "/System/Configuration"
              },
              "lldp_tx_interval": {
                "emptyValue": 30,
                "doc": [
                  "The interval in seconds at which LLDP status updates are transmitted to",
                  "neighbors in seconds.",
                  "",
                  "Default value is 30 sec."
                ],
                "type": {
                  "minInteger": 5,
                  "maxInteger": 32768,
                  "type": "integer"
                },
                "group": "/System/Configuration/LLDP Configurations"
              },
              "max_internal_vlan": {
                "emptyValue": 4094,
                "doc": [
                  "This key specifies an upper bound of the VLAN range, which is being used for",
                  "internal system purposes.",
                  "",
                  "Default value is 4094."
                ],
                "type": {
                  "minInteger": 1,
                  "maxInteger": 4094,
                  "type": "integer"
                },
                "group": "/System/Configuration"
              },
              "banner": {
                "emptyValue": "",
                "doc": [
                  "Banner to be displayed on CLI start. Maximum length 4095.",
                  "",
                  "No banner by default."
                ],
                "type": {
                  "type": "string",
                  "maxLength": 4095
                },
                "group": "/System/Configuration"
              },
              "tftp_server_secure": {
                "emptyValue": true,
                "doc": [
                  "Set this value to `true` to enable TFTP secure mode and set to `false` to",
                  "disable it. If not set, TFTP secure mode would be enabled. This config is valid",
                  "only if TFTP server is enabled."
                ],
                "type": "boolean",
                "group": "/System/Configuration/TFTP Server Configurations"
              },
              "lldp_mgmt_addr": {
                "doc": [
                  "LLDP Management IP Address to be sent in TLV."
                ],
                "type": "string",
                "group": "/System/Configuration/LLDP Configurations"
              },
              "lldp_tlv_mgmt_addr_enable": {
                "emptyValue": true,
                "doc": [
                  "Set this value to `true` to enable transmission of LLDP Management Address TLV",
                  "or set it to `false` to disable transmitting it. Default is `enable`."
                ],
                "type": "boolean",
                "group": "/System/Configuration/LLDP Configurations"
              },
              "lldp_hold": {
                "emptyValue": 4,
                "doc": [
                  "The amount of time a receiving device should hold the information sent by your",
                  "device before discarding it. This variable is used as a multiplier of",
                  "lldp_tx_interval, to determine the value of TTL that is carried in LLDP frames.",
                  "",
                  "Default value is 4."
                ],
                "type": {
                  "minInteger": 2,
                  "maxInteger": 10,
                  "type": "integer"
                },
                "group": "/System/Configuration/LLDP Configurations"
              },
              "stats-update-interval": {
                "emptyValue": 5000,
                "doc": [
                  "Update interval for the statistics, in milliseconds. This option will affect the",
                  "update of `statistics`, `DHCP-Relay Statistics` columns in the `Port` table,",
                  "`statistics` column in the `Interface` table.",
                  "",
                  "Default value is 5000 ms."
                ],
                "type": {
                  "minInteger": 5000,
                  "type": "integer"
                },
                "group": "/System/Configuration"
              },
              "protocols_source": {
                "doc": [
                  "Overrides source interface or IP address for all the protocols that support it.",
                  "If not present, regular routing rules take place."
                ],
                "type": {
                  "type": "string",
                  "maxLength": 256
                },
                "group": "/System/Configuration/Source Interface Selection Configurations"
              },
              "lldp_tlv_sys_name_enable": {
                "emptyValue": true,
                "doc": [
                  "Set this value to `true` to enable transmission of LLDP System Name TLV or set",
                  "it to `false` to disable transmitting it. Default is `enable`."
                ],
                "type": "boolean",
                "group": "/System/Configuration/LLDP Configurations"
              },
              "enable-statistics": {
                "emptyValue": false,
                "doc": [
                  "Statistics are disabled by default to avoid overhead in the common case when",
                  "statistics gathering is not useful.  Set this value to `true` to enable",
                  "populating the [statistics](System.statistics) column or to `false` to",
                  "explicitly disable it."
                ],
                "type": "boolean",
                "group": "/System/Statistics"
              },
              "lldp_tlv_sys_desc_enable": {
                "emptyValue": true,
                "doc": [
                  "Set this value to `true` to enable transmission of LLDP System Description TLV",
                  "or set it to `false` to disable transmitting it. Default is `enable`."
                ],
                "type": "boolean",
                "group": "/System/Configuration/LLDP Configurations"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": [
            "/System/Configuration",
            "/System/Configuration/TFTP Server Configurations",
            "/System/Configuration/SFTP Server Configurations",
            "/System/Configuration/Source Interface Selection Configurations",
            "/System/Configuration/UDP Broadcast Forwarder Configurations",
            "/System/Configuration/LLDP Configurations",
            "/System/Configuration/SNMP configuration",
            "/System/Statistics",
            "/System/Common Columns"
          ]
        },
        "qos_status": {
          "category": "status",
          "doc": [
            "Key-value pairs that report the Quality of Service status in hardware for ports",
            "that do not specify their own configuration."
          ],
          "type": {
            "max": "unlimited",
            "valueMap": {
              "schedule_profile": {
                "doc": [
                  "This key's value contains the [QoS](QoS) [name](QoS.name) that is currently",
                  "operating in hardware for ports that do not specify their own queue profile",
                  "configuration.",
                  "",
                  "The value may be different than the name in [qos](System.qos) when that schedule",
                  "profile cannot be supported in hardware.  In this case, this key's value may be",
                  "the name of the last successfully configured system schedule profile."
                ],
                "type": "string",
                "group": "/System/QoS Status"
              },
              "queue_profile": {
                "doc": [
                  "This key's value contains the [Q_Profile](Q_Profile) [name](Q_Profile.name) that is",
                  "currently operating in hardware for ports that do not specify their own queue",
                  "profile configuration.",
                  "",
                  "The value may be different than the name in [q_profile](System.q_profile) when",
                  "that queue profile cannot be supported in hardware.  In this case, this key's",
                  "value is the name of the last successfully configured system queue profile."
                ],
                "type": "string",
                "group": "/System/QoS Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/System/QoS Status"
        },
        "bufmon_info": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "cap_mode_current": {
                "emptyValue": false,
                "doc": [
                  "Specifies whether the system is capable of collecting current values of the",
                  "counters. False, if the value is not present."
                ],
                "type": "boolean",
                "group": "/System/Information"
              },
              "cap_snapshot_on_threshold_trigger": {
                "emptyValue": false,
                "doc": [
                  "Specifies whether the system is capable of freezing counters values on threshold",
                  "crossing. False, if the value is not present."
                ],
                "type": "boolean",
                "group": "/System/Information"
              },
              "cap_threshold_trigger_collection": {
                "emptyValue": false,
                "doc": [
                  "Specifies whether the system is capable of immediately collecting values on",
                  "threshold crossing. False, if the value is not present."
                ],
                "type": "boolean",
                "group": "/System/Information"
              },
              "cap_mode_peak": {
                "emptyValue": false,
                "doc": [
                  "Specifies whether the system is capable of collecting peak values of the",
                  "counters. False, if the value is not present."
                ],
                "type": "boolean",
                "group": "/System/Information"
              },
              "last_collection_timestamp": {
                "doc": [
                  "Specifies the timestamp of the last collection in seconds from Jan 1, 1970."
                ],
                "type": "integer",
                "group": "/System/Information"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/System/Information"
        },
        "qos_dscp_map_entries": {
          "category": "configuration",
          "doc": [
            "Contains references to each entry in the global DSCP map used by port trust mode",
            "DSCP. (see [QoS_DSCP_Map_Entry](QoS_DSCP_Map_Entry))"
          ],
          "type": {
            "max": 64,
            "key": {
              "type": "uuid",
              "refTable": "QoS_DSCP_Map_Entry"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/System/QoS configuration"
        },
        "bufmon_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "collection_period": {
                "emptyValue": 5,
                "doc": [
                  "Specifies the period of collection in seconds. Five, if the value is not",
                  "present."
                ],
                "type": {
                  "minInteger": 1,
                  "type": "integer"
                },
                "group": "/System/Bufmon configuration"
              },
              "threshold_trigger_rate_limit": {
                "emptyValue": 60,
                "doc": [
                  "Specifies maximum number of trigger generated reports per minute. The limit will",
                  "be averaged and imposed on a per second basis. For example, value of 600 will",
                  "allow report every 100ms. If no value is set, the default is 60 i.e. once per",
                  "second."
                ],
                "type": {
                  "minInteger": 1,
                  "maxInteger": 600,
                  "type": "integer"
                },
                "group": "/System/Bufmon configuration"
              },
              "periodic_collection_enabled": {
                "emptyValue": false,
                "doc": [
                  "Specifies whether periodic collection of the counters is enabled. False, if the",
                  "value is not present."
                ],
                "type": "boolean",
                "group": "/System/Bufmon configuration"
              },
              "counters_mode": {
                "doc": [
                  "Specifies whether counters should report their current values or peak values",
                  "since last collection."
                ],
                "type": {
                  "enum": [
                    "peak",
                    "current"
                  ],
                  "type": "string"
                },
                "group": "/System/Bufmon configuration"
              },
              "enabled": {
                "emptyValue": false,
                "doc": [
                  "Specifies whether the bufmon feature is enabled on the system. False, if the",
                  "value is not present."
                ],
                "type": "boolean",
                "group": "/System/Bufmon configuration"
              },
              "snapshot_on_threshold_trigger": {
                "emptyValue": true,
                "doc": [
                  "Specifies whether counters should be frozen when one of the thresholds is",
                  "crossed. True, if the value is not present."
                ],
                "type": "boolean",
                "group": "/System/Bufmon configuration"
              },
              "threshold_trigger_collection_enabled": {
                "emptyValue": true,
                "doc": [
                  "Specifies whether counters should be collected immediately when one of the",
                  "thresholds is crossed. True, if the value is not present."
                ],
                "type": "boolean",
                "group": "/System/Bufmon configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/System/Bufmon configuration"
        },
        "cur_cfg": {
          "doc": [
            "Sequence number that OpenSwitch sets to the current value of",
            "[next_cfg](System.next_cfg) after it finishes applying a set of configuration",
            "changes."
          ],
          "type": "integer",
          "group": "/System/Status"
        },
        "loop_protect_transmit_interval": {
          "category": "configuration",
          "doc": [
            "This specifies the time interval in seconds between successive transmissions of",
            "loop-protect packets. Default value is `5` seconds."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 1,
              "maxInteger": 10,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 5,
          "group": "/System/Loop-protect Configuration"
        }
      },
      "isRoot": true,
      "maxRows": 1,
      "title": "OpenSwitch top level configuration."
    },
    "Subsystem": {
      "indexes": [
        [
          "name"
        ]
      ],
      "columns": {
        "leds": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "LED"
            },
            "min": 0
          },
          "group": "/Subsystem/Configuration",
          "relationship": "1:m"
        },
        "other_info": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "diag_version": {
                "type": "string",
                "group": "/Subsystem/Inventory Info"
              },
              "l3_port_requires_internal_vlan": {
                "type": "string",
                "group": "/Subsystem/Inventory Info"
              },
              "number_of_macs": {
                "type": "string",
                "group": "/Subsystem/Inventory Info"
              },
              "vendor": {
                "type": "string",
                "group": "/Subsystem/Inventory Info"
              },
              "max_interface_speed": {
                "type": "string",
                "group": "/Subsystem/Inventory Info"
              },
              "interface_count": {
                "type": "string",
                "group": "/Subsystem/Inventory Info"
              },
              "onie_version": {
                "type": "string",
                "group": "/Subsystem/Inventory Info"
              },
              "max_bond_member_count": {
                "type": "string",
                "group": "/Subsystem/Inventory Info"
              },
              "height": {
                "type": "string",
                "group": "/Subsystem/Inventory Info"
              },
              "platform_name": {
                "type": "string",
                "group": "/Subsystem/Inventory Info"
              },
              "max_bond_count": {
                "type": "string",
                "group": "/Subsystem/Inventory Info"
              },
              "part_number": {
                "type": "string",
                "group": "/Subsystem/Inventory Info"
              },
              "device_version": {
                "type": "string",
                "group": "/Subsystem/Inventory Info"
              },
              "country_code": {
                "type": "string",
                "group": "/Subsystem/Inventory Info"
              },
              "label_revision": {
                "type": "string",
                "group": "/Subsystem/Inventory Info"
              },
              "serial_number": {
                "type": "string",
                "group": "/Subsystem/Inventory Info"
              },
              "manufacture_date": {
                "type": "string",
                "group": "/Subsystem/Inventory Info"
              },
              "max_transmission_unit": {
                "type": "string",
                "group": "/Subsystem/Inventory Info"
              },
              "base_mac_address": {
                "type": "string",
                "group": "/Subsystem/Inventory Info"
              },
              "manufacturer": {
                "type": "string",
                "group": "/Subsystem/Inventory Info"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Subsystem/Inventory Info"
        },
        "name": {
          "category": "status",
          "mutable": false,
          "type": "string",
          "group": "/Subsystem/Inventory Info"
        },
        "interfaces": {
          "category": "status",
          "doc": [
            "References to the interfaces which are part of this subsystem."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "Interface"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/Subsystem/Hardware Configuration"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "fan_speed_override": {
                "doc": [
                  "If the fan_speed_override value is set, `fand` uses that value (unless the",
                  "output of `tempd` requests max speed, in which case the fans are set to max to",
                  "avoid an over-temperature situation)."
                ],
                "type": {
                  "enum": [
                    "slow",
                    "normal",
                    "medium",
                    "fast",
                    "max"
                  ],
                  "type": "string"
                },
                "group": "/Subsystem/Common Columns"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Subsystem/Common Columns"
        },
        "hw_desc_dir": {
          "doc": [
            "Directory where the hardware description files for this subsystem are located."
          ],
          "type": "string",
          "group": "/Subsystem/Inventory Info"
        },
        "asset_tag_number": {
          "category": "configuration",
          "type": "string",
          "group": "/Subsystem/Configuration"
        },
        "fans": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "Fan"
            },
            "min": 0
          },
          "group": "/Subsystem/Configuration",
          "relationship": "1:m"
        },
        "next_mac_address": {
          "category": "status",
          "doc": [
            "Next available (unused) Ethernet MAC address from the MAC address pool for this",
            "subsystem."
          ],
          "type": {
            "key": {
              "minLength": 17,
              "type": "string",
              "maxLength": 17
            }
          },
          "group": "/Subsystem/Hardware Configuration"
        },
        "macs_remaining": {
          "category": "status",
          "doc": [
            "The number of available (unused) Ethernet MAC address from the MAC address pool",
            "for this subsystem."
          ],
          "type": "integer",
          "group": "/Subsystem/Hardware Configuration"
        },
        "power_supplies": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "Power_supply"
            },
            "min": 0
          },
          "group": "/Subsystem/Configuration",
          "relationship": "1:m"
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Subsystem/Common Columns"
        },
        "type": {
          "category": "status",
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "uninitialized",
                "system",
                "chassis",
                "line_card",
                "mezz_card"
              ],
              "type": "string"
            },
            "min": 0
          },
          "group": "/Subsystem/Inventory Info"
        },
        "temp_sensors": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "Temp_sensor"
            },
            "min": 0
          },
          "group": "/Subsystem/Configuration",
          "relationship": "1:m"
        }
      },
      "title": "system board, daughter card, line card, etc."
    },
    "Bridge": {
      "doc": [
        "Configuration for a bridge within an [System](System).",
        "",
        "A [Bridge](Bridge) record represents an Ethernet switch with one or more",
        "``ports,'' which are the [Port](Port) records pointed to by the",
        "[Bridge](Bridge)'s [ports](Bridge.ports) column. In the first release, only one",
        "default bridge (bridge_normal) is supported"
      ],
      "columns": {
        "status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "mstp_config_digest": {
                "doc": [
                  "The configuration digest for the MSTP bridge that is derived based on the VLAN",
                  "membership of MST instances."
                ],
                "type": "string",
                "group": "/Bridge/MSTP Status"
              },
              "actual-mac-table-size": {
                "doc": [
                  "Actual size of the mac table. If mac-table-size exceeds hardware capability,",
                  "then this field will show the real size used."
                ],
                "type": "string",
                "group": "/Bridge/Bridge Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "doc": [
            "Key-value pairs that report bridge status."
          ],
          "ephemeral": true,
          "group": [
            "/Bridge/MSTP Status",
            "/Bridge/Bridge Status"
          ]
        },
        "datapath_id": {
          "category": "status",
          "type": {
            "max": 1,
            "key": "string",
            "min": 0
          },
          "ephemeral": true,
          "group": "/Bridge/Other Features"
        },
        "name": {
          "category": "configuration",
          "mutable": false,
          "doc": [
            "Bridge identifier.  Should be alphanumeric and no more than about 8 bytes long.",
            "Must be unique among the names of ports, interfaces, and bridges on a host."
          ],
          "type": "string",
          "group": "/Bridge/Core Features"
        },
        "mirrors": {
          "category": "configuration",
          "doc": [
            "[Mirror](Mirror) references for sessions configured in this bridge."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "Mirror"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/Bridge/Other Features"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "hwaddr": {
                "doc": [
                  "An Ethernet address in the form _xx_:_xx_:_xx_:_xx_:_xx_:_xx_ to set the",
                  "hardware address of the local port and influence the datapath ID."
                ],
                "type": "string",
                "group": "/Bridge/Other Features"
              },
              "mstp_config_name": {
                "doc": [
                  "Set this value to specify the MSTP configuration name. Default value is system",
                  "MAC address."
                ],
                "type": "string",
                "group": "/Bridge/MSTP Configurations"
              },
              "mstp_config_revision": {
                "emptyValue": "0",
                "doc": [
                  "Set this value to specify the configuration revision number. Default value is 0."
                ],
                "type": "string",
                "group": "/Bridge/MSTP Configurations"
              },
              "mac-table-size": {
                "emptyValue": 16000,
                "doc": [
                  "The maximum number of MAC addresses to learn.  The default is currently 16K.",
                  "The value, if specified, is forced into a reasonable range, currently 10 to",
                  "256K."
                ],
                "type": {
                  "minInteger": 1,
                  "type": "integer"
                },
                "group": "/Bridge/Other Features"
              },
              "mac-aging-time": {
                "emptyValue": 300,
                "doc": [
                  "The maximum number of seconds to retain a MAC learning entry for which no",
                  "packets have been seen.  The default is currently 300 seconds (5 minutes).  The",
                  "value, if specified, is forced into a reasonable range, currently 15 to 3600",
                  "seconds.",
                  "",
                  "A short MAC aging time allows a network to more quickly detect that a host is no",
                  "longer connected to a switch port.  However, it also makes it more likely that",
                  "packets will be flooded unnecessarily, when they are addressed to a connected",
                  "host that rarely transmits packets.  To reduce the incidence of unnecessary",
                  "flooding, use a MAC aging time longer than the maximum interval at which a host",
                  "will ordinarily transmit packets."
                ],
                "type": {
                  "minInteger": 1,
                  "type": "integer"
                },
                "group": "/Bridge/Other Features"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": [
            "/Bridge/MSTP Configurations",
            "/Bridge/Other Features",
            "/Bridge/Common Columns"
          ]
        },
        "mstp_instances": {
          "category": "configuration",
          "doc": [
            "MSTP configuration for individual instance."
          ],
          "type": {
            "max": 64,
            "key": {
              "minInteger": 1,
              "maxInteger": 64,
              "type": "integer"
            },
            "value": {
              "type": "uuid",
              "refTable": "MSTP_Instance"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/Bridge/Core Features"
        },
        "mstp_enable": {
          "category": "configuration",
          "doc": [
            "Set this value to `true`, to enable MSTP. Default value is `false`."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/Bridge/MSTP Configurations"
        },
        "datapath_version": {
          "category": "status",
          "type": "string",
          "group": "/Bridge/Other Features"
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Bridge/Common Columns"
        },
        "vlans": {
          "category": "configuration",
          "doc": [
            "VLANs included in the bridge."
          ],
          "type": {
            "max": 4094,
            "key": {
              "type": "uuid",
              "refTable": "VLAN"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/Bridge/Core Features"
        },
        "ports": {
          "category": "configuration",
          "doc": [
            "Ports included in the bridge."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "Port"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/Bridge/Core Features"
        },
        "mstp_common_instance": {
          "category": "configuration",
          "doc": [
            "MSTP configuration for CIST(Common Instance Spanning Tree)."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "uuid",
              "refTable": "MSTP_Common_Instance"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/Bridge/Core Features"
        },
        "datapath_type": {
          "category": "configuration",
          "doc": [
            "Name of datapath provider."
          ],
          "type": "string",
          "group": "/Bridge/Other Features"
        }
      },
      "indexes": [
        [
          "name"
        ]
      ]
    },
    "VRF": {
      "doc": [
        "Each entry in this table represents a single routing domain, commonly known as",
        "Virtual Routing and Forwarding."
      ],
      "indexes": [
        [
          "name"
        ]
      ],
      "columns": {
        "status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "namespace_ready": {
                "emptyValue": false,
                "doc": [
                  "Indicates whether Linux namespace exists for this VRF. If not set, the assumed",
                  "value is false."
                ],
                "type": "boolean",
                "group": "/VRF/Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "ephemeral": true,
          "group": "/VRF/Status"
        },
        "ospf_routers": {
          "category": "configuration",
          "group": "/VRF/Configuration",
          "relationship": "1:m",
          "doc": [
            "The list of all the OSPFv2 Router instances."
          ],
          "keyname": "instance_tag",
          "type": {
            "max": "unlimited",
            "key": {
              "minInteger": 1,
              "maxInteger": 65535,
              "type": "integer"
            },
            "value": {
              "type": "uuid",
              "refTable": "OSPF_Router"
            },
            "min": 0
          }
        },
        "name": {
          "category": "configuration",
          "mutable": false,
          "doc": [
            "VRF identifier. Should be alphanumeric. VRF names must be unique."
          ],
          "type": {
            "key": {
              "type": "string",
              "maxLength": 32
            }
          },
          "group": "/VRF/Configuration"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/VRF/Common Columns"
        },
        "active_router_id": {
          "category": "status",
          "doc": [
            "Router-ID (in IPv4 format) that is currently used in the system, unless",
            "overridden by protocol specific one."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 45
            },
            "min": 0
          },
          "group": "/VRF/Configuration"
        },
        "ports": {
          "category": "configuration",
          "doc": [
            "Ports included in the VRF."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "Port"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/VRF/Configuration"
        },
        "table_id": {
          "category": "status",
          "doc": [
            "Kernel table_id assigned for routing table of this VRF."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 65535,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/VRF/Configuration"
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/VRF/Common Columns"
        },
        "bgp_routers": {
          "category": "configuration",
          "group": "/VRF/Configuration",
          "relationship": "1:m",
          "doc": [
            "BGP routers keyed by ASN value."
          ],
          "keyname": "asn",
          "type": {
            "max": "unlimited",
            "key": {
              "minInteger": 1,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "value": {
              "type": "uuid",
              "refTable": "BGP_Router"
            },
            "min": 0
          }
        },
        "dhcp_server": {
          "category": "configuration",
          "doc": [
            "DHCP Server in the VRF."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "uuid",
              "refTable": "DHCP_Server"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/VRF/Configuration"
        }
      },
      "title": "Virtual Routing and Forwarding"
    },
    "MSTP_Instance": {
      "doc": [
        "This represents information regarding a Bridge's Bridge Protocol entity for the",
        "specified Spanning Tree instance."
      ],
      "columns": {
        "mstp_instance_ports": {
          "category": "configuration",
          "doc": [
            "MSTP configuration for port."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "MSTP_Instance_Port"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/MSTP_Instance/Configurations"
        },
        "time_since_top_change": {
          "category": "status",
          "doc": [
            "The time last topology change happened for this instance. The format for this is",
            "number of seconds from epoch."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "integer"
            },
            "min": 0
          },
          "group": "/MSTP_Instance/Status"
        },
        "hardware_grp_id": {
          "category": "status",
          "doc": [
            "The hardware spanning tree group ID. Default value is 0."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 0,
          "group": "/MSTP_Instance/Status"
        },
        "designated_root": {
          "category": "status",
          "doc": [
            "The root bridge name for a MSTP instance."
          ],
          "type": {
            "key": {
              "type": "string",
              "maxLength": 45
            }
          },
          "group": "/MSTP_Instance/Status"
        },
        "topology_change_count": {
          "category": "statistics",
          "doc": [
            "The total number of topology changes that have occurred for this instance."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 2147483647,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/MSTP_Instance/Status"
        },
        "vlans": {
          "category": "configuration",
          "doc": [
            "VLANs included in the MSTP instance."
          ],
          "type": {
            "max": 4094,
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "VLAN"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/MSTP_Instance/Configurations"
        },
        "topology_unstable": {
          "category": "status",
          "doc": [
            "This is set to `true` when a topology change has occurred. Once topology",
            "stabilizes it will be set back to `false`. Default is `false`."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/MSTP_Instance/Status"
        },
        "priority": {
          "category": "configuration",
          "doc": [
            "Set this value to specify the priority value, configured as a multiple of 4096",
            "The lower a priority value, the higher the priority. Default value is 32768."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 61440,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 32768,
          "group": "/MSTP_Instance/Configurations"
        },
        "bridge_identifier": {
          "category": "configuration",
          "doc": [
            "+ The root bridge ID for CIST. Default value 64 bit string(4 bit priority",
            "+ 12 bit Instance ID",
            "+ 48bit system MAC address)"
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 45
            },
            "min": 0
          },
          "group": "/MSTP_Instance/Configurations"
        },
        "root_path_cost": {
          "category": "status",
          "doc": [
            "The path cost from the transmitting Bridge to the Root Bridge for the MSTI."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 200000000,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/MSTP_Instance/Status"
        },
        "root_port": {
          "category": "status",
          "doc": [
            "Specifies the root port name for a MSTP instance."
          ],
          "type": {
            "key": {
              "type": "string",
              "maxLength": 45
            }
          },
          "group": "/MSTP_Instance/Status"
        },
        "root_priority": {
          "category": "status",
          "doc": [
            "The root bridge priority. The lower a priority value, the higher the priority.",
            "Default value is 32768."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 61440,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 32768,
          "group": "/MSTP_Instance/Status"
        }
      },
      "title": "MSTP instance info"
    },
    "MSTP_Instance_Port": {
      "doc": [
        "This represents information regarding a specific Port within the bridge's bridge",
        "protocol entity, for a given MSTI."
      ],
      "columns": {
        "designated_bridge": {
          "category": "status",
          "doc": [
            "The designated bridge for this port."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string"
            },
            "min": 0
          },
          "group": "/MSTP_Instance_Port/Status"
        },
        "port_role": {
          "category": "status",
          "doc": [
            "The role of port in the active MSTP topology"
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "Root",
                "Designated",
                "Alternate",
                "Backup",
                "Disabled"
              ],
              "type": "string"
            },
            "min": 0
          },
          "group": "/MSTP_Instance_Port/Status"
        },
        "designated_root": {
          "category": "status",
          "doc": [
            "The root bridge name for a MSTP instance."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string"
            },
            "min": 0
          },
          "group": "/MSTP_Instance_Port/Status"
        },
        "port_priority": {
          "category": "configuration",
          "doc": [
            "Set this value to specify the priority value used along with the switch MAC",
            "address to determine which device is root. Configured as a multiple of 16. The",
            "lower a priority value, the higher the priority. Default value is 128."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 240,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 128,
          "group": "/MSTP_Instance_Port/Configurations"
        },
        "admin_path_cost": {
          "category": "configuration",
          "doc": [
            "The cost to reach root port. Default value is determined from the interface",
            "speed. Bandwidth           Port cost 10 Mbps             2,000,000 100 Mbps",
            "200,000 1 Gigabit Ethernet  20,000 10 Gigabit Ethernet 2,000"
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 200000000,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/MSTP_Instance_Port/Configurations"
        },
        "designated_bridge_priority": {
          "category": "status",
          "doc": [
            "The designated bridge priority at this port."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 61440,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/MSTP_Instance_Port/Status"
        },
        "port_state": {
          "category": "status",
          "doc": [
            "The state of the port in the active topology Default value is Blocking."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "Blocking",
                "Learning",
                "Forwarding",
                "Disabled"
              ],
              "type": "string"
            },
            "min": 0
          },
          "emptyValue": "Blocking",
          "group": "/MSTP_Instance_Port/Status"
        },
        "designated_root_priority": {
          "category": "status",
          "doc": [
            "The priority value for designated port. Default value is 32768."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 61440,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 32768,
          "group": "/MSTP_Instance_Port/Status"
        },
        "designated_cost": {
          "category": "status",
          "doc": [
            "The path cost for designated bridge."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 200000000,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/MSTP_Instance_Port/Status"
        },
        "port": {
          "category": "configuration",
          "doc": [
            "Specifies port for the MSTP instance."
          ],
          "type": {
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "Port"
            }
          },
          "relationship": "reference",
          "group": "/MSTP_Instance_Port/Configurations"
        },
        "designated_port": {
          "category": "status",
          "doc": [
            "The designated port ID."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 45
            },
            "min": 0
          },
          "group": "/MSTP_Instance_Port/Status"
        }
      },
      "title": "MSTP instance info per port"
    },
    "MSTP_Common_Instance": {
      "doc": [
        "This represents information regarding a Bridge's Bridge Protocol entity for the",
        "CIST.."
      ],
      "columns": {
        "remaining_hops": {
          "category": "status",
          "doc": [
            "The hop count after which this instance MSTP BPDU will be discarded. Default",
            "value is 20"
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 40,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 20,
          "group": "/MSTP_Common_Instance/Status"
        },
        "mstp_common_instance_ports": {
          "category": "configuration",
          "doc": [
            "CIST configurations for port."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "MSTP_Common_Instance_Port"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/MSTP_Common_Instance/Configurations"
        },
        "topology_change_count": {
          "category": "statistics",
          "doc": [
            "The total number of topology changes that have occurred for this instance."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 2147483647,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/MSTP_Common_Instance/Status"
        },
        "forward_delay_expiry_time": {
          "category": "status",
          "doc": [
            "The epoch time in seconds when forward delay will expire."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "integer"
            },
            "min": 0
          },
          "group": "/MSTP_Common_Instance/Status"
        },
        "oper_tx_hold_count": {
          "category": "statistics",
          "doc": [
            "The value used by the MSTP transmit state machine to limit the maximum",
            "transmission rate of MST BPDUs within the hello interval."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 1,
              "maxInteger": 10,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/MSTP_Common_Instance/Status"
        },
        "max_age": {
          "category": "configuration",
          "doc": [
            "Set this value to specify the maximum-aging time(The time a device waits without",
            "receiving spanning tree configuration messages before attempting a",
            "reconfiguration) for all MST instances. Default value is 20."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 6,
              "maxInteger": 40,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 20,
          "group": "/MSTP_Common_Instance/Configurations"
        },
        "max_hop_count": {
          "category": "configuration",
          "type": {
            "max": 1,
            "key": {
              "minInteger": 6,
              "maxInteger": 40,
              "type": "integer"
            },
            "min": 0
          }
        },
        "designated_root": {
          "category": "status",
          "doc": [
            "The root bridge name for a CIST instance."
          ],
          "type": {
            "key": {
              "type": "string",
              "maxLength": 45
            }
          },
          "group": "/MSTP_Common_Instance/Status"
        },
        "topology_unstable": {
          "category": "status",
          "doc": [
            "This is set to `true` when a topology change has occurred. Once topology",
            "stabilizes it will be set back to `false`. Default is `false`."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/MSTP_Common_Instance/Status"
        },
        "priority": {
          "category": "configuration",
          "doc": [
            "Set this value to specify the priority value, configured as a multiple of 4096",
            "The lower a priority value, the higher the priority. Default value is 32768."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 61440,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 32768,
          "group": "/MSTP_Common_Instance/Configurations"
        },
        "root_path_cost": {
          "category": "status",
          "doc": [
            "The path cost from the transmitting Bridge to the Root Bridge for the MSTI."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 200000000,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/MSTP_Common_Instance/Status"
        },
        "root_port": {
          "category": "status",
          "doc": [
            "The root port name for a CIST instance."
          ],
          "type": {
            "key": {
              "type": "string",
              "maxLength": 45
            }
          },
          "group": "/MSTP_Common_Instance/Status"
        },
        "root_priority": {
          "category": "status",
          "doc": [
            "The root bridge priority. The lower a priority value, the higher the priority.",
            "Default value is 32768."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 61440,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 32768,
          "group": "/MSTP_Common_Instance/Status"
        },
        "hello_time": {
          "category": "configuration",
          "doc": [
            "The hello time value for this instance. Default value is 2."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 2,
              "maxInteger": 10,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 2,
          "group": "/MSTP_Common_Instance/Configurations"
        },
        "cist_path_cost": {
          "category": "status",
          "doc": [
            "The path cost from the transmitting bridge to the CIST regional root."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 200000000,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/MSTP_Common_Instance/Status"
        },
        "oper_max_age": {
          "category": "status",
          "doc": [
            "Set this value to specify the maximum-aging time(The time a device waits without",
            "receiving spanning tree configuration messages before attempting a",
            "reconfiguration) for all MST instances."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 6,
              "maxInteger": 40,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/MSTP_Common_Instance/Status"
        },
        "oper_hello_time": {
          "category": "status",
          "doc": [
            "The operating hello timer value for this instance."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 2,
              "maxInteger": 10,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/MSTP_Common_Instance/Status"
        },
        "regional_root": {
          "category": "status",
          "doc": [
            "The regional root for the CIST."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 45
            },
            "min": 0
          },
          "group": "/MSTP_Common_Instance/Status"
        },
        "bridge_identifier": {
          "category": "configuration",
          "doc": [
            "+ The root bridge ID for CIST. Default value 64 bit string(4 bit priority",
            "+ 12 bit Instance ID",
            "+ 48bit system MAC address)"
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 45
            },
            "min": 0
          },
          "group": "/MSTP_Common_Instance/Configurations"
        },
        "time_since_top_change": {
          "category": "status",
          "doc": [
            "The time last topology change happened for this instance. The format for this is",
            "number of seconds from epoch."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "integer"
            },
            "min": 0
          },
          "group": "/MSTP_Common_Instance/Status"
        },
        "hardware_grp_id": {
          "category": "status",
          "doc": [
            "The hardware spanning tree group ID. Default value is 0."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 0,
          "group": "/MSTP_Common_Instance/Status"
        },
        "tx_hold_count": {
          "category": "configuration",
          "doc": [
            "The value used by the MSTP transmit state machine to limit the maximum",
            "transmission rate of MST BPDUs within the hello interval. Default value is 6."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 1,
              "maxInteger": 10,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 6,
          "group": "/MSTP_Common_Instance/Configurations"
        },
        "vlans": {
          "category": "configuration",
          "doc": [
            "VLANs included in the CIST instance."
          ],
          "type": {
            "max": 4094,
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "VLAN"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/MSTP_Common_Instance/Configurations"
        },
        "hello_expiry_time": {
          "category": "status",
          "doc": [
            "The epoch time in seconds after which a hello packet will be sent."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "integer"
            },
            "min": 0
          },
          "group": "/MSTP_Common_Instance/Status"
        },
        "oper_forward_delay": {
          "category": "status",
          "doc": [
            "The forward delay timer value for this instance."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 4,
              "maxInteger": 30,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/MSTP_Common_Instance/Status"
        },
        "forward_delay": {
          "category": "configuration",
          "doc": [
            "The forward delay time value for this instance. Default value is 15."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 4,
              "maxInteger": 30,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 15,
          "group": "/MSTP_Common_Instance/Configurations"
        }
      },
      "title": "MSTP common instance info"
    },
    "MSTP_Common_Instance_Port": {
      "doc": [
        "This represents information regarding a specific Port within the Bridge's Bridge",
        "Protocol entity, for the CIST."
      ],
      "columns": {
        "port_role": {
          "category": "status",
          "doc": [
            "The role of this port in the active MSTP topology."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "Root",
                "Designated",
                "Alternate",
                "Backup",
                "Disabled"
              ],
              "type": "string"
            },
            "min": 0
          },
          "group": "/MSTP_Common_Instance_Port/Status"
        },
        "fwd_transition_count": {
          "category": "statistics",
          "doc": [
            "The number of times this port has transitioned to the forwarding state."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 2147483647,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/MSTP_Common_Instance_Port/Status"
        },
        "loop_guard_disable": {
          "category": "configuration",
          "doc": [
            "Set this value to `true` if loop guard is enabled (to block sending and",
            "receiving BPDUs on the port). Default value is `false`."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/MSTP_Common_Instance_Port/Configurations"
        },
        "bpdu_guard_disable": {
          "category": "configuration",
          "doc": [
            "Set this value to `true` if BPDU Guard enabled (to shut down the port if that",
            "port receives a BPDU). Default is `false`."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/MSTP_Common_Instance_Port/Configurations"
        },
        "protocol_migration_enable": {
          "category": "configuration",
          "doc": [
            "Set this value to `true` to switch the STP working mode or to `false` to",
            "explicitly disable it. Default is `true`."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": true,
          "group": "/MSTP_Common_Instance_Port/Status"
        },
        "port_path_cost": {
          "category": "status",
          "doc": [
            "The operational value of the path cost."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 200000000,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/MSTP_Common_Instance_Port/Status"
        },
        "port": {
          "category": "configuration",
          "doc": [
            "Specifies port for the CIST instance."
          ],
          "type": {
            "max": 1,
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "Port"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/MSTP_Common_Instance_Port/Configurations"
        },
        "port_hello_time": {
          "category": "configuration",
          "doc": [
            "The port's hello time value, for the CIST."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 2,
              "maxInteger": 10,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/MSTP_Common_Instance_Port/Status"
        },
        "bpdu_filter_disable": {
          "category": "configuration",
          "doc": [
            "Set this value to `true` if BPDU filter is enabled(to suppress sending and",
            "receiving BPDUs on the port). Default value is `false`."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/MSTP_Common_Instance_Port/Configurations"
        },
        "designated_bridge": {
          "category": "status",
          "doc": [
            "The designated bridge identifier component of the port's MSTI port priority",
            "vector."
          ],
          "type": {
            "key": {
              "type": "string",
              "maxLength": 45
            }
          },
          "group": "/MSTP_Common_Instance_Port/Status"
        },
        "designated_path_cost": {
          "category": "status",
          "doc": [
            "The path cost for this port."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 200000000,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/MSTP_Common_Instance_Port/Status"
        },
        "designated_root": {
          "category": "status",
          "doc": [
            "The designated root ID for the port."
          ],
          "type": {
            "key": {
              "type": "string",
              "maxLength": 45
            }
          },
          "group": "/MSTP_Common_Instance_Port/Status"
        },
        "port_state": {
          "category": "status",
          "doc": [
            "The state of the port in the active topology. Default value is Blocking."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "Blocking",
                "Learning",
                "Forwarding",
                "Disabled"
              ],
              "type": "string"
            },
            "min": 0
          },
          "emptyValue": "Blocking",
          "group": "/MSTP_Common_Instance_Port/Status"
        },
        "restricted_port_role_disable": {
          "category": "configuration",
          "doc": [
            "Set this value to `true` if restiricted role enabled (not to be selected as Root",
            "Port for the CIST or any MSTI). Default is `false`."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/MSTP_Common_Instance_Port/Configurations"
        },
        "admin_edge_port_disable": {
          "category": "configuration",
          "doc": [
            "Set this value to `true`, if this admin edge port should not participate in root",
            "election. Default is `false`."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/MSTP_Common_Instance_Port/Configurations"
        },
        "root_guard_disable": {
          "category": "configuration",
          "doc": [
            "Set this value to `true` if root guard is enabled(to participate in STP as long",
            "as the device does not try to become the root). Default value is `false`."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/MSTP_Common_Instance_Port/Configurations"
        },
        "designated_port": {
          "category": "status",
          "doc": [
            "The designated port identifier component of the port's MSTI port priority",
            "vector."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 45
            },
            "min": 0
          },
          "group": "/MSTP_Common_Instance_Port/Status"
        },
        "link_type": {
          "category": "status",
          "doc": [
            "Specifies the link type. Default value is point_to_point."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "point_to_point",
                "shared"
              ],
              "type": "string"
            },
            "min": 0
          },
          "emptyValue": "point_to_point",
          "group": "/MSTP_Common_Instance_Port/Status"
        },
        "bpdus_rx_enable": {
          "category": "configuration",
          "doc": [
            "Set this value to `false` to stop transmission of BPDUs. Default is `true`."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": true,
          "group": "/MSTP_Common_Instance_Port/Configurations"
        },
        "mstp_statistics": {
          "category": "statistics",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "mstp_BPDUs_Rx": {
                "doc": [
                  "The received BPDU count."
                ],
                "type": "string",
                "group": "/MSTP_Common_Instance_Port/Statistics"
              },
              "mstp_BPDUs_Tx": {
                "doc": [
                  "The transmitted BPDU count."
                ],
                "type": "string",
                "group": "/MSTP_Common_Instance_Port/Statistics"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/MSTP_Common_Instance_Port/Statistics"
        },
        "admin_path_cost": {
          "category": "configuration",
          "doc": [
            "The path cost for the port to reach spanning-tree root."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 200000000,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/MSTP_Common_Instance_Port/Configurations"
        },
        "cist_path_cost": {
          "category": "status",
          "doc": [
            "The CIST path cost from the transmitting bridge to the CIST regional root."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 200000000,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/MSTP_Common_Instance_Port/Status"
        },
        "port_priority": {
          "category": "configuration",
          "doc": [
            "Set this value to specify the port-priority. configurable in increments of 16.",
            "Default value is 128."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 240,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 128,
          "group": "/MSTP_Common_Instance_Port/Configurations"
        },
        "restricted_port_tcn_disable": {
          "category": "configuration",
          "doc": [
            "Set this value to `true` if restiricted port tcn is enabled(not to propagate",
            "topology changes to other ports). Default is `false`."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/MSTP_Common_Instance_Port/Configurations"
        },
        "cist_regional_root_id": {
          "category": "status",
          "doc": [
            "The regional root Id for the CIST."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string"
            },
            "min": 0
          },
          "group": "/MSTP_Common_Instance_Port/Status"
        },
        "oper_edge_port": {
          "category": "status",
          "doc": [
            "The operational port type as edge port or not for the CIST."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "group": "/MSTP_Common_Instance_Port/Status"
        },
        "bpdus_tx_enable": {
          "category": "configuration",
          "doc": [
            "Set this value to `false` not to transmit the BPDUs Default is `true`."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": true,
          "group": "/MSTP_Common_Instance_Port/Configurations"
        }
      },
      "title": "MSTP common instance port info"
    },
    "Daemon": {
      "doc": [
        "Each entry in this table represents a single system daemon and contains",
        "information about that specific daemon. One use is to identify those daemons",
        "that read and process hardware description files to add new hardware into the",
        "db."
      ],
      "indexes": [
        [
          "name"
        ]
      ],
      "columns": {
        "is_hw_handler": {
          "doc": [
            "A boolean to indicate if this daemon is responsible for processing hardware",
            "description information (either on boot, or as hardware subsystems are added or",
            "removed)."
          ],
          "type": "boolean",
          "group": "/Daemon/Configuration"
        },
        "cur_hw": {
          "doc": [
            "Sequence number that a daemon sets to the current value of",
            "[next_hw](System.next_hw) in the [System](System) table after it has",
            "successfully responded to a hardware change."
          ],
          "type": "integer",
          "group": "/Daemon/Status"
        },
        "name": {
          "category": "status",
          "mutable": false,
          "doc": [
            "The name of the daemon."
          ],
          "type": "string",
          "group": "/Daemon/Configuration"
        }
      },
      "title": "Daemon Information"
    },
    "Route_Map": {
      "indexes": [
        [
          "name"
        ]
      ],
      "columns": {
        "route_map_entries": {
          "category": "configuration",
          "group": "/Route_Map/Global Route Map Configuration",
          "relationship": "1:m",
          "doc": [
            "Route map entries keyed by preference value."
          ],
          "keyname": "preference",
          "type": {
            "max": "unlimited",
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "value": {
              "type": "uuid",
              "refTable": "Route_Map_Entry"
            },
            "min": 0
          }
        },
        "status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "ephemeral": true,
          "group": "/Route_Map/Status"
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Route_Map/Common Columns"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Route_Map/Common Columns"
        },
        "name": {
          "category": "configuration",
          "doc": [
            "Reference to the VRF table, to which this route belongs."
          ],
          "type": {
            "key": {
              "type": "string",
              "maxLength": 80
            }
          },
          "group": "/Route_Map/Global Route Map Configuration"
        }
      },
      "isRoot": true,
      "title": "Route Map"
    },
    "Route_Map_Entry": {
      "columns": {
        "status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "ephemeral": true,
          "group": "/Route_Map_Entry/Status"
        },
        "set": {
          "category": "configuration",
          "doc": [
            "The set rule for route map."
          ],
          "type": {
            "max": "unlimited",
            "valueMap": {
              "origin": {
                "doc": [
                  "Sets the origin attribute of a local BGP route. The allowed values are below.",
                  "",
                  "1. <mark>EGP</mark> - Indicates that the route is learned through EBGP.",
                  "1. <mark>IGP</mark> - Indicates that the route is learned through IBGP.",
                  "1. <mark>incomplete</mark> - Indicates that the origin of route is unknown. This",
                  "occurs when a route is redistributed into BGP."
                ],
                "type": {
                  "enum": [
                    "EGP",
                    "IBGP",
                    "incomplete"
                  ],
                  "type": "string"
                },
                "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
              },
              "extcommunity_soo": {
                "doc": [
                  "Sets the site-of-origin extended community of a BGP route. The value is the",
                  "community attribute in the form AA:NN where AA can be either AS number or IP",
                  "address and NN is the community identifier."
                ],
                "type": "string",
                "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
              },
              "weight": {
                "doc": [
                  "Sets the weight of a BGP route."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 4294967295,
                  "type": "integer"
                },
                "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
              },
              "metric": {
                "doc": [
                  "Sets the metric which is used with BGP route advertisement."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 4294967295,
                  "type": "integer"
                },
                "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
              },
              "atomic-aggregate": {
                "emptyValue": false,
                "doc": [
                  "If set to 'true', upstream routers will be notified that route is aggregated.",
                  "Default is false."
                ],
                "type": "boolean",
                "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
              },
              "community": {
                "doc": [
                  "Sets the community list of the route.The value is community list name."
                ],
                "type": "string",
                "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
              },
              "as_path_exclude": {
                "doc": [
                  "Excludes AS numbers from the AS path. The value is a comma delimited list of",
                  "autonomous system numbers to be excluded for incoming routes."
                ],
                "type": "string",
                "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
              },
              "local_preference": {
                "doc": [
                  "Sets the BGP local preference and the local preference value of an IBGP route."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 4294967295,
                  "type": "integer"
                },
                "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
              },
              "aggregator_as": {
                "doc": [
                  "Sets the originating AS of an aggregated route. The value is the Autonomous",
                  "System  number."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 4294967295,
                  "type": "integer"
                },
                "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
              },
              "ipv6_next_hop_global": {
                "doc": [
                  "+ Sets the BGP-4",
                  "+ global IPv6 next hop address. The value is the IPv6 address."
                ],
                "type": "string",
                "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
              },
              "as_path_prepend": {
                "doc": [
                  "Prepends AS numbers to the AS path. The value is a list of AS numbers seperated",
                  "by a space."
                ],
                "type": "string",
                "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
              },
              "extcommunity_rt": {
                "doc": [
                  "Sets the route target extended community of a BGP route. The value is the",
                  "community attribute in the form AA:NN where AA can be either AS number or IP",
                  "address and NN is the community identifier."
                ],
                "type": "string",
                "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
        },
        "exitpolicy": {
          "category": "configuration",
          "doc": [
            "Rather than normal exiting, route map can continue on processing next route map,",
            "or goto N route map and continue on processing."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "goto",
                "next"
              ],
              "type": "string"
            },
            "min": 0
          },
          "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
        },
        "description": {
          "category": "configuration",
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 80
            },
            "min": 0
          },
          "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
        },
        "call": {
          "category": "configuration",
          "doc": [
            "If call command is used, nextrm indicate which route map to goto."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "uuid",
              "refTable": "Route_Map_Entry"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
        },
        "match_community_list": {
          "category": "configuration",
          "doc": [
            "Match routes based on community list."
          ],
          "type": {
            "max": 1,
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "BGP_Community_Filter"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Route_Map_Entry/Common Columns"
        },
        "set_community_list_delete": {
          "category": "configuration",
          "doc": [
            "Removes communities from the specified community list for BGP route",
            "advertisements."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "BGP_Community_Filter"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
        },
        "match_extcommunity_list": {
          "category": "configuration",
          "doc": [
            "Match routes based on extended community list."
          ],
          "type": {
            "max": 1,
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "BGP_Community_Filter"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
        },
        "goto_target": {
          "category": "configuration",
          "doc": [
            "If exitpolicy is goto, nextpref is the route map to jump to."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "uuid",
              "refTable": "Route_Map_Entry"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
        },
        "match_ipv4_prefix_list": {
          "category": "configuration",
          "doc": [
            "Match routes based on IPv4 prefix list."
          ],
          "type": {
            "max": 1,
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "Prefix_List"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
        },
        "action": {
          "category": "configuration",
          "doc": [
            "There are three types, permit, deny, and any."
          ],
          "type": {
            "key": {
              "enum": [
                "permit",
                "deny"
              ],
              "type": "string"
            }
          },
          "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
        },
        "match_as_path": {
          "category": "configuration",
          "doc": [
            "Match routes based on AS path."
          ],
          "type": {
            "max": 1,
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "BGP_ASPath_Filter"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Route_Map_Entry/Common Columns"
        },
        "match": {
          "category": "configuration",
          "doc": [
            "The match rule for route map. Default is deny."
          ],
          "type": {
            "max": "unlimited",
            "valueMap": {
              "origin": {
                "doc": [
                  "Matches BGP routes based on the origin of the specified route. The allowed",
                  "values are below.",
                  "",
                  "1. <mark>EGP</mark> - Indicates that the route is learned through EBGP.",
                  "1. <mark>IGP</mark> - Indicates that the route is learned through IBGP.",
                  "1. <mark>incomplete</mark> - Indicates that the origin of route is unknown. This",
                  "occurs when a route is redistributed into BGP."
                ],
                "type": {
                  "enum": [
                    "EGP",
                    "IBGP",
                    "incomplete"
                  ],
                  "type": "string"
                },
                "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
              },
              "ipv6_next_hop": {
                "doc": [
                  "Matches routes based on next hop IPv6 address."
                ],
                "type": "string",
                "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
              },
              "metric": {
                "doc": [
                  "Matches routes with the specific metric value."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 4294967295,
                  "type": "integer"
                },
                "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
              },
              "probability": {
                "doc": [
                  "Randomly match specified percentage of the routes."
                ],
                "type": {
                  "minInteger": 1,
                  "maxInteger": 100,
                  "type": "integer"
                },
                "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
        },
        "match_ipv6_prefix_list": {
          "category": "configuration",
          "doc": [
            "Match routes based on IPv6 prefix list."
          ],
          "type": {
            "max": 1,
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "Prefix_List"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/Route_Map_Entry/Global Route Map Entries Configuration"
        }
      },
      "title": "Route Map Entry"
    },
    "BGP_ASPath_Filter": {
      "indexes": [
        [
          "name"
        ]
      ],
      "columns": {
        "deny": {
          "category": "configuration",
          "doc": [
            "Denied POSIX regular expressions."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "string",
              "maxLength": 80
            },
            "min": 0
          },
          "group": "/BGP_ASPath_Filter/IP AS Path Filter List Configuration"
        },
        "name": {
          "category": "configuration",
          "doc": [
            "Name of the as-path filter."
          ],
          "type": {
            "key": {
              "type": "string",
              "maxLength": 80
            }
          },
          "group": "/BGP_ASPath_Filter/IP AS Path Filter List Configuration"
        },
        "permit": {
          "category": "configuration",
          "doc": [
            "Permitted POSIX regular expressions."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "string",
              "maxLength": 80
            },
            "min": 0
          },
          "group": "/BGP_ASPath_Filter/IP AS Path Filter List Configuration"
        }
      },
      "isRoot": true,
      "title": "BGP ASPath Filter"
    },
    "Prefix_List": {
      "indexes": [
        [
          "name"
        ]
      ],
      "columns": {
        "prefix_list_entries": {
          "category": "configuration",
          "group": "/Prefix_List/Global IP Address Prefix List Configuration",
          "relationship": "1:m",
          "doc": [
            "Prefix list entries keyed by preference value."
          ],
          "keyname": "preference",
          "type": {
            "max": "unlimited",
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "value": {
              "type": "uuid",
              "refTable": "Prefix_List_Entry"
            },
            "min": 0
          }
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Prefix_List/Common Columns"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Prefix_List/Common Columns"
        },
        "name": {
          "category": "configuration",
          "doc": [
            "Name of the prefix list."
          ],
          "type": {
            "key": {
              "type": "string",
              "maxLength": 80
            }
          },
          "group": "/Prefix_List/Global IP Address Prefix List Configuration"
        },
        "description": {
          "category": "configuration",
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 80
            },
            "min": 0
          },
          "group": "/Prefix_List/Global IP Address Prefix List Configuration"
        }
      },
      "isRoot": true,
      "title": "Prefix List"
    },
    "Prefix_List_Entry": {
      "columns": {
        "le": {
          "category": "configuration",
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 128,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/Prefix_List_Entry/Global Prefix List Entries Configuration"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Prefix_List_Entry/Common Columns"
        },
        "ge": {
          "category": "configuration",
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 128,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/Prefix_List_Entry/Global Prefix List Entries Configuration"
        },
        "prefix": {
          "category": "configuration",
          "type": {
            "key": {
              "type": "string",
              "maxLength": 43
            }
          },
          "group": "/Prefix_List_Entry/Global Prefix List Entries Configuration"
        },
        "action": {
          "category": "configuration",
          "doc": [
            "There are three types, permit, deny, and any."
          ],
          "type": {
            "key": {
              "enum": [
                "permit",
                "deny",
                "any"
              ],
              "type": "string"
            }
          },
          "group": "/Prefix_List_Entry/Global Prefix List Entries Configuration"
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Prefix_List_Entry/Common Columns"
        }
      },
      "title": "Prefix List Entry"
    },
    "BGP_Community_Filter": {
      "indexes": [
        [
          "name"
        ]
      ],
      "columns": {
        "deny": {
          "category": "configuration",
          "doc": [
            "Denied POSIX regular expressions."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "string",
              "maxLength": 80
            },
            "min": 0
          },
          "group": "/BGP_Community_Filter/Global Community and Extended Community Configuration"
        },
        "type": {
          "category": "configuration",
          "doc": [
            "There are two types, either \"extcommunity-list\" or \"community-list\"."
          ],
          "type": {
            "key": {
              "enum": [
                "extcommunity-list",
                "community-list"
              ],
              "type": "string"
            }
          },
          "group": "/BGP_Community_Filter/Global Community and Extended Community Configuration"
        },
        "name": {
          "category": "configuration",
          "doc": [
            "Name of the list."
          ],
          "type": {
            "key": {
              "type": "string",
              "maxLength": 80
            }
          },
          "group": "/BGP_Community_Filter/Global Community and Extended Community Configuration"
        },
        "permit": {
          "category": "configuration",
          "doc": [
            "Permitted POSIX regular expressions."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "string",
              "maxLength": 80
            },
            "min": 0
          },
          "group": "/BGP_Community_Filter/Global Community and Extended Community Configuration"
        }
      },
      "isRoot": true,
      "title": "BGP Community Filter"
    },
    "Route": {
      "doc": [
        "Global routes information base within an [System](System).",
        "",
        "A [Route](Route) record represents a route. This is a unique record per (vrf,",
        "prefix, protocol) set."
      ],
      "indexes": [
        [
          "vrf",
          "from",
          "prefix"
        ]
      ],
      "columns": {
        "distance": {
          "category": {
            "follows": "from"
          },
          "emptyValue": 1,
          "group": "/Route/Global Routes Configuration",
          "doc": [
            "Administrative distance for the route entry. This value is populated every time",
            "a protocol or a user adds a new entry. The default value is 1 which is the",
            "default distance for static routes."
          ],
          "mutable": false,
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 255,
              "type": "integer"
            },
            "min": 0
          }
        },
        "from": {
          "category": {
            "per-value": [
              {
                "category": "status",
                "value": "connected"
              },
              {
                "category": "configuration",
                "value": "static"
              },
              {
                "category": "status",
                "value": "bgp"
              },
              {
                "category": "status",
                "value": "ospf"
              }
            ]
          },
          "mutable": false,
          "doc": [
            "Protocol that is responsible for this entry. The value is `bgp` if BGP created",
            "this entry, `static` when the user configures a static route, `connected` if it",
            "is a directly connected device and `ospf` if OSPF created this entry."
          ],
          "type": {
            "key": {
              "enum": [
                "connected",
                "static",
                "bgp",
                "ospf"
              ],
              "type": "string"
            }
          },
          "group": "/Route/Global Routes Configuration"
        },
        "address_family": {
          "category": {
            "follows": "from"
          },
          "emptyValue": "ipv4",
          "group": "/Route/Global Routes Configuration",
          "doc": [
            "Represents the address family for this entry. Default value is `ipv4`."
          ],
          "mutable": false,
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "ipv4",
                "ipv6"
              ],
              "type": "string"
            },
            "min": 0
          }
        },
        "protocol_specific": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "bgp_loc_pref": {
                "doc": [
                  "Local preference path attribute. Used by BGP to influence in the best path",
                  "selectionUsed by BGP to influence in the best path selection.."
                ],
                "type": "string",
                "group": "/Route/Protocol Specific"
              },
              "bgp_origin": {
                "doc": [
                  "Indicates whether a route is `IGP`, `EGP` or `incomplete`."
                ],
                "type": "string",
                "group": "/Route/Protocol Specific"
              },
              "bgp_flags": {
                "doc": [
                  "Route status flags. Allowed values are `history`, `damped`,`multipath`"
                ],
                "type": "string",
                "group": "/Route/Protocol Specific"
              },
              "bgp_as_path": {
                "doc": [
                  "List of AS path number for a route. Example: 200,300,400"
                ],
                "type": "string",
                "group": "/Route/Protocol Specific"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Route/Protocol Specific"
        },
        "metric": {
          "category": {
            "follows": "from"
          },
          "emptyValue": 0,
          "group": "/Route/Global Routes Configuration",
          "doc": [
            "This is the BGP Multi Exit Discriminator (MED) attribute used in best path",
            "selection. The MED provides a dynamic way to influence another AS in the way to",
            "reach a certain route when there are multiple entry points for that AS.  BGP",
            "decision process takes weight, local preference, AS path, Origin and MED into",
            "account.  For selection, if all other factors are equal, the exit point with the",
            "lowest MED is preferred. Default value is 0"
          ],
          "mutable": false,
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          }
        },
        "selected": {
          "category": "status",
          "doc": [
            "Route table can have entries which may not be selected for forwarding. This flag",
            "indicates if this entry is selected as an active route for forwarding. Default",
            "is `false`."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/Route/Global Routes Configuration"
        },
        "sub_address_family": {
          "category": {
            "follows": "from"
          },
          "emptyValue": "unicast",
          "group": "/Route/Global Routes Configuration",
          "doc": [
            "Represents more information regarding this entry. Default is `unicast`."
          ],
          "mutable": false,
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "unicast",
                "multicast",
                "vpn"
              ],
              "type": "string"
            },
            "min": 0
          }
        },
        "prefix": {
          "category": {
            "follows": "from"
          },
          "mutable": false,
          "doc": [
            "IPv4 or IPv6 destination prefix and mask in the address/mask format. Example",
            "192.168.0.0/16"
          ],
          "type": {
            "key": {
              "type": "string",
              "maxLength": 49
            }
          },
          "group": "/Route/Global Routes Configuration"
        },
        "vrf": {
          "category": {
            "follows": "from"
          },
          "group": "/Route/Global Routes Configuration",
          "relationship": "m:1",
          "doc": [
            "Reference to the VRF table, to which this route belongs."
          ],
          "mutable": false,
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "VRF"
            }
          }
        },
        "protocol_private": {
          "category": "status",
          "doc": [
            "Indicates that this row is a protocol specific route entry. The entries which",
            "have this value set, should not participate in routing. Example: BGP can store",
            "routes for reference and future selection but should not currently be used for",
            "forwarding. Default is `false`."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/Route/Global Routes Configuration"
        },
        "nexthops": {
          "category": {
            "follows": "from"
          },
          "doc": [
            "List of all the nexthops for this entry. This will be empty in case of",
            "blackhole."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "Nexthop"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/Route/Global Routes Configuration"
        }
      },
      "isRoot": true,
      "title": "Routes Information Base"
    },
    "Nexthop": {
      "doc": [
        "Global list of all the nexthops as used by the [Route](Route) table. Each entry",
        "in the [Route](Route) can have a reference to one or many(for ECMP) entries in",
        "this table."
      ],
      "columns": {
        "status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "arp_resolved": {
                "emptyValue": false,
                "doc": [
                  "Indicate if ARP is resolved for this entry. If the ARP entry is missing, this",
                  "value is `false`"
                ],
                "type": "boolean",
                "group": "/Nexthop/Status"
              },
              "error": {
                "doc": [
                  "Human readable error string."
                ],
                "type": "string",
                "group": "/Nexthop/Status"
              },
              "hw_configured": {
                "emptyValue": false,
                "doc": [
                  "Indicate if nexthop programmed in the asic. If the ARP entry is missing, this",
                  "value is `false`"
                ],
                "type": "boolean",
                "group": "/Nexthop/Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "ephemeral": true,
          "group": "/Nexthop/Status"
        },
        "selected": {
          "category": "status",
          "doc": [
            "Indicates if this nexthop is actively participating in forwarding. Multiple",
            "nexthops can exist for each route entry but the routing protocol can indicate if",
            "a particular nexthop should not be used in forwarding. Default is `true`."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": true,
          "group": "/Nexthop/Configuration"
        },
        "weight": {
          "category": "configuration",
          "doc": [
            "Weight is used to differentially balance the packets. Example: For a route if",
            "there are 2 nexthops nh1 with weight 5 and nh2 with weight 1, then for every 5",
            "packets that uses nh1, one packet will use nh2. In the first release, the above",
            "case is not supported. Only ECMP is supported. Default is 0 (for static routes)."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 0,
          "group": "/Nexthop/Configuration"
        },
        "type": {
          "category": "configuration",
          "doc": [
            "Type of the nexthop. Default is `unicast`."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "unicast"
              ],
              "type": "string"
            },
            "min": 0
          },
          "emptyValue": "unicast",
          "group": "/Nexthop/Configuration"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Nexthop/Common Columns"
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Nexthop/Common Columns"
        },
        "ip_address": {
          "category": "configuration",
          "mutable": false,
          "doc": [
            "IP address of the nexthop device."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 45
            },
            "min": 0
          },
          "group": "/Nexthop/Configuration"
        },
        "ports": {
          "category": "configuration",
          "doc": [
            "List of outgoing ports. Nexthop entries of type `unicast` can have atmost 1",
            "port."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "Port"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/Nexthop/Configuration"
        }
      },
      "title": "Nexthops"
    },
    "BGP_Router": {
      "columns": {
        "router_id": {
          "category": "configuration",
          "doc": [
            "Specifies the router-id for given ASN."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 15
            },
            "min": 0
          },
          "group": "/BGP_Router/Configuration"
        },
        "status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "ephemeral": true,
          "group": "/BGP_Router/Status"
        },
        "redistribute": {
          "category": "configuration",
          "doc": [
            "Specifies which protocol routes should be redistributed into BGP. The routes can",
            "be filtered by specifying the route-map."
          ],
          "type": {
            "max": 3,
            "key": {
              "enum": [
                "connected",
                "static",
                "ospf"
              ],
              "type": "string"
            },
            "value": {
              "type": "uuid",
              "refTable": "Route_Map"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/BGP_Router/Configuration"
        },
        "deterministic_med": {
          "category": "configuration",
          "doc": [
            "When enabled, selects the best-MED path among paths advertised from the",
            "neighboring AS. Default is false."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/BGP_Router/Configuration"
        },
        "bgp_neighbors": {
          "category": "configuration",
          "group": "/BGP_Router/Configuration",
          "relationship": "1:m",
          "doc": [
            "BGP neighbors or neighbor groups, keyed by IP for the former or any     string",
            "name for the latter."
          ],
          "keyname": "ip_or_group_name",
          "type": {
            "max": "unlimited",
            "key": {
              "type": "string",
              "maxLength": 80
            },
            "value": {
              "type": "uuid",
              "refTable": "BGP_Neighbor"
            },
            "min": 0
          }
        },
        "always_compare_med": {
          "category": "configuration",
          "doc": [
            "Compares MED (Multi-Exit Discriminitor) from different neighbors. Default is",
            "false."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/BGP_Router/Configuration"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/BGP_Router/Common Columns"
        },
        "gr_stale_timer": {
          "category": "configuration",
          "doc": [
            "Specifies the maximum time to hold onto restarting peer stale paths. Range:",
            "1-3600 seconds. Default value is 360 seconds."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 1,
              "maxInteger": 3600,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 360,
          "group": "/BGP_Router/Configuration"
        },
        "fast_external_failover": {
          "category": "configuration",
          "doc": [
            "Enables fast external failover for BGP directly connected peering sessions.",
            "Default is false."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/BGP_Router/Configuration"
        },
        "timers": {
          "category": "configuration",
          "type": {
            "max": 2,
            "valueMap": {
              "holdtime": {
                "emptyValue": 180,
                "doc": [
                  "Specifies BGP hold time in seconds. Default is 180 seconds."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 65535,
                  "type": "integer"
                },
                "group": "/BGP_Router/Configuration"
              },
              "keepalive": {
                "emptyValue": 60,
                "doc": [
                  "Specifies BGP keepalive time in seconds. Default is 60 seconds."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 65535,
                  "type": "integer"
                },
                "group": "/BGP_Router/Configuration"
              }
            },
            "key": "string",
            "value": "integer",
            "min": 0
          },
          "group": "/BGP_Router/Configuration"
        },
        "log_neighbor_changes": {
          "category": "configuration",
          "doc": [
            "Enables logging of BGP neighbor status changes. Default is false."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/BGP_Router/Configuration"
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/BGP_Router/Common Columns"
        },
        "networks": {
          "category": "configuration",
          "doc": [
            "Announces networks for given bgp router."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "string",
              "maxLength": 49
            },
            "min": 0
          },
          "group": "/BGP_Router/Configuration"
        },
        "maximum_paths": {
          "category": "configuration",
          "doc": [
            "Number of paths BGP may install into the routing table. If not specified, BGP",
            "selects a single path. Default is 1."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 1,
              "maxInteger": 255,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 1,
          "group": "/BGP_Router/Configuration"
        }
      },
      "title": "BGP high level configuration"
    },
    "BGP_Neighbor": {
      "doc": [
        "This table holds both BGP neighbors and BGP peer groups.  A boolean named",
        "is_peer_group identifies whether a specific entry is a bgp neighbor or a peer",
        "group."
      ],
      "columns": {
        "update_source": {
          "category": "configuration",
          "doc": [
            "Specifies the source-address to establish BGP connections to neighbors."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 80
            },
            "min": 0
          },
          "group": "/BGP_Neighbor/Neighbor Configuration"
        },
        "weight": {
          "category": "configuration",
          "doc": [
            "This is the weight for routes from this neighbor."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 65535,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/BGP_Neighbor/Neighbor Configuration"
        },
        "local_interface": {
          "doc": [
            "Reference to the corresponding interface.  This is used only for ipv6. Default",
            "is none."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "uuid",
              "refTable": "Interface"
            },
            "min": 0
          },
          "group": "/BGP_Neighbor/Neighbor Configuration"
        },
        "bgp_peer_group": {
          "category": "configuration",
          "doc": [
            "This column is used only if the entry is a BGP neighbor.  It represents the peer",
            "group this BGP neighbor is a member of.  Default is none."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "uuid",
              "refTable": "BGP_Neighbor"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/BGP_Neighbor/Neighbor Configuration"
        },
        "shutdown": {
          "category": "configuration",
          "doc": [
            "Specifies whether the neighbor has been administratively shut down. If not",
            "specified, the default is false."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/BGP_Neighbor/Neighbor Configuration"
        },
        "aspath_filters": {
          "category": "configuration",
          "doc": [
            "Name and direction of the as-path filters."
          ],
          "type": {
            "max": 2,
            "valueMap": {
              "out": {
                "doc": [
                  "AS Path filter associated with outbound routes."
                ],
                "type": {
                  "type": "uuid",
                  "refTable": "BGP_ASPath_Filter"
                },
                "group": "/BGP_Neighbor/Neighbor Configuration"
              },
              "in": {
                "doc": [
                  "AS Path filter associated with incoming routes."
                ],
                "type": {
                  "type": "uuid",
                  "refTable": "BGP_ASPath_Filter"
                },
                "group": "/BGP_Neighbor/Neighbor Configuration"
              }
            },
            "key": {
              "enum": [
                "in",
                "out"
              ],
              "type": "string"
            },
            "value": {
              "type": "uuid",
              "refTable": "BGP_ASPath_Filter"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/BGP_Neighbor/Neighbor Configuration"
        },
        "route_maps": {
          "category": "configuration",
          "doc": [
            "Name and direction of the route maps."
          ],
          "type": {
            "max": 2,
            "valueMap": {
              "out": {
                "doc": [
                  "Map associated with outbound routes."
                ],
                "type": {
                  "type": "uuid",
                  "refTable": "Route_Map"
                },
                "group": "/BGP_Neighbor/Neighbor Configuration"
              },
              "in": {
                "doc": [
                  "Map associated with incoming routes."
                ],
                "type": {
                  "type": "uuid",
                  "refTable": "Route_Map"
                },
                "group": "/BGP_Neighbor/Neighbor Configuration"
              }
            },
            "key": {
              "enum": [
                "in",
                "out"
              ],
              "type": "string"
            },
            "value": {
              "type": "uuid",
              "refTable": "Route_Map"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/BGP_Neighbor/Neighbor Configuration"
        },
        "remove_private_as": {
          "category": "configuration",
          "doc": [
            "Specifies whether private AS should be removed. If not specified, the default",
            "value is false."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/BGP_Neighbor/Neighbor Configuration"
        },
        "prefix_lists": {
          "category": "configuration",
          "doc": [
            "Name and direction of the prefix lists."
          ],
          "type": {
            "max": 2,
            "valueMap": {
              "out": {
                "doc": [
                  "Prefix list associated with outbound routes."
                ],
                "type": {
                  "type": "uuid",
                  "refTable": "Prefix_List"
                },
                "group": "/BGP_Neighbor/Neighbor Configuration"
              },
              "in": {
                "doc": [
                  "Prefix list associated with incoming routes."
                ],
                "type": {
                  "type": "uuid",
                  "refTable": "Prefix_List"
                },
                "group": "/BGP_Neighbor/Neighbor Configuration"
              }
            },
            "key": {
              "enum": [
                "in",
                "out"
              ],
              "type": "string"
            },
            "value": {
              "type": "uuid",
              "refTable": "Prefix_List"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/BGP_Neighbor/Neighbor Configuration"
        },
        "inbound_soft_reconfiguration": {
          "category": "configuration",
          "doc": [
            "Allow inbound soft reconfiguration for this neighbor."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "group": "/BGP_Neighbor/Neighbor Configuration"
        },
        "statistics": {
          "category": "statistics",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "bgp_peer_dynamic_cap_in_count": {
                "doc": [
                  "This indicates how many times a dynamic cap message has been received."
                ],
                "type": "integer",
                "group": "/BGP_Neighbor/BGP Neighbor Statistics"
              },
              "bgp_peer_refresh_in_count": {
                "doc": [
                  "This indicates how many times a frefresh message has been received."
                ],
                "type": "integer",
                "group": "/BGP_Neighbor/BGP Neighbor Statistics"
              },
              "bgp_peer_update_in_count": {
                "doc": [
                  "This indicates how many times an update message has been received."
                ],
                "type": "integer",
                "group": "/BGP_Neighbor/BGP Neighbor Statistics"
              },
              "bgp_peer_readtime": {
                "doc": [
                  "This indicates the last time an update or keepalive message has been received."
                ],
                "type": "integer",
                "group": "/BGP_Neighbor/BGP Neighbor Statistics"
              },
              "bgp_peer_refresh_out_count": {
                "doc": [
                  "This indicates how many times a refresh message has been sent."
                ],
                "type": "integer",
                "group": "/BGP_Neighbor/BGP Neighbor Statistics"
              },
              "bgp_peer_dropped_count": {
                "doc": [
                  "This indicates the number of times peers have been dropped from the established",
                  "state."
                ],
                "type": "integer",
                "group": "/BGP_Neighbor/BGP Neighbor Statistics"
              },
              "bgp_peer_keepalive_in_count": {
                "doc": [
                  "This indicates how many times a keepalive message has been received."
                ],
                "type": "integer",
                "group": "/BGP_Neighbor/BGP Neighbor Statistics"
              },
              "bgp_peer_open_in_count": {
                "doc": [
                  "This indicates how many times an open message has been received."
                ],
                "type": "integer",
                "group": "/BGP_Neighbor/BGP Neighbor Statistics"
              },
              "bgp_peer_open_out_count": {
                "doc": [
                  "This indicates how many times an open message has been sent."
                ],
                "type": "integer",
                "group": "/BGP_Neighbor/BGP Neighbor Statistics"
              },
              "bgp_peer_keepalive_out_count": {
                "doc": [
                  "This indicates how many times a keepalive message has been sent."
                ],
                "type": "integer",
                "group": "/BGP_Neighbor/BGP Neighbor Statistics"
              },
              "bgp_peer_dynamic_cap_out_count": {
                "doc": [
                  "This indicates how many times a dynamic cap message has been sent."
                ],
                "type": "integer",
                "group": "/BGP_Neighbor/BGP Neighbor Statistics"
              },
              "bgp_peer_resettime": {
                "doc": [
                  "Indicates the last time peer was reset."
                ],
                "type": "integer",
                "group": "/BGP_Neighbor/BGP Neighbor Statistics"
              },
              "bgp_peer_notify_in_count": {
                "doc": [
                  "This indicates how many times a notify message has been received."
                ],
                "type": "integer",
                "group": "/BGP_Neighbor/BGP Neighbor Statistics"
              },
              "bgp_peer_notify_out_count": {
                "doc": [
                  "This indicates how many times a notify message has been sent."
                ],
                "type": "integer",
                "group": "/BGP_Neighbor/BGP Neighbor Statistics"
              },
              "bgp_peer_established_count": {
                "doc": [
                  "This indicates the number of times peers have been established."
                ],
                "type": "integer",
                "group": "/BGP_Neighbor/BGP Neighbor Statistics"
              },
              "bgp_peer_uptime": {
                "doc": [
                  "This indicates how long since peer has been in the established state, or since",
                  "the last route update was received."
                ],
                "type": "integer",
                "group": "/BGP_Neighbor/BGP Neighbor Statistics"
              },
              "bgp_peer_update_out_count": {
                "doc": [
                  "This indicates how many times an update message has been sent."
                ],
                "type": "integer",
                "group": "/BGP_Neighbor/BGP Neighbor Statistics"
              }
            },
            "key": "string",
            "value": "integer",
            "min": 0
          },
          "ephemeral": true,
          "group": "/BGP_Neighbor/BGP Neighbor Statistics"
        },
        "remote_as": {
          "category": "configuration",
          "doc": [
            "Peer AS number. For EBGP, the peer is in another AS, so the remote AS number",
            "must be different from the local router's AS number or BGP router asn. For IBGP,",
            "the peer is in the same AS, so the two AS numbers must be the same. Remote AS",
            "number. Range: 1-4294967295."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 1,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/BGP_Neighbor/Neighbor Configuration"
        },
        "ttl_security_hops": {
          "category": "configuration",
          "doc": [
            "Specifies the maximum number of hops to the BGP peer."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 1,
              "maxInteger": 254,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/BGP_Neighbor/Neighbor Configuration"
        },
        "ebgp_multihop": {
          "category": "configuration",
          "doc": [
            "If set to \"true\", allows BGP connections with peers that are not directly",
            "connected. Default is \"false\"."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/BGP_Neighbor/Neighbor Configuration"
        },
        "passive": {
          "category": "configuration",
          "doc": [
            "Indicates that open messages should NOT be sent to this neighbor. Default is",
            "false."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/BGP_Neighbor/Neighbor Configuration"
        },
        "advertisement_interval": {
          "category": "configuration",
          "doc": [
            "Minimum interval between sending BGP routing updates. Range: 0-600 seconds."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 600,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/BGP_Neighbor/Neighbor Configuration"
        },
        "allow_as_in": {
          "category": "configuration",
          "doc": [
            "Allow-as-in is the number of times BGP can allow an instance of AS to be in the",
            "AS_PATH."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 1,
              "maxInteger": 10,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/BGP_Neighbor/Neighbor Configuration"
        },
        "status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "bgp_num_clear_counters_peer_soft_out_requested": {
                "doc": [
                  "Indicates the number of times soft clear was requested for outbound routing",
                  "policy updates. When this value is greater than",
                  "bgp_num_clear_counters_peer_soft_out_performed, then soft clear is still",
                  "pending."
                ],
                "type": "integer",
                "group": "/BGP_Neighbor/Status"
              },
              "bgp_num_clear_counters_peer_soft_in_performed": {
                "doc": [
                  "Indicates the number of times soft clear is performed for inbound routing policy",
                  "updates."
                ],
                "type": "integer",
                "group": "/BGP_Neighbor/Status"
              },
              "bgp_num_clear_counters_peer_soft_out_performed": {
                "doc": [
                  "Indicates the number of times soft clear is performed for outbound routing",
                  "policy updates."
                ],
                "type": "integer",
                "group": "/BGP_Neighbor/Status"
              },
              "bgp_peer_state": {
                "emptyValue": "Idle",
                "doc": [
                  "This represents the BGP neighbor state at this specific instance in time.  The",
                  "value can be one of Idle, Connect, Active, OpenSent, OpenConfirm, Established,",
                  "Clearing or Deleted and can change any time.  Default is Idle."
                ],
                "type": {
                  "enum": [
                    "Idle",
                    "Connect",
                    "Active",
                    "OpenSent",
                    "OpenConfirm",
                    "Established",
                    "Clearing",
                    "Deleted"
                  ],
                  "type": "string"
                },
                "group": "/BGP_Neighbor/BGP Neighbor or Peer group Status Info"
              },
              "bgp_num_clear_counters_peer_soft_in_requested": {
                "doc": [
                  "Indicates the number of times soft clear was requested for inbound routing",
                  "policy updates. When this value is greater than",
                  "bgp_num_clear_counters_peer_soft_in_performed, then soft clear is still pending."
                ],
                "type": "integer",
                "group": "/BGP_Neighbor/Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "doc": [
            "These values describe various status information about this BGP neighbor or BGP",
            "Peer group entry."
          ],
          "ephemeral": true,
          "group": [
            "/BGP_Neighbor/Status",
            "/BGP_Neighbor/BGP Neighbor or Peer group Status Info"
          ]
        },
        "description": {
          "category": "configuration",
          "doc": [
            "This is an optional string which can be used for describing this entry. Default",
            "is empty."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 80
            },
            "min": 0
          },
          "emptyValue": "",
          "group": "/BGP_Neighbor/Neighbor Configuration"
        },
        "local_as": {
          "category": "configuration",
          "doc": [
            "To specify a different asn from BGP router asn to be used as local AS number in",
            "update messages to peers. Local AS number. Range: 1-4294967295."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 1,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/BGP_Neighbor/Neighbor Configuration"
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/BGP_Neighbor/Common Columns"
        },
        "password": {
          "category": "configuration",
          "doc": [
            "The password for this entry."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 80
            },
            "min": 0
          },
          "group": "/BGP_Neighbor/Neighbor Configuration"
        },
        "tcp_port_number": {
          "emptyValue": 179,
          "doc": [
            "This is the BGP neighbor's tcp port number.  Default value is 179."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 65535,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/BGP_Neighbor/Neighbor Configuration"
        },
        "is_peer_group": {
          "category": "configuration",
          "emptyValue": false,
          "group": "/BGP_Neighbor/Neighbor Configuration",
          "doc": [
            "This is a flag which identifies whether this specific entry is an individual BGP",
            "neighbor or is a BGP peer group.  A value of true implies a peer group.",
            "Otherwise, the entry represents a BGP neighbor.  If the value is not set, it",
            "implies false."
          ],
          "mutable": false,
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          }
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/BGP_Neighbor/Common Columns"
        },
        "timers": {
          "category": "configuration",
          "doc": [
            "BGP per neighbor timers - Connect timer/Keep-alive Interval."
          ],
          "type": {
            "max": 2,
            "valueMap": {
              "holdtime": {
                "emptyValue": 180,
                "doc": [
                  "Set the hold time for a specific BGP peer. The value is hold time in seconds.",
                  "Default value is 180 seconds."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 65535,
                  "type": "integer"
                },
                "group": "/BGP_Neighbor/Neighbor Configuration"
              },
              "keepalive": {
                "emptyValue": 60,
                "doc": [
                  "Set the keepalive interval for a specific BGP peer. The value is keepalive",
                  "interval in seconds. Default value is 60 seconds."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 65535,
                  "type": "integer"
                },
                "group": "/BGP_Neighbor/Neighbor Configuration"
              }
            },
            "key": "string",
            "value": "integer",
            "min": 0
          },
          "group": "/BGP_Neighbor/Neighbor Configuration"
        },
        "maximum_prefix_limit": {
          "category": "configuration",
          "doc": [
            "Maximum number of prefixes that can be accepted on a BGP peer session. When the",
            "limit is exceeded, a system log message is logged."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 1,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/BGP_Neighbor/Neighbor Configuration"
        }
      },
      "title": "BGP Neighbors and Peer Groups"
    },
    "Recursive_Nexthop": {
      "doc": [
        "Recursive next hop resolution. When a protocol has a new recursive next hop and",
        "its reachability is unknown, the protocol requests the recursive next hop to be",
        "resolved. The result is represented as nh_ips, nh_metric, and nh_ports."
      ],
      "indexes": [
        [
          "vrf",
          "rnh_ip"
        ]
      ],
      "columns": {
        "rnh_ip": {
          "category": "status",
          "mutable": false,
          "doc": [
            "IPv4 or IPv6 recursive next hop address to be resolved. Example 192.168.0.2"
          ],
          "type": {
            "key": {
              "type": "string",
              "maxLength": 49
            }
          },
          "group": "/Recursive_Nexthop/Next hop resolution"
        },
        "rnh_from": {
          "category": "status",
          "doc": [
            "This indicates from which protocol the request comes."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "enum": [
                "bgp",
                "ldp"
              ],
              "type": "string"
            },
            "min": 0
          },
          "group": "/Recursive_Nexthop/Next hop resolution"
        },
        "nh_metric": {
          "category": "status",
          "doc": [
            "The cost to reach the forwarding next hops that the recursive next hop is",
            "resolved to."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/Recursive_Nexthop/Next hop resolution"
        },
        "vrf": {
          "category": "status",
          "group": "/Recursive_Nexthop/Next hop resolution",
          "relationship": "m:1",
          "doc": [
            "Reference to the VRF to which this entry belongs to."
          ],
          "mutable": false,
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "VRF"
            }
          }
        },
        "nh_ips": {
          "category": "status",
          "doc": [
            "The IPv4 or IPv6 addresses of the forwarding next hops that the recursive next",
            "hop is resolved to. It is possible that the recursive next hop is resolved to a",
            "single forwarding next hop or a ECMP which consists a list of forwarding next",
            "hops. Example 12.1.0.2"
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "string",
              "maxLength": 49
            },
            "min": 0
          },
          "group": "/Recursive_Nexthop/Next hop resolution"
        },
        "nh_ports": {
          "category": "status",
          "doc": [
            "The ports of the forwarding next hops that the recursive next hop is resolved",
            "to. It is possible that the recursive next hop is resolved to a single",
            "forwarding next hop or a ECMP which consists a list of next hops."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "Port"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/Recursive_Nexthop/Next hop resolution"
        }
      },
      "isRoot": true,
      "title": "Next hop resolution"
    },
    "BGP_Route": {
      "doc": [
        "BGP local RIB."
      ],
      "indexes": [
        [
          "vrf",
          "prefix",
          "peer"
        ]
      ],
      "columns": {
        "origin": {
          "category": "status",
          "doc": [
            "Origin of the BGP route. Allowed values are",
            "<mark>egp</mark>,<mark>igp</mark>,<mark>incomplete</mark> igp origin code",
            "specifies whether route entry originated from an Interior Gateway Protocol (IGP)",
            "and was advertised with a network router configuration command. egp origin code",
            "specifies whether route entry originated from an Exterior Gateway Protocol",
            "(EGP). incomplete origin code is assigned to redistributed routes. Default value",
            "is igp."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 30
            },
            "min": 0
          },
          "emptyValue": "igp",
          "group": "/BGP_Route/BGP Routes"
        },
        "weight": {
          "category": "status",
          "doc": [
            "Weight of the BGP route. Default value is 32768"
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 32768,
          "group": "/BGP_Route/BGP Routes"
        },
        "metric": {
          "category": "status",
          "emptyValue": 0,
          "group": "/BGP_Route/BGP Routes",
          "doc": [
            "This is the BGP Multi Exit Discriminator (MED) attribute used in best path",
            "selection. Default value is 0"
          ],
          "mutable": false,
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          }
        },
        "creation_time": {
          "category": "status",
          "doc": [
            "Time in seconds, at which the route arrived from the neighbor. Value is the",
            "number of seconds elapsed since epoch. Default value is 0."
          ],
          "type": {
            "key": {
              "minInteger": 0,
              "type": "integer"
            }
          },
          "emptyValue": 0,
          "group": "/BGP_Route/BGP Routes"
        },
        "community": {
          "category": "status",
          "doc": [
            "Space delimited list of community names for the route. No value means that no",
            "community names are associated with the route."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 80
            },
            "min": 0
          },
          "emptyValue": "",
          "group": "/BGP_Route/BGP Routes"
        },
        "peer": {
          "category": "status",
          "type": {
            "key": {
              "type": "string",
              "maxLength": 45
            }
          }
        },
        "prefix": {
          "category": "status",
          "mutable": false,
          "doc": [
            "IPv4 or IPv6 destination prefix and mask in the address/mask format. Example",
            "192.168.0.0/16"
          ],
          "type": {
            "key": {
              "type": "string",
              "maxLength": 49
            }
          },
          "group": "/BGP_Route/BGP Routes"
        },
        "address_family": {
          "category": "status",
          "emptyValue": "ipv4",
          "group": "/BGP_Route/BGP Routes",
          "doc": [
            "Represents the address family for this entry. Default value is `ipv4`."
          ],
          "mutable": false,
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "ipv4",
                "ipv6"
              ],
              "type": "string"
            },
            "min": 0
          }
        },
        "aggregator": {
          "category": "status",
          "doc": [
            "IP address of the BGP node responsible for route aggregation. Value is empty if",
            "route is not aggregated."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 30
            },
            "min": 0
          },
          "emptyValue": "",
          "group": "/BGP_Route/BGP Routes"
        },
        "aspath": {
          "category": "status",
          "doc": [
            "Aspath for a BGP route. Aspath is the list of autonomous system numbers of the",
            "BGP nodes traversed by the route before reaching local node. Aspath contains",
            "key-value pairs with keys corresponding to the position of the autonomous system",
            "number in the list of autonomous system numbers and values corresponding to",
            "autonomous system numbers."
          ],
          "type": {
            "max": "unlimited",
            "key": "integer",
            "value": "integer",
            "min": 0
          },
          "group": "/BGP_Route/BGP Routes"
        },
        "sub_address_family": {
          "category": "status",
          "emptyValue": "unicast",
          "group": "/BGP_Route/BGP Routes",
          "doc": [
            "Represents subsequent address family identifier such as unicast, multicast or",
            "MPLS VPN. Default is `unicast`."
          ],
          "mutable": false,
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "unicast",
                "multicast",
                "vpn"
              ],
              "type": "string"
            },
            "min": 0
          }
        },
        "aggregator_as": {
          "category": "status",
          "doc": [
            "Originating AS number of the aggregate route. Default value is 0."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 0,
          "group": "/BGP_Route/BGP Routes"
        },
        "ecommunity": {
          "category": "status",
          "doc": [
            "Space delimited list of extended community names for the route. No value means",
            "that no extended community names are associated with the route."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 80
            },
            "min": 0
          },
          "emptyValue": "",
          "group": "/BGP_Route/BGP Routes"
        },
        "vrf": {
          "category": "status",
          "group": "/BGP_Route/BGP Routes",
          "relationship": "m:1",
          "doc": [
            "Reference to the VRF to which this route belongs."
          ],
          "mutable": false,
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "VRF"
            }
          }
        },
        "protocol_iBGP": {
          "category": "status",
          "doc": [
            "Specifies whether the route was learned through iBGP session. Default value is",
            "false."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/BGP_Route/BGP Routes"
        },
        "aggregate": {
          "category": "status",
          "doc": [
            "True if notification is sent to upstream routers that the route is aggregated.",
            "Default value is false."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/BGP_Route/BGP Routes"
        },
        "protocol_internal": {
          "category": "status",
          "doc": [
            "Specifies whether the route originated locally on the BGP peer. Default value is",
            "false."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/BGP_Route/BGP Routes"
        },
        "distance": {
          "category": "status",
          "emptyValue": 0,
          "group": "/BGP_Route/BGP Routes",
          "doc": [
            "Administrative distance for the route entry. Default value is 0."
          ],
          "mutable": false,
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 255,
              "type": "integer"
            },
            "min": 0
          }
        },
        "path_attributes": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "bgp_loc_pref": {
                "emptyValue": "0",
                "doc": [
                  "Local preference path attribute. Used by BGP to influence in the best path",
                  "selection. Default value is 0."
                ],
                "type": "string",
                "group": "/BGP_Route/Path attributes"
              },
              "bgp_origin": {
                "emptyValue": "incomplete",
                "doc": [
                  "Indicates whether a route is `IGP`, `EGP` or `incomplete`. Default is",
                  "incomplete."
                ],
                "type": "string",
                "group": "/BGP_Route/Path attributes"
              },
              "bgp_flags": {
                "emptyValue": "0",
                "doc": [
                  "Route status flags. Allowed values are `history`, `damped`,`multipath`,`valid`,",
                  "`selected` Default value is 0."
                ],
                "type": {
                  "enum": [
                    "history",
                    "damped",
                    "multipath",
                    "valid",
                    "selected"
                  ],
                  "type": "string"
                },
                "group": "/BGP_Route/Path attributes"
              },
              "bgp_as_path": {
                "emptyValue": "0",
                "doc": [
                  "List of AS path number for a route. Default is 0. Example: 200,300,400"
                ],
                "type": "string",
                "group": "/BGP_Route/Path attributes"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/BGP_Route/Path attributes"
        },
        "flags": {
          "category": "status",
          "doc": [
            "Flags attibute of the BGP route.",
            "",
            "1. <mark>DAMPED</mark> - Suppress routes from being advertised due to flapping.",
            "1. <mark>HISTORY</mark> - Router does not have a best path for the route based",
            "on historical information.",
            "1. <mark>STALE</mark> - Used with nonstop forwarding to indicate that the route",
            "is stale and needs to be refreshed when the peer is reestablished.",
            "1. <mark>VALID</mark> - Route has a valid next-hop.",
            "1. <mark>DMED_CHECK</mark> - Route is evaluated as part of an effort to identify",
            "preferred entry point into local AS from neighboring autonomous system.",
            "1. <mark>DMED_SELECTED</mark> - Route is selected as preferred entry point into",
            "local AS from neighboring autonomous system.",
            "1. <mark>REMOVED</mark> - Route has been removed from list of advertised routes",
            "to neighboring autonomous system.",
            "1. <mark>SELECTED</mark> - Route had been selected as best path to destination",
            "prefix.",
            "1. <mark>COUNTED</mark> - Route has been included in internal prefix list count.",
            "1. <mark>MULTIPATH</mark> -Route has been included as part of multipath route",
            "selection to destination prefix.",
            "1. <mark>IGP_CHANGED</mark> - Set for routes exhanged over iBGP intradomain",
            "autonomous system networks."
          ],
          "type": {
            "max": 13,
            "key": {
              "type": "string",
              "maxLength": 30
            },
            "min": 0
          },
          "group": "/BGP_Route/BGP Routes"
        },
        "local_pref": {
          "category": "status",
          "doc": [
            "Local preference of the BGP route. Default value is 0."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 0,
          "group": "/BGP_Route/BGP Routes"
        },
        "bgp_nexthops": {
          "category": "status",
          "doc": [
            "Represents nexthops for this entry. Each entry in the [BGP_Route](BGP_Route) can",
            "have a reference to one or many(for ECMP) nexthop entries."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "BGP_Nexthop"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/BGP_Route/BGP Routes"
        }
      },
      "isRoot": true,
      "title": "BGP Routes Information Base"
    },
    "BGP_Nexthop": {
      "doc": [
        "List of all nexthops used by BGP. Each entry in the BGP RIB can have a reference",
        "to one or many (for ECMP) nexthop entries."
      ],
      "columns": {
        "ip_address": {
          "category": "status",
          "mutable": false,
          "doc": [
            "IP address of the nexthop device."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 45
            },
            "min": 0
          },
          "group": "/BGP_Nexthop/Status"
        },
        "type": {
          "category": "status",
          "doc": [
            "Type of the nexthop. Default is `unicast`."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "unicast"
              ],
              "type": "string"
            },
            "min": 0
          },
          "emptyValue": "unicast",
          "group": "/BGP_Nexthop/Status"
        }
      },
      "title": "BGP Nexthops"
    },
    "Neighbor": {
      "doc": [
        "List of all the connected neighbors."
      ],
      "indexes": [
        [
          "vrf",
          "ip_address"
        ]
      ],
      "columns": {
        "status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "dp_hit": {
                "emptyValue": true,
                "doc": [
                  "Indicates if there is active traffic to the neighbor. This value is periodically",
                  "updated. If the value is set to `false`, it indicates that there was no traffic",
                  "to this neighbor recently. Default is `true`"
                ],
                "type": "boolean",
                "group": "/Neighbor/Neighbor information"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "ephemeral": true,
          "group": "/Neighbor/Neighbor information"
        },
        "address_family": {
          "category": "status",
          "doc": [
            "Address family of the neighbor."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "ipv4",
                "ipv6"
              ],
              "type": "string"
            },
            "min": 0
          },
          "group": "/Neighbor/Neighbor information"
        },
        "mac": {
          "category": "status",
          "doc": [
            "MAC address learned for this neighbor."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string"
            },
            "min": 0
          },
          "group": "/Neighbor/Neighbor information"
        },
        "state": {
          "category": "status",
          "doc": [
            "Current state of the neighbor entry."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "reachable",
                "stale",
                "incomplete",
                "failed",
                "permanent"
              ],
              "type": "string"
            },
            "min": 0
          },
          "group": "/Neighbor/Neighbor information"
        },
        "vrf": {
          "category": "configuration",
          "doc": [
            "Reference to the VRF table, to which this neighbor belongs."
          ],
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "VRF"
            }
          },
          "relationship": "m:1",
          "group": "/Neighbor/Neighbor information"
        },
        "ip_address": {
          "category": "status",
          "doc": [
            "The IPv4 address or the IPv6 address of neighbor"
          ],
          "type": {
            "key": {
              "type": "string",
              "maxLength": 45
            }
          },
          "group": "/Neighbor/Neighbor information"
        },
        "port": {
          "category": "configuration",
          "doc": [
            "Port on which this neighbor was learned."
          ],
          "type": {
            "max": 1,
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "Port"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/Neighbor/Neighbor information"
        }
      },
      "isRoot": true,
      "title": "L2 Neighbors"
    },
    "VLAN": {
      "indexes": [
        [
          "name"
        ]
      ],
      "columns": {
        "macs_invalid": {
          "category": "status",
          "doc": [
            "If `true`, indicates that MACs on this VLAN are invalid. This might be set by",
            "any agent of the system that decides that MACs are indeed invalid. Eventually",
            "those MACs will be cleared from the system and macs_invalid will revert to",
            "`false`."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "group": "/VLAN/MACs Validity"
        },
        "description": {
          "category": "configuration",
          "doc": [
            "User provided description of this VLAN."
          ],
          "type": {
            "max": 1,
            "key": "string",
            "min": 0
          },
          "group": "/VLAN/Configuration"
        },
        "aclv4_in_cfg_version": {
          "category": "configuration",
          "doc": [
            "The version of the 'aclv4_in_cfg' column. This value is incremented by the",
            "management interface each- CLI/REST/Web UI, etc. every time it changes the",
            "'aclv4_in_cfg' value. An empty value means no ACL has been configured for the",
            "VLAN."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/VLAN/ACL Configuration"
        },
        "aclv4_in_cfg": {
          "category": "configuration",
          "doc": [
            "ACL, potentially in flight, desired to be applied to this VLAN, as identified in",
            "the [ACL](ACL)."
          ],
          "type": {
            "max": 1,
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "ACL"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/VLAN/ACL Configuration"
        },
        "admin": {
          "category": "configuration",
          "doc": [
            "Administratively configured state of this VLAN. Default is down if not",
            "specified."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "up",
                "down"
              ],
              "type": "string"
            },
            "min": 0
          },
          "emptyValue": "down",
          "group": "/VLAN/Configuration"
        },
        "aclv4_in_status": {
          "category": "status",
          "doc": [
            "The status of the last version of 'aclv4_in_cfg' column, that has been processed",
            "by switchd."
          ],
          "type": {
            "max": "unlimited",
            "valueMap": {
              "state": {
                "type": {
                  "enum": [
                    "applied",
                    "in_progress",
                    "canceled",
                    "rejected"
                  ],
                  "type": "string"
                },
                "group": "/VLAN/ACL Status"
              },
              "code": {
                "doc": [
                  "Numeric error code.  Expected to be 0 when state is 'applied'"
                ],
                "type": "integer",
                "group": "/VLAN/ACL Status"
              },
              "message": {
                "doc": [
                  "Detailed reason for error state.  Expected empty when state is 'applied'"
                ],
                "type": "string",
                "group": "/VLAN/ACL Status"
              },
              "version": {
                "doc": [
                  "The version of aclv4_in_cfg that corresponds to this status."
                ],
                "type": "integer",
                "group": "/VLAN/ACL Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/VLAN/ACL Status"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/VLAN/Common Columns"
        },
        "id": {
          "category": "configuration",
          "mutable": false,
          "doc": [
            "The ID of this VLAN."
          ],
          "type": {
            "key": {
              "minInteger": 1,
              "maxInteger": 4094,
              "type": "integer"
            }
          },
          "group": "/VLAN/Configuration"
        },
        "aclv4_in_statistics": {
          "category": "status",
          "type": {
            "max": 512,
            "valueMap": {
              "sequence_number": {
                "doc": [
                  "Statistics for the ACL applied to this port for ACEs that have the 'count'",
                  "keyword specified.  Statistics are key/value pairs of ACL sequence number and",
                  "integer representing the statistics for that entry."
                ],
                "type": "integer",
                "group": "/VLAN/ACL Status"
              }
            },
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "value": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "ephemeral": true,
          "group": "/VLAN/ACL Status"
        },
        "aclv4_in_statistics_clear_performed": {
          "category": "status",
          "doc": [
            "The number of times that ACL statistics for this VLAN have been cleared.."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/VLAN/ACL Status"
        },
        "hw_vlan_config": {
          "doc": [
            "Key-value pairs that represent the configuration passed down to hardware."
          ],
          "type": {
            "max": "unlimited",
            "valueMap": {
              "enable": {
                "doc": [
                  "The possible values are \"true\" and \"false\"."
                ],
                "type": {
                  "enum": [
                    "true",
                    "false"
                  ],
                  "type": "string"
                },
                "group": "/VLAN/Hardware VLAN Configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/VLAN/Hardware VLAN Configuration"
        },
        "oper_state": {
          "category": "status",
          "doc": [
            "Operational state of this VLAN."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "unknown",
                "up",
                "down"
              ],
              "type": "string"
            },
            "min": 0
          },
          "group": "/VLAN/VLAN Status"
        },
        "oper_state_reason": {
          "category": "status",
          "doc": [
            "Human readable reason for the operational state of this VLAN."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "unknown",
                "ok",
                "admin_down",
                "no_member_port"
              ],
              "type": "string"
            },
            "min": 0
          },
          "group": "/VLAN/VLAN Status"
        },
        "internal_usage": {
          "category": "status",
          "doc": [
            "Key-value pairs that represent how this VLAN is used internally by the system."
          ],
          "type": {
            "max": "unlimited",
            "valueMap": {
              "l3port": {
                "doc": [
                  "VLAN is used internally by ASIC to configure L3 behavior of the port. The value",
                  "is the port name that uses this VLAN."
                ],
                "type": "string",
                "group": "/VLAN/Internal VLAN Config"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/VLAN/Internal VLAN Config"
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/VLAN/Common Columns"
        },
        "aclv4_in_statistics_clear_requested": {
          "category": "configuration",
          "doc": [
            "The number of times a request was made to clear the ACL statistics for this",
            "VLAN."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/VLAN/ACL Configuration"
        },
        "aclv4_in_applied": {
          "category": "status",
          "doc": [
            "Current, successfully applied ACL to this VLAN, as identified in the [ACL](ACL)"
          ],
          "type": {
            "max": 1,
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "ACL"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/VLAN/ACL Status"
        },
        "name": {
          "category": "configuration",
          "mutable": false,
          "doc": [
            "VLAN name.  Should be alphanumeric and no more than about 8 bytes long."
          ],
          "type": "string",
          "group": "/VLAN/Configuration"
        }
      },
      "title": "Virtual Local Area Network"
    },
    "Port": {
      "doc": [
        "A port within a [Bridge](Bridge).",
        "",
        "Most commonly, a port has exactly one ``interface,'' pointed to by its",
        "[interfaces](Port.interfaces) column.  Such a port logically corresponds to a",
        "port on a physical Ethernet switch.  A port with more than one interface is a",
        "''bonded port'' (see [Bonding Configuration] (Bonding Configuration)).",
        "",
        "Some properties that one might think as belonging to a port are actually part of",
        "the port's [Interface](Interface) members.",
        "",
        "If port has an IP address, then it becomes L3 and might participate in VRFs.",
        "Unless referenced interface has an \"internal\" type, L3 port can not participate",
        "in the bridge. \"internal\" ports that basically represent VLAN interfaces may be",
        "referenced by both Bridge and VRF."
      ],
      "indexes": [
        [
          "name"
        ]
      ],
      "columns": {
        "egress_redirect_to_port": {
          "category": "status",
          "doc": [
            "When set, egress traffic of this port will be redirected to the referenced port."
          ],
          "type": {
            "max": 1,
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "Port"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/Port/Other Features"
        },
        "trunks": {
          "category": "configuration",
          "doc": [
            "For a trunk, native-tagged, or native-untagged port, the 802.1Q VLAN or VLANs",
            "that this port trunks; if it is empty, then the port trunks all VLANs defined in",
            "the [VLAN](VLAN) table.  Must be empty if this is an access port.",
            "",
            "A native-tagged or native-untagged port always trunks its native VLAN,",
            "regardless of whether [trunks](Port.trunks) includes that VLAN."
          ],
          "type": {
            "max": 4096,
            "key": {
              "minInteger": 1,
              "maxInteger": 4094,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/Port/VLAN Configuration"
        },
        "qos": {
          "category": "configuration",
          "doc": [
            "References schedule profile for this port. If this is unspecified, then the",
            "schedule profile referenced in [System](System)) table qos will be used."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "uuid",
              "refTable": "QoS"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/Port/QoS configuration"
        },
        "ip4_address_secondary": {
          "category": "configuration",
          "doc": [
            "This is a list of secondary IPv4 addresses and subnet mask in the address/mask",
            "format."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "string",
              "maxLength": 18
            },
            "min": 0
          },
          "group": "/Port/L3 Configuration"
        },
        "aclv4_in_cfg": {
          "category": "configuration",
          "doc": [
            "ACL, potentially in flight, desired to be applied to this port, as identified in",
            "the [ACL](ACL)."
          ],
          "type": {
            "max": 1,
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "ACL"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/Port/ACL Configuration"
        },
        "aclv4_in_status": {
          "category": "status",
          "doc": [
            "The status of the last version of 'aclv4_in_cfg' column, that has been processed",
            "by switchd."
          ],
          "type": {
            "max": "unlimited",
            "valueMap": {
              "state": {
                "type": {
                  "enum": [
                    "applied",
                    "in_progress",
                    "canceled",
                    "rejected"
                  ],
                  "type": "string"
                },
                "group": "/Port/ACL Status"
              },
              "code": {
                "doc": [
                  "Numeric error code.  Expected to be 0 when state is 'applied'"
                ],
                "type": "integer",
                "group": "/Port/ACL Status"
              },
              "message": {
                "doc": [
                  "Detailed reason for error state.  Expected empty when state is 'applied'"
                ],
                "type": "string",
                "group": "/Port/ACL Status"
              },
              "version": {
                "doc": [
                  "The version of aclv4_in_cfg that corresponds to this status."
                ],
                "type": "integer",
                "group": "/Port/ACL Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Port/ACL Status"
        },
        "bond_options": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          }
        },
        "qos_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "cos_override": {
                "doc": [
                  "Specifies the port COS override to use. If the key is not specified, then no",
                  "override will be enabled."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 7,
                  "type": "integer"
                },
                "group": "/Port/QoS configuration"
              },
              "dscp_override": {
                "doc": [
                  "Specifies the port DSCP override to use. If the key is not specified, then no",
                  "override will be enabled."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 63,
                  "type": "integer"
                },
                "group": "/Port/QoS configuration"
              },
              "qos_trust": {
                "doc": [
                  "Specifies the individual port QoS Trust Mode.",
                  "",
                  "`none` - no fields are inspected on arriving packets.  The initial local-",
                  "priority and color meta-data values are taken from PCP 0 entry of the COS Map",
                  "table (see [QoS_COS_Map_Entry](QoS_COS_Map_Entry)).",
                  "",
                  "`cos` - will use the PCP of the outermost 802.1 VLAN tag to index the COS Map",
                  "entry to initialize the local-priority and color meta-data values of the packet.",
                  "For untagged packets, the initial local-priority and color meta-data values are",
                  "taken from code_point 0 entry of the COS Map table (see",
                  "[QoS_COS_Map_Entry](QoS_COS_Map_Entry)).",
                  "",
                  "`dscp` - will use the DSCP value of IP packets to index the DSCP Map entry to",
                  "initialize the local-priority and color meta-data values of the packet.  For",
                  "non-IP packets, what meta-data values are assigned is hardware dependent.",
                  "",
                  "If the key is not specified, then the qos_trust value in the [System](System)",
                  "table will be used."
                ],
                "type": {
                  "enum": [
                    "none",
                    "cos",
                    "dscp"
                  ],
                  "type": "string"
                },
                "group": "/Port/QoS configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Port/QoS configuration"
        },
        "tag": {
          "category": "configuration",
          "doc": [
            "For an access port, the port's implicitly tagged VLAN.  For a native-tagged or",
            "native-untagged port, the port's native VLAN.  Must be empty if this is a trunk",
            "port."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 1,
              "maxInteger": 4094,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/Port/VLAN Configuration"
        },
        "kernel_interface_ready": {
          "category": "status",
          "doc": [
            "Indicates whether kernel interface is provisioned for the port. Default is",
            "false."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false
        },
        "ip6_address": {
          "category": "configuration",
          "doc": [
            "The IPv6 address and subnet mask in the address/mask format. This is the primary",
            "IPv6 address."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 49
            },
            "min": 0
          },
          "group": "/Port/L3 Configuration"
        },
        "ospf_if_out_cost": {
          "category": "configuration",
          "doc": [
            "The output cost assigned to the corresponding OSPFv2 interface. The default",
            "value depends on the interface bandwidth and on the auto-cost reference",
            "bandwidth."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 1,
              "maxInteger": 65535,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/Port/L3 Configuration/Port level OSPFv2 Configurations"
        },
        "ip6_address_secondary": {
          "category": "configuration",
          "doc": [
            "This is a list of secondary IPv6 addresses and subnet mask in the address/mask",
            "format."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "string",
              "maxLength": 49
            },
            "min": 0
          },
          "group": "/Port/L3 Configuration"
        },
        "q_profile": {
          "category": "configuration",
          "doc": [
            "References queue profile for this port. If this is unspecified, then the queue",
            "profile referenced in [System](System)) table q_profile will be used."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "uuid",
              "refTable": "Q_Profile"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/Port/QoS configuration"
        },
        "loop_protect_vlan": {
          "category": "configuration",
          "type": {
            "max": 4094,
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "VLAN"
            },
            "min": 0
          },
          "relationship": "reference"
        },
        "dhcp_relay_statistics": {
          "category": "statistics",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "valid_v4server_responses_with_option82": {
                "doc": [
                  "Number of valid IPv4 DHCP relay responses with option 82 processed."
                ],
                "type": "integer",
                "group": "/Port/DHCP-Relay Statistics"
              },
              "dropped_v4server_responses_with_option82": {
                "doc": [
                  "Number of IPv4 DHCP relay responses with option 82 dropped."
                ],
                "type": "integer",
                "group": "/Port/DHCP-Relay Statistics"
              },
              "dropped_v4server_responses": {
                "doc": [
                  "Number of IPv4 DHCP relay responses dropped."
                ],
                "type": "integer",
                "group": "/Port/DHCP-Relay Statistics"
              },
              "dropped_v6client_requests": {
                "doc": [
                  "Number of IPv6 DHCP relay requests dropped."
                ],
                "type": "integer",
                "group": "/Port/DHCP-Relay Statistics"
              },
              "valid_v6client_requests": {
                "doc": [
                  "Number of valid IPv6 DHCP relay requests processed."
                ],
                "type": "integer",
                "group": "/Port/DHCP-Relay Statistics"
              },
              "dropped_v4client_requests_with_option82": {
                "doc": [
                  "Number of IPv4 DHCP relay requests with option 82 dropped."
                ],
                "type": "integer",
                "group": "/Port/DHCP-Relay Statistics"
              },
              "valid_v6server_responses": {
                "doc": [
                  "Number of valid IPv6 DHCP relay responses processed."
                ],
                "type": "integer",
                "group": "/Port/DHCP-Relay Statistics"
              },
              "dropped_v4client_requests": {
                "doc": [
                  "Number of IPv4 DHCP relay requests dropped."
                ],
                "type": "integer",
                "group": "/Port/DHCP-Relay Statistics"
              },
              "valid_v4client_requests_with_option82": {
                "doc": [
                  "Number of valid IPv4 DHCP relay requests with option 82 processed."
                ],
                "type": "integer",
                "group": "/Port/DHCP-Relay Statistics"
              },
              "valid_v4client_requests": {
                "doc": [
                  "Number of valid IPv4 DHCP relay requests processed."
                ],
                "type": "integer",
                "group": "/Port/DHCP-Relay Statistics"
              },
              "valid_v4server_responses": {
                "doc": [
                  "Number of valid IPv4 DHCP relay responses processed."
                ],
                "type": "integer",
                "group": "/Port/DHCP-Relay Statistics"
              },
              "dropped_v6server_responses": {
                "doc": [
                  "Number of IPv6 DHCP relay responses dropped."
                ],
                "type": "integer",
                "group": "/Port/DHCP-Relay Statistics"
              }
            },
            "key": "string",
            "value": "integer",
            "min": 0
          },
          "ephemeral": true,
          "group": "/Port/DHCP-Relay Statistics"
        },
        "bond_active_slave": {
          "category": "configuration",
          "type": {
            "max": 1,
            "key": {
              "type": "string"
            },
            "min": 0
          }
        },
        "ospf_auth_text_key": {
          "category": "configuration",
          "doc": [
            "The authentication key for OSPFv2 authentication type \"text\"."
          ],
          "type": {
            "max": 1,
            "key": {
              "minLength": 1,
              "type": "string",
              "maxLength": 8
            },
            "min": 0
          },
          "group": "/Port/L3 Configuration/Port level OSPFv2 Configurations"
        },
        "loop_protect_status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "last_loop_detected_time": {
                "doc": [
                  "This has the last timestamp as integer containing epoch time,when the loop was",
                  "detected by the Loop-protect feature."
                ],
                "type": "string",
                "group": "/Port/Loop-protect Status"
              },
              "detected_on_vlan": {
                "doc": [
                  "This contains the VLAN on which the loop is detected."
                ],
                "type": "string",
                "group": "/Port/Loop-protect Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Port/Loop-protect Status"
        },
        "flood_block": {
          "category": "status",
          "doc": [
            "When set to &#8216;true&#8217;, all flood traffic received from and forwarded to",
            "this port will be dropped. The default value is `false`."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/Port/Other Features"
        },
        "vlan_options": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          }
        },
        "ospf_intervals": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "retransmit_interval": {
                "emptyValue": 5,
                "doc": [
                  "The number of seconds between LSA retransmissions. It is also used when",
                  "retransmitting Database Description and Link State Request Packets. The default",
                  "value is 5 seconds."
                ],
                "type": {
                  "minInteger": 3,
                  "maxInteger": 65535,
                  "type": "integer"
                },
                "group": "/Port/L3 Configuration/Port level OSPFv2 Configurations"
              },
              "dead_interval": {
                "doc": [
                  "The time duration, in seconds, that a neighbor should wait for a Hello packet",
                  "before tearing down adjacencies with the local router. The dead_interval must be",
                  "equal to or in multiples of the hello_interval. The default value is 4 times",
                  "hello_interval seconds."
                ],
                "type": {
                  "minInteger": 1,
                  "maxInteger": 65535,
                  "type": "integer"
                },
                "group": "/Port/L3 Configuration/Port level OSPFv2 Configurations"
              },
              "hello_interval": {
                "emptyValue": 10,
                "doc": [
                  "The Hello packet will be sent every hello_interval timer value seconds. This",
                  "value must be the same for all routers attached to a common network. The default",
                  "value is 10 seconds."
                ],
                "type": {
                  "minInteger": 1,
                  "maxInteger": 65535,
                  "type": "integer"
                },
                "group": "/Port/L3 Configuration/Port level OSPFv2 Configurations"
              },
              "transmit_delay": {
                "emptyValue": 1,
                "doc": [
                  "The estimated time in seconds to transmit an LSA to a neighbor. The",
                  "transmit_delay timer increments the age of LSAs in the update packets to",
                  "accommodate transmission and propagation delays for the interface. The timer is",
                  "more important on very low speed links where the transmission delay is more",
                  "significant. The default value is 1 second."
                ],
                "type": {
                  "minInteger": 1,
                  "maxInteger": 65535,
                  "type": "integer"
                },
                "group": "/Port/L3 Configuration/Port level OSPFv2 Configurations"
              }
            },
            "key": "string",
            "value": "integer",
            "min": 0
          },
          "group": "/Port/L3 Configuration/Port level OSPFv2 Configurations"
        },
        "egress_blocked_to_ports": {
          "category": "status",
          "doc": [
            "When set, all traffic which ingresses this port will be blocked from being",
            "forwarded out of the specified ports."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "Port"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/Port/Other Features"
        },
        "ip4_address": {
          "category": "configuration",
          "doc": [
            "The IPv4 address and subnet mask in the address/mask format. This is the primary",
            "IP address."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 18
            },
            "min": 0
          },
          "group": "/Port/L3 Configuration"
        },
        "aclv4_in_statistics_clear_requested": {
          "category": "configuration",
          "doc": [
            "The number of times a request was made to clear the ACL statistics for this",
            "port."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/Port/ACL Configuration"
        },
        "ospf_priority": {
          "category": "configuration",
          "doc": [
            "The router with the highest priority will be more eligible to become Designated",
            "Router. Setting the value to 0, makes the router ineligible to become Designated",
            "Router. The default value is 1."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 255,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 1,
          "group": "/Port/L3 Configuration/Port level OSPFv2 Configurations"
        },
        "status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "bond_hw_handle": {
                "doc": [
                  "Unique identifier of the LAG from the data path's perspective. This key value",
                  "should be treated as opaque handle by application daemons while updating LAG",
                  "member interfaces in hardware."
                ],
                "type": "string",
                "group": "/Port/Port Status"
              },
              "kernel_interface_error": {
                "doc": [
                  "Human readable kernel interface provisioning error description."
                ],
                "type": "string",
                "group": "/Port/Port Status"
              },
              "error": {
                "doc": [
                  "Human readable error description."
                ],
                "type": "string",
                "group": "/Port/Port Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "doc": [
            "Key-value pairs that report port status."
          ],
          "ephemeral": true,
          "group": "/Port/Port Status"
        },
        "loop_protect_statistics": {
          "category": "statistics",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "loop_count": {
                "doc": [
                  "Number of times a loop has been detected on this port."
                ],
                "type": "integer",
                "group": "/Port/Loop-protect Statistics"
              }
            },
            "key": "string",
            "value": "integer",
            "min": 0
          },
          "ephemeral": true,
          "group": "/Port/Loop-protect Statistics"
        },
        "lacp_status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "bond_speed": {
                "doc": [
                  "Speed of interfaces operating in lag."
                ],
                "type": "string",
                "group": "/Port/Port Status"
              },
              "bond_status_reason": {
                "doc": [
                  "String identifying the reason why the bond_status is \"down\"."
                ],
                "type": "string",
                "group": "/Port/Port Status"
              },
              "bond_status": {
                "doc": [
                  "Operational status of LAG. The values are \"ok\" (bond is functional) \"down\" (bond",
                  "isn't functional), and \"defaulted\" (remote LACP not operating, using one",
                  "interface in non-LACP mode)."
                ],
                "type": {
                  "enum": [
                    "ok",
                    "down",
                    "defaulted"
                  ],
                  "type": "string"
                },
                "group": "/Port/Port Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "doc": [
            "Key-value pairs that report lacp-specific port status."
          ],
          "ephemeral": true,
          "group": "/Port/Port Status"
        },
        "hw_config": {
          "doc": [
            "Key-value pairs that represent the configuration passed down to hardware."
          ],
          "type": {
            "max": "unlimited",
            "valueMap": {
              "enable": {
                "doc": [
                  "The possible values are \"true\" and \"false\"."
                ],
                "type": "boolean",
                "group": "/Port/Hardware Port Configuration"
              },
              "block_all_mstp": {
                "emptyValue": false,
                "doc": [
                  "Indicates that the port should be blocked in all MSTP instances. Defaults to",
                  "`false`."
                ],
                "type": "boolean",
                "group": "/Port/Hardware Port Configuration"
              },
              "internal-vlan": {
                "doc": [
                  "The VLAN associated with l3 interfaces."
                ],
                "type": "string",
                "group": "/Port/Hardware Port Configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Port/Hardware Port Configuration"
        },
        "macs_invalid": {
          "category": "status",
          "doc": [
            "If `true`, indicates that MACs on this port are invalid. This might be set by",
            "any agent of the system that decides that MACs are indeed invalid. Eventually",
            "those MACs will be cleared from the system and macs_invalid will revert to",
            "`false`."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "group": "/Port/MACs Validity"
        },
        "ospf_auth_type": {
          "category": "configuration",
          "doc": [
            "The type of OSPFv2 authentication. If not set, then parent area level",
            "authentication holds for the port."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "null",
                "text",
                "md5"
              ],
              "type": "string"
            },
            "min": 0
          },
          "group": "/Port/L3 Configuration/Port level OSPFv2 Configurations"
        },
        "interfaces": {
          "category": "configuration",
          "doc": [
            "The port's interfaces.  If there is more than one, this is a bonded Port. A",
            "maximum of 8 interfaces can be assigned to a port."
          ],
          "type": {
            "max": 8,
            "key": {
              "type": "uuid",
              "refTable": "Interface"
            },
            "min": 0
          },
          "relationship": "reference"
        },
        "loop_protect_port_disabled": {
          "category": "status",
          "doc": [
            "This value will be set to `true`,if the port is disabled by Loop-protect.",
            "Default value is `false`."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/Port/Loop-protect Status"
        },
        "bond_mode": {
          "category": "configuration",
          "doc": [
            "The type of bonding used for a bonded port. Bond mode controls the selection of",
            "a interface from a group of aggregate interfaces with which to transmit a frame.",
            "This selection is performed with a hash function using either source and",
            "destination mac addresses (l2), ip addresses (l3) or tcp/udp ports (l4) as",
            "parameters. Defaults to `l3-src-dst-hash` if not assigned."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "l2-src-dst-hash",
                "l3-src-dst-hash",
                "l4-src-dst-hash"
              ],
              "type": "string"
            },
            "min": 0
          },
          "emptyValue": "13-src-dst-hash",
          "group": "/Port/Bonding Configuration"
        },
        "statistics": {
          "category": "statistics",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "integer",
            "min": 0
          },
          "ephemeral": true
        },
        "loop_protect_action": {
          "category": "configuration",
          "doc": [
            "This determines action for the Loop-protect feature.The value is set to \"tx-",
            "port-disable\" for disabling the sending port on detecting a loop, \"tx-rx-",
            "disable\" disables both sending and receiving ports when loop is detected and",
            "\"do-not-disable\" will not disable any port. Default value is `tx-port-disable`."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "do-not-disable",
                "tx-disable",
                "tx-rx-disable"
              ],
              "type": "string"
            },
            "min": 0
          },
          "emptyValue": "tx-disable",
          "group": "/Port/Loop-protect per port Configuration"
        },
        "vlan_mode": {
          "category": "configuration",
          "doc": [
            "The VLAN mode of the port, as described above.  When this column is empty, a",
            "default mode is selected as follows:",
            "",
            "+ If [tag](Port.tag) contains a value, the port is an access port.  The",
            "[trunks](Port.trunks) column should be empty.",
            "+ Otherwise, the port is a trunk port.  The [trunks](Port.trunks) column value",
            "is honored if it is present."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "trunk",
                "access",
                "native-tagged",
                "native-untagged"
              ],
              "type": "string"
            },
            "min": 0
          },
          "group": "/Port/VLAN Configuration"
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Port/Common Columns"
        },
        "loop_protect_enable": {
          "category": "configuration",
          "doc": [
            "When set to `true`, Loop-protect is enabled on this port. Default value is",
            "`false`."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/Port/Loop-protect per port Configuration"
        },
        "ospf_if_type": {
          "category": "configuration",
          "doc": [
            "The type of the OSPFv2 network interface. The default value is the type of the",
            "interface from the Interface table."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "ospf_iftype_none",
                "ospf_iftype_pointopoint",
                "ospf_iftype_broadcast",
                "ospf_iftype_nbma",
                "ospf_iftype_pointomultipoint",
                "ospf_iftype_virtuallink",
                "ospf_iftype_loopback"
              ],
              "type": "string"
            },
            "min": 0
          },
          "group": "/Port/L3 Configuration/Port level OSPFv2 Configurations"
        },
        "bond_status": {
          "category": "status",
          "doc": [
            "Key-value pairs that report bond-specific port status (both static and dynamic).",
            "This column complements the [lacp_status](Port.lacp_status) column."
          ],
          "type": {
            "max": "unlimited",
            "valueMap": {
              "state": {
                "doc": [
                  "Enumeration summarizing the fowarding state of the bond.  It is based on the",
                  "aggregate state of the individual member interfaces. * Up: At least one member",
                  "interface is eligible and should be fowarding traffic according to LACP *",
                  "Blocked:  All member interfaces are either not eligible or should be blocked",
                  "according to LACP. If LACP-fallback-ab is enabled, and the",
                  "[lacp_status](Port.lacp_status) is defaulted, then the bond state is forwarding.",
                  "If the LACP-fallback-ab is disable, then the state is blocked. * Down:  All",
                  "member interfaces configured to be a member of a LAG are either administratively",
                  "or operatively down"
                ],
                "type": {
                  "enum": [
                    "up",
                    "blocked",
                    "down"
                  ],
                  "type": "string"
                },
                "group": "/Port/Port Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Port/Port Status"
        },
        "lacp": {
          "category": "configuration",
          "doc": [
            "Configures LACP on this port.  LACP allows directly connected switches to",
            "negotiate which links may be bonded.  LACP may be enabled on non-bonded ports",
            "for the benefit of any switches they may be connected to.  `active` ports are",
            "allowed to initiate LACP negotiations.  `passive` ports are allowed to",
            "participate in LACP negotiations initiated by a remote switch, but not allowed",
            "to initiate such negotiations themselves.  If LACP is enabled on a port whose",
            "partner switch does not support LACP, the bond will be disabled. Defaults to",
            "`off` if unset."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "active",
                "passive",
                "off"
              ],
              "type": "string"
            },
            "min": 0
          },
          "emptyValue": "off",
          "group": "/Port/Bonding Configuration/LACP Configuration"
        },
        "name": {
          "category": "configuration",
          "mutable": false,
          "type": "string",
          "doc": [
            "Port name.  Should be alphanumeric and no more than about 8 bytes long.  May be",
            "the same as the interface name, for non-bonded ports.  Must otherwise be unique",
            "among the names of ports, interfaces, and bridges on a host."
          ]
        },
        "aclv4_in_cfg_version": {
          "category": "configuration",
          "doc": [
            "The version of the 'aclv4_in_cfg' column. This value is incremented by the",
            "management interface - CLI/REST/Web UI, etc. every time it changes the",
            "'aclv4_in_cfg' value. An empty value means no ACL has been configured for the",
            "port."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/Port/ACL Configuration"
        },
        "vlan_tunnel_keys": {
          "category": "status",
          "group": "/Port/VLAN Configuration",
          "relationship": "reference",
          "doc": [
            "Specifies translation from a vlan to the [Logical_Switch](Logical_Switch). If",
            "this is an access port, only one key needs to be specified. VLAN 0 means that",
            "untagged traffic on the port is mapped to the specified logical switch."
          ],
          "keyname": "vlan",
          "type": {
            "max": 4095,
            "key": {
              "minInteger": 0,
              "maxInteger": 4094,
              "type": "integer"
            },
            "value": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "Logical_Switch"
            },
            "min": 0
          }
        },
        "admin": {
          "category": "configuration",
          "doc": [
            "The administrative state of the Port configured by user. The port admin state",
            "determines the hardware configuration based on the business logic. When port",
            "\"admin\" is configured down the interface(s) associated with the port should",
            "force their hardware configuration to down. By default the port is up."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "up",
                "down"
              ],
              "type": "string"
            },
            "min": 0
          },
          "emptyValue": "up"
        },
        "mac_learn_disable": {
          "category": "status",
          "doc": [
            "When set to 'true', mac learning will be disabled on the port. The default value",
            "is `false`."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/Port/Other Features"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "proxy_arp_enabled": {
                "emptyValue": false,
                "doc": [
                  "Enables proxy ARP feature on the port. Default is false. Port should be part of",
                  "VRF in order for the feature to be active."
                ],
                "type": "boolean",
                "group": "/Port/Other Features"
              },
              "local_proxy_arp_enabled": {
                "emptyValue": false,
                "doc": [
                  "Enables local proxy ARP feature on the port. Default is false. Port should be",
                  "part of VRF in order for the feature to be active."
                ],
                "type": "boolean",
                "group": "/Port/Other Features"
              },
              "lacp-time": {
                "emptyValue": "slow",
                "doc": [
                  "The LACP timing which should be used on this [Port](Port). By default `slow` is",
                  "used.  When configured to be `fast` LACP heartbeats are requested at a rate of",
                  "once per second causing connectivity problems to be detected more quickly.  In",
                  "`slow` mode, heartbeats are requested at a rate of once every 30 seconds."
                ],
                "type": {
                  "enum": [
                    "fast",
                    "slow"
                  ],
                  "type": "string"
                },
                "group": "/Port/Bonding Configuration/LACP Configuration"
              },
              "lacp_fallback_mode": {
                "emptyValue": "priority",
                "doc": [
                  "Specifies the mode used when fallback is enabled.  Priority mode uses the LACP",
                  "interface priority to decide which port remains forwarding when no partner is",
                  "detected.  The all_active mode keeps all interfaces forwarding when no partner",
                  "is detected. The default value is `priority`."
                ],
                "type": {
                  "enum": [
                    "priority",
                    "all_active"
                  ],
                  "type": "string"
                },
                "group": "/Port/Bonding Configuration/LACP Configuration"
              },
              "lacp_fallback_timeout": {
                "emptyValue": 0,
                "doc": [
                  "Defines the time period during which fallback remains active.  The timer starts",
                  "at the point when the interface state machine expires and configures the default",
                  "partner.  The unit is seconds. A value of 0 means that the timer doesn't run and",
                  "fallback is active until it is disabled by the user or a partner is detected.",
                  "The default value is `0`."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 900,
                  "type": "integer"
                },
                "group": "/Port/Bonding Configuration/LACP Configuration"
              },
              "lacp-system-id": {
                "doc": [
                  "The LACP system ID of this [Port](Port).  The system ID of a LACP bond is used",
                  "to identify itself to its partners.  Must be a nonzero MAC address. Defaults to",
                  "the bridge Ethernet address if unset."
                ],
                "type": "string",
                "group": "/Port/Bonding Configuration/LACP Configuration"
              },
              "sflow-enabled": {
                "emptyValue": true,
                "doc": [
                  "Determines whether sflow sampling is enabled on this port. Default is true."
                ],
                "type": "boolean",
                "group": "/Port/Other Features"
              },
              "lacp-system-priority": {
                "doc": [
                  "The LACP system priority of this [Port](Port).  In LACP negotiations, link",
                  "status decisions are made by the system with the numerically lower priority."
                ],
                "type": {
                  "minInteger": 1,
                  "maxInteger": 65535,
                  "type": "integer"
                },
                "group": "/Port/Bonding Configuration/LACP Configuration"
              },
              "mclag_enabled": {
                "emptyValue": false,
                "doc": [
                  "Determines whether this port is an MCLAG. Default is false."
                ],
                "type": "boolean",
                "group": "/Port/Bonding Configuration/LACP Configuration"
              },
              "lacp-fallback": {
                "emptyValue": false,
                "doc": [
                  "Specifies if fallback should be used on this [Port](Port). Set this value to",
                  "`true` to enable the member interfaces based on the fallback mode and set to",
                  "`false` to block all interfaces when LACP = off. If not specified, lacp-fallback",
                  "is assumed to be false."
                ],
                "type": "boolean",
                "group": "/Port/Bonding Configuration/LACP Configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": [
            "/Port/Bonding Configuration/LACP Configuration",
            "/Port/Other Features",
            "/Port/Common Columns"
          ]
        },
        "mac": {
          "category": "configuration",
          "doc": [
            "The MAC address to use for this port for the purpose of choosing the bridge's",
            "MAC address.  This column does not necessarily reflect the port's actual MAC",
            "address, nor will setting it change the port's actual MAC address."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string"
            },
            "min": 0
          },
          "group": "/Port/Other Features"
        },
        "ospf_mtu_ignore": {
          "category": "configuration",
          "doc": [
            "This determines if OSPFv2 should ignore any IP MTU mismatch with a neighbor or",
            "not. The default value is false, that is not to establish adjacency if the",
            "neighbor MTU does not match the local interface MTU."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/Port/L3 Configuration/Port level OSPFv2 Configurations"
        },
        "aclv4_in_statistics_clear_performed": {
          "category": "status",
          "doc": [
            "The number of times the ACL statistics for this port have been cleared."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/Port/ACL Status"
        },
        "macs_invalid_on_vlans": {
          "category": "status",
          "doc": [
            "If a set of VLANs is specified, it indicates that MACs on this port and that set",
            "of VLANs are invalid. This might be set by any agent of the system that decides",
            "that MACs are indeed invalid. Eventually those MACs will be cleared from the",
            "system and macs_invalid_on_vlans will revert to an empty set."
          ],
          "type": {
            "max": 4094,
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "VLAN"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/Port/MACs Validity"
        },
        "forwarding_state": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "port_aggregation_blocked_reason": {
                "doc": [
                  "Enumeration that identifies the asserting protocol that causes the port",
                  "aggregation different from \"forwarding\". * lacp: This means that the aggregated",
                  "state of the interfaces is driving the forwarding state of the Port, for",
                  "example, all interfaces are blocked by a lacp."
                ],
                "type": {
                  "enum": [
                    "lacp"
                  ],
                  "type": "string"
                },
                "group": "/Port/Port Status"
              },
              "forwarding": {
                "emptyValue": false,
                "doc": [
                  "Enumeration that summarizes the state of the interface.  This value drives the",
                  "forwarding state of the data path. Default value is `false`."
                ],
                "type": "boolean",
                "group": "/Port/Port Status"
              },
              "port_loop_protection_blocked_reason": {
                "doc": [
                  "Enumeration that identifies the asserting protocol that causes the port loop",
                  "protection to be blocked."
                ],
                "type": {
                  "enum": [
                    "mstp"
                  ],
                  "type": "string"
                },
                "group": "/Port/Port Status"
              },
              "port_loop_protection_forwarding": {
                "emptyValue": false,
                "doc": [
                  "Port loop protection is set based on the information provided by protocols. The",
                  "asserting protocol setting the value of this key is defined in the",
                  "port_loop_protection_blocked_reason key. Default value is `false`."
                ],
                "type": "boolean",
                "group": "/Port/Port Status"
              },
              "port_aggregation_forwarding": {
                "emptyValue": false,
                "doc": [
                  "Port aggregation is set based on the information provided by protocols related",
                  "to link aggregation. The asserting protocol setting the value of this key is",
                  "defined in the port_aggregation_blocked_reason key. Additionally, this key is",
                  "used to aggregate the state of the links members of the LAG.  For example, it is",
                  "possible that all links on a LAG are blocked by a security protocol.  This is",
                  "reflected in this key. Default value is `false`."
                ],
                "type": "boolean",
                "group": "/Port/Port Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "doc": [
            "The Port's forwarding state is determined by the state of the interface or",
            "interfaces in case of LAG and by the information provided by protocols working",
            "at the logical port level, MSTP for example.",
            "",
            "The value is set after all possible conditions have been taken into account.",
            "The conditions are evaluated by an arbiter that takes the decision of which",
            "value to set on the forwarding state based on protocol state."
          ],
          "ephemeral": true,
          "group": "/Port/Port Status"
        },
        "qos_status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "schedule_profile": {
                "doc": [
                  "Contains the name of the schedule profile that is operating in hardware. This",
                  "may different than the name in [qos](Port.qos) when that profile cannot be",
                  "supported in hardware."
                ],
                "type": "string",
                "group": "/Port/QoS Status"
              },
              "queue_profile": {
                "doc": [
                  "Contains the name of the queue profile that is operating in hardware. This may",
                  "different than the name in [q_profile](Port.q_profile) when that profile cannot",
                  "be supported in hardware."
                ],
                "type": "string",
                "group": "/Port/QoS Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Port/QoS Status"
        },
        "aclv4_in_applied": {
          "category": "status",
          "doc": [
            "Current, successfully applied ACL to this port, as identified in the [ACL](ACL)"
          ],
          "type": {
            "max": 1,
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "ACL"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/Port/ACL Status"
        },
        "mclag_remote_interfaces": {
          "category": "status",
          "doc": [
            "List of interfaces on the MCLAG peer device which are part of same LAG.",
            "[MCLAG_Remote_Interface](MCLAG_Remote_Interface)"
          ],
          "type": {
            "max": 4,
            "key": {
              "refType": "strong",
              "type": "uuid",
              "refTable": "MCLAG_Remote_Interface"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/Port/Other Features"
        },
        "ospf_auth_md5_keys": {
          "category": "configuration",
          "doc": [
            "The authentication keys for OSPFv2 authentication type \"md5\"."
          ],
          "keyname": "key_id",
          "type": {
            "max": 255,
            "key": {
              "minInteger": 1,
              "maxInteger": 255,
              "type": "integer"
            },
            "value": {
              "minLength": 1,
              "type": "string",
              "maxLength": 16
            },
            "min": 0
          },
          "group": "/Port/L3 Configuration/Port level OSPFv2 Configurations"
        },
        "aclv4_in_statistics": {
          "category": "status",
          "type": {
            "max": 512,
            "valueMap": {
              "sequence_number": {
                "doc": [
                  "Statistics for the ACL applied to this port for ACEs that have the 'count'",
                  "keyword specified.  Statistics are key/value pairs of ACL sequence number and",
                  "integer representing the statistics for that entry."
                ],
                "type": "integer",
                "group": "/Port/ACL Status"
              }
            },
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "value": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "ephemeral": true,
          "group": "/Port/ACL Status"
        }
      },
      "title": "Port or bond configuration."
    },
    "Interface": {
      "doc": [
        "An interface within a [Port](Port)."
      ],
      "indexes": [
        [
          "name"
        ]
      ],
      "columns": {
        "hw_bond_config": {
          "doc": [
            "Key-value pairs that configure the interface as a member of bond."
          ],
          "type": {
            "max": "unlimited",
            "valueMap": {
              "bond_hw_handle": {
                "doc": [
                  "Identifies the LAG to which this interface should be attached in hardware. This",
                  "value is directly copied from [bond_hw_handle](Port.status.bond_hw_handle)."
                ],
                "type": "string",
                "group": "/Interface/Interface Status"
              },
              "tx_enabled": {
                "emptyValue": "false",
                "doc": [
                  "A state flag to indicate that the transmit logic is enabled for this interface",
                  "in hardware LAG. Defaults to `false` if unset."
                ],
                "type": "string",
                "group": "/Interface/Interface Status"
              },
              "rx_enabled": {
                "emptyValue": "false",
                "doc": [
                  "A state flag to indicate that this interface is attached to a hardware LAG and",
                  "receive logic is enabled. Defaults to `false` if unset."
                ],
                "type": "string",
                "group": "/Interface/Interface Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Interface/Interface Status"
        },
        "split_parent": {
          "category": "configuration",
          "doc": [
            "For a split child interface, this is the reference to the parent",
            "[Interface](Interface)."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "uuid",
              "refTable": "Interface"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/Interface/Hardware Interface Information"
        },
        "link_state": {
          "category": "status",
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "up",
                "down"
              ],
              "type": "string"
            },
            "min": 0
          },
          "doc": [
            "The observed state of the physical network link.  This is ordinarily the link's",
            "carrier status."
          ],
          "ephemeral": true,
          "group": "/Interface/Interface Status"
        },
        "mclag_status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "actor_port_id": {
                "doc": [
                  "Actor port ID is in the form of device priority (2 bytes) followed by port id (2",
                  "bytes) encoded as string in which each byte value is separated by a colon.",
                  "Example: 00:08:00:12"
                ],
                "type": "string",
                "group": "/Interface/Interface Status"
              },
              "actor_key": {
                "doc": [
                  "The actor key in use (2 bytes) encoded as a string in which each byte value is",
                  "separated by a colon. Example: 80:00"
                ],
                "type": "string",
                "group": "/Interface/Interface Status"
              },
              "actor_system_id": {
                "doc": [
                  "Actor system ID is in the form of device priority (2 bytes) followed by device",
                  "MAC address (6 bytes) encoded as string in which each byte value is separated by",
                  "a colon.  Example:  00:08:00:02:82:1f:60:4a Device priority range is 0 to 15.",
                  "Default device priority value is `8`."
                ],
                "type": "string",
                "group": "/Interface/Interface Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Interface/Interface Status"
        },
        "subintf_parent": {
          "category": "configuration",
          "group": "/Interface/Hardware Interface Information",
          "relationship": "reference",
          "doc": [
            "For a subinterface, this column holds the reference to the parent interface",
            "[Interface](Interface). The key is the dot1q encapsulation vlan id and the value",
            "is the uuid of parent interface."
          ],
          "keyname": "name",
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 4094,
              "type": "integer"
            },
            "value": {
              "type": "uuid",
              "refTable": "Interface"
            },
            "min": 0
          }
        },
        "kernel_interface_ready": {
          "category": "status",
          "doc": [
            "Indicates whether kernel interface is provisioned.  Default is false."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/Interface/Interface Status"
        },
        "user_config": {
          "category": "configuration",
          "doc": [
            "Key-value pairs that stores the user configuration of [Interface](Interface)."
          ],
          "type": {
            "max": "unlimited",
            "valueMap": {
              "pause": {
                "doc": [
                  "The user-configured Ethernet PAUSE (link-level flow control) mode of",
                  "[Interface](Interface). The possible values are \"none\", \"rx\", \"tx\", and \"rxtx\"."
                ],
                "type": {
                  "enum": [
                    "none",
                    "rx",
                    "tx",
                    "rxtx"
                  ],
                  "type": "string"
                },
                "group": "/Interface/User Configuration"
              },
              "admin": {
                "emptyValue": "down",
                "doc": [
                  "The user-configured administrative state of [Interface](Interface). The possible",
                  "values are \"up\" and \"down\".  Default is \"down\" if not specified."
                ],
                "type": {
                  "enum": [
                    "up",
                    "down"
                  ],
                  "type": "string"
                },
                "group": "/Interface/User Configuration"
              },
              "lane_split": {
                "doc": [
                  "+ The user-configured split mode of [Interface](Interface). This is only",
                  "applicable if an interface can be split into multiple interfaces, e.g. QSFP",
                  "+ ports. The possible values are \"split\" and \"no-split\"."
                ],
                "type": {
                  "enum": [
                    "split",
                    "no-split"
                  ],
                  "type": "string"
                },
                "group": "/Interface/User Configuration"
              },
              "mtu": {
                "doc": [
                  "The user-configured MTU of [Interface](Interface)."
                ],
                "type": "string",
                "group": "/Interface/User Configuration"
              },
              "duplex": {
                "doc": [
                  "The user-configured duplex mode of [Interface](Interface). The possible values",
                  "are \"half\" and \"full\"."
                ],
                "type": {
                  "enum": [
                    "half",
                    "full"
                  ],
                  "type": "string"
                },
                "group": "/Interface/User Configuration"
              },
              "autoneg": {
                "doc": [
                  "The user-configured auto-negotiation state of [Interface](Interface). The",
                  "possible values are \"default\", \"on\", and \"off\"."
                ],
                "type": {
                  "enum": [
                    "default",
                    "on",
                    "off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/User Configuration"
              },
              "speeds": {
                "doc": [
                  "The list of user-configured interface speeds in megabits per second. When",
                  "autoneg is disabled, the first speed value in the list is applied."
                ],
                "type": "string",
                "group": "/Interface/User Configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Interface/User Configuration"
        },
        "queue_tx_bytes": {
          "category": "statistics",
          "group": "/Interface/Statistics/Statistics: Interface Queue Transmit Statistics",
          "doc": [
            "For each outbound queue, a count of the queue's total bytes transmitted."
          ],
          "ephemeral": true,
          "keyname": "queue_number",
          "type": {
            "max": "unlimited",
            "key": {
              "minInteger": 0,
              "type": "integer"
            },
            "value": {
              "minInteger": 0,
              "type": "integer"
            },
            "min": 0
          }
        },
        "link_resets": {
          "category": "statistics",
          "type": {
            "max": 1,
            "key": {
              "type": "integer"
            },
            "min": 0
          },
          "doc": [
            "The number of times OpenSwitch has observed the",
            "[link_state](Interface.link_state) of this [Interface](Interface) change."
          ],
          "ephemeral": true,
          "group": "/Interface/Interface Status"
        },
        "queue_tx_errors": {
          "category": "statistics",
          "group": "/Interface/Statistics/Statistics: Interface Queue Transmit Statistics",
          "doc": [
            "For each outbound queue, a count of the queue's total transmit errors or drops."
          ],
          "ephemeral": true,
          "keyname": "queue_number",
          "type": {
            "max": "unlimited",
            "key": {
              "minInteger": 0,
              "type": "integer"
            },
            "value": {
              "minInteger": 0,
              "type": "integer"
            },
            "min": 0
          }
        },
        "statistics": {
          "category": "statistics",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "ipv6_mc_tx_packets": {
                "doc": [
                  "Number of transmitted ipv6 multicast packets."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Layer3 - IP Statistics"
              },
              "ipv6_mc_rx_packets": {
                "doc": [
                  "Number of received ipv6 multicast packets."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Layer3 - IP Statistics"
              },
              "rx_over_err": {
                "doc": [
                  "Number of packets with RX overrun."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Statistics: Receive errors"
              },
              "rx_dropped": {
                "doc": [
                  "Number of packets dropped by RX."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Statistics: Receive errors"
              },
              "rx_frame_err": {
                "doc": [
                  "Number of frame alignment errors."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Statistics: Receive errors"
              },
              "ipv6_uc_rx_packets": {
                "doc": [
                  "Number of received ipv6 unicast packets."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Layer3 - IP Statistics"
              },
              "sflow_ingress_bytes": {
                "doc": [
                  "Number of ingress bytes sampled on an interface."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/sFlow Statistics"
              },
              "ipv4_uc_rx_packets": {
                "doc": [
                  "Number of received ipv4 unicast packets."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Layer3 - IP Statistics"
              },
              "ipv4_uc_tx_packets": {
                "doc": [
                  "Number of transmitted ipv4 unicast packets."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Layer3 - IP Statistics"
              },
              "collisions": {
                "doc": [
                  "Number of collisions."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Statistics: Transmit errors"
              },
              "tx_packets": {
                "doc": [
                  "Number of transmitted packets."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Statistics: Successful transmit and receive counters"
              },
              "ipv6_mc_rx_bytes": {
                "doc": [
                  "Number of received ipv6 multicast bytes."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Layer3 - IP Statistics"
              },
              "tx_dropped": {
                "doc": [
                  "Number of packets dropped by TX."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Statistics: Transmit errors"
              },
              "rx_packets": {
                "doc": [
                  "Number of received packets."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Statistics: Successful transmit and receive counters"
              },
              "ipv6_mc_tx_bytes": {
                "doc": [
                  "Number of transmitted ipv6 multicast bytes."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Layer3 - IP Statistics"
              },
              "ipv4_mc_rx_bytes": {
                "doc": [
                  "Number of received ipv4 multicast bytes."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Layer3 - IP Statistics"
              },
              "rx_crc_err": {
                "doc": [
                  "Number of CRC errors."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Statistics: Receive errors"
              },
              "sflow_egress_bytes": {
                "doc": [
                  "Number of egress bytes sampled on an interface."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/sFlow Statistics"
              },
              "ipv4_mc_tx_bytes": {
                "doc": [
                  "Number of transmitted ipv4 multicast bytes."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Layer3 - IP Statistics"
              },
              "tx_bytes": {
                "doc": [
                  "Number of transmitted bytes."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Statistics: Successful transmit and receive counters"
              },
              "ipv4_uc_tx_bytes": {
                "doc": [
                  "Number of transmitted ipv4 unicast bytes."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Layer3 - IP Statistics"
              },
              "ipv6_uc_tx_packets": {
                "doc": [
                  "Number of transmitted ipv6 unicast packets."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Layer3 - IP Statistics"
              },
              "ipv4_mc_rx_packets": {
                "doc": [
                  "Number of received ipv4 multicast packets."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Layer3 - IP Statistics"
              },
              "ipv4_mc_tx_packets": {
                "doc": [
                  "Number of transmitted ipv4 multicast packets."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Layer3 - IP Statistics"
              },
              "sflow_egress_packets": {
                "doc": [
                  "Number of egress packets sampled on an interface."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/sFlow Statistics"
              },
              "rx_bytes": {
                "doc": [
                  "Number of received bytes."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Statistics: Successful transmit and receive counters"
              },
              "tx_errors": {
                "doc": [
                  "Total number of transmit errors, greater than or equal to the sum of the above."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Statistics: Transmit errors"
              },
              "sflow_ingress_packets": {
                "doc": [
                  "Number of ingress packets sampled on an interface."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/sFlow Statistics"
              },
              "ipv6_uc_rx_bytes": {
                "doc": [
                  "Number of received ipv6 unicast bytes."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Layer3 - IP Statistics"
              },
              "ipv6_uc_tx_bytes": {
                "doc": [
                  "Number of transmitted ipv6 unicast bytes."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Layer3 - IP Statistics"
              },
              "rx_errors": {
                "doc": [
                  "Total number of receive errors, greater than or equal to the sum of the above."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Statistics: Receive errors"
              },
              "ipv4_uc_rx_bytes": {
                "doc": [
                  "Number of received ipv4 unicast bytes."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/Layer3 - IP Statistics"
              }
            },
            "key": "string",
            "value": "integer",
            "min": 0
          },
          "ephemeral": true,
          "group": [
            "/Interface/Statistics/Statistics: Successful transmit and receive counters",
            "/Interface/Statistics/Statistics: Receive errors",
            "/Interface/Statistics/Statistics: Transmit errors",
            "/Interface/Statistics/Layer3 - IP Statistics",
            "/Interface/Statistics/sFlow Statistics"
          ]
        },
        "duplex": {
          "category": "status",
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "half",
                "full"
              ],
              "type": "string"
            },
            "min": 0
          },
          "doc": [
            "The duplex mode of the physical network link."
          ],
          "ephemeral": true,
          "group": "/Interface/Interface Status"
        },
        "hw_status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "ready": {
                "emptyValue": false,
                "doc": [
                  "Status information about hardware resource allocation on the interface. It is",
                  "set as false if there are not enough hardware resources or if the resources",
                  "required to configure features like ACLs in the interface have not been",
                  "allocated yet.  It is set as true when all the resources have been allocated.",
                  "The default value is `false`."
                ],
                "type": "boolean",
                "group": "/Interface/Interface Status"
              },
              "ready_state_blocked_reason": {
                "doc": [
                  "Enumeration that identifies the asserting protocol that causes the ready to be",
                  "\"false\"."
                ],
                "type": {
                  "enum": [
                    "acls"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Interface Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "ephemeral": true,
          "group": "/Interface/Interface Status"
        },
        "lldp_neighbor_info": {
          "category": "status",
          "doc": [
            "Keys-value pairs of neighbor's port info as discovered by LLDP."
          ],
          "type": {
            "max": "unlimited",
            "valueMap": {
              "port_description": {
                "doc": [
                  "The port description field shall contain an alpha-numeric string that indicates",
                  "the port's description."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "port_mfs": {
                "doc": [
                  "Port maximum frame size."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "mgmt_ip_list": {
                "doc": [
                  "A comma-seperated list of management IP addresses."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "port_lastupdate": {
                "doc": [
                  "Time (posix seconds) of last update received."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "chassis_capability_available": {
                "doc": [
                  "The chassis capabilities field contains a bit-map of the capabilities that",
                  "define the primary function(s) of the system. A binary one in the associated bit",
                  "indicates the existence of that capability. Individual systems may indicate more",
                  "than one implemented functional capability (for example, both a bridge and",
                  "router capability)."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "port_lastchange": {
                "doc": [
                  "Time (posix seconds) of last change of values."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "port_id": {
                "doc": [
                  "The Port ID is a mandatory TLV that identifies the port component of the MSAP",
                  "identifier associated with the transmitting LLDP agent."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "chassis_refcount": {
                "doc": [
                  "Chassis reference count."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "pids_len_list": {
                "doc": [
                  "A comma-seperated list of length of protocol ID names."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "power_powertype": {
                "doc": [
                  "Power type or LLDP_DOT3_POWER_8023AT_OFF indicating source, priority, requested",
                  "and allocated have no meaning."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "power_supported": {
                "doc": [
                  "Power value is the power the neighbor supports."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "power_paircontrol": {
                "doc": [
                  "Describes the capability of controlling the power pairs functionality to switch",
                  "pins for sourcing power. The value true indicate that the device has the",
                  "capability to control the power pairs.  When false the PSE Pinout Alternative",
                  "used cannot be controlled through the PethPsePortAdminEnable attribute."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "chassis_id": {
                "doc": [
                  "The Chassis ID identifies the chassis containing the IEEE 802 LAN station",
                  "associated with the transmitting LLDP agent."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "port_id_subtype": {
                "doc": [
                  "The port ID subtype field shall contain an integer value indicating the basis",
                  "for the identifier that is listed in the port ID field."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "chassis_capability_enabled": {
                "doc": [
                  "The enabled capabilities field contains a bit map of the primary functions of",
                  "the system. A binary one in a bit position indicates that the function is",
                  "currently enabled."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "macphy_autoneg_enabled": {
                "doc": [
                  "Link autonegotiation enabled."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "chassis_index": {
                "doc": [
                  "The interface index value used to identify the chassis."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "chassis_name": {
                "doc": [
                  "The system name field contains an alpha-numeric string that indicates the",
                  "administratively assigned name."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "port_hidden_in": {
                "doc": [
                  "Considered as hidden for reception."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "port_id_len": {
                "doc": [
                  "Port ID length."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "mgmt_iface_list": {
                "doc": [
                  "A comma-seperated list of management IP interfaces."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "pids_name_list": {
                "doc": [
                  "A comma-seperated list of protocol ID name."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "power_priority": {
                "doc": [
                  "Power priority configured on the neighbor port."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "chassis_ttl": {
                "doc": [
                  "The Time To Live TLV indicates the number of seconds that the recipient LLDP",
                  "agent is to regard the information associated with this MSAP identifier to be",
                  "valid."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "vlan_name_list": {
                "doc": [
                  "A comma-seperated list of vlan names."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "port_hidden_out": {
                "doc": [
                  "Considered as hidden for transmission."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "macphy_mau_type": {
                "doc": [
                  "Common enumeration values for repeater and interface MAU jack types."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "chassis_id_len": {
                "doc": [
                  "Chassis ID TLV length."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "power_source": {
                "doc": [
                  "Power Source code indicates neighbor Primary Power Source or the Backup Power",
                  "Source."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "chassis_protocol": {
                "doc": [
                  "Chassis protocol name (LLDP)."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "chassis_description": {
                "doc": [
                  "The chassis description field contains an alpha-numeric string that is the",
                  "textual description of the network entity. It includes the full name and version",
                  "identification of the hardware type, software operating system, and networking",
                  "software."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "vlan_id_list": {
                "doc": [
                  "A comma-seperated list of vlan IDs."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "power_allocated": {
                "doc": [
                  "The power value is the power the neighbor allocates."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "port_protocol": {
                "doc": [
                  "Protocol used to get this port (LLDP)."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "ppvids_ppvid_list": {
                "doc": [
                  "A comma-seperated list of port and protocol vlan IDs."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "port_pvid": {
                "doc": [
                  "The port VLAN identifier field shall contain the VLAN ID for the bridge port as",
                  "defined in 8.4.4 of IEEE Std 802.1Q."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "macphy_autoneg_advertised": {
                "doc": [
                  "Link autonegotiation advertized."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "macphy_autoneg_support": {
                "doc": [
                  "Link autonnegotiation supported."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "ppvids_cap_list": {
                "doc": [
                  "A comma-seperated list of port and protocol vlan capablity."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "chassis_id_subtype": {
                "doc": [
                  "The chassis ID subtype field contains an integer value indicating the basis for",
                  "the chassis ID entity listed in the chassis ID field."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "power_pairs": {
                "doc": [
                  "Describes or controls the pairs in use. A value of signal(1) means that the",
                  "signal pairs only are in use. A value of spare(2) means that the spare pairs",
                  "only are in use."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              },
              "power_requested": {
                "doc": [
                  "The power value is the power the neighbor requests."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP Neighbor Info"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Interface/Interface Status/LLDP Neighbor Info"
        },
        "type": {
          "category": "configuration",
          "emptyValue": "system",
          "group": "/Interface/System-Specific Details",
          "doc": [
            "The interface type, one of:",
            "",
            "+ __`system`__:  An ordinary network device, e.g. `eth0` on Linux. Sometimes",
            "referred to as ``external interfaces'' since they are generally connected to",
            "hardware external to that on which the OpenSwitch is running.  The empty string",
            "is a synonym for `system`.",
            "+ __`internal`__:  A simulated network device that sends and receives traffic.",
            "An internal interface whose [name](Interface.name) is the same as its bridge's",
            "[name](Bridge.name) is called the ``local interface.''  It does not make sense",
            "to bond an internal interface, so the terms ``port'' and ``interface'' are often",
            "used imprecisely for internal interfaces.",
            "+ __`vlansubint`__:  A sub-interface created for a physical interface. Sub-",
            "interfaces are used for router-on-stick configurations and to allow separation",
            "of traffic on a L3 physical interface based on dot1q encapsulation VLAN and",
            "apply policies on them.",
            "+ __`loopback`__:  A loopback interface is a virtual interface, supporting",
            "IPv4/IPv6 address configuration, that remains up until it is deleted by",
            "administrator. Loopback interface IP address is used as router-id and source",
            "address by many protocols.",
            "+ __`vxlan`__:  This is a vitual interface of type vxlan (L2 overlay over L3",
            "network RFC 7348)."
          ],
          "mutable": false,
          "type": {
            "key": {
              "enum": [
                "system",
                "internal",
                "vlansubint",
                "loopback",
                "vxlan"
              ],
              "type": "string"
            }
          }
        },
        "lacp_current": {
          "category": "status",
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "doc": [
            "Boolean value indicating LACP status for this interface.  If true, this",
            "interface has current LACP information about its LACP partner.  This information",
            "may be used to monitor the health of interfaces in a LACP enabled port.  This",
            "column will be empty if LACP is not enabled."
          ],
          "ephemeral": true,
          "group": "/Interface/Interface Status"
        },
        "status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "ipsec_bytes_out": {
                "doc": [
                  "Reports output bytes processed."
                ],
                "group": "/Interface/Interface Status/IKE Status: ipsec_gre_ike only",
                "type": "integer"
              },
              "ipsec_sa_spi_out": {
                "doc": [
                  "Reports the Security Parameter Index used for SA outbound traffics."
                ],
                "group": "/Interface/Interface Status/IKE Status: ipsec_gre_ike only",
                "type": "integer"
              },
              "ipsec_bytes_in": {
                "doc": [
                  "Reports input bytes processed."
                ],
                "group": "/Interface/Interface Status/IKE Status: ipsec_gre_ike only",
                "type": "integer"
              },
              "lldp_local_port_vlan": {
                "doc": [
                  "Information about port VLAN config."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP status info"
              },
              "driver_version": {
                "doc": [
                  "The version string of the device driver controlling the network adapter."
                ],
                "type": "string",
                "group": "/Interface/Interface Status"
              },
              "ipsec_packets_out": {
                "doc": [
                  "Reports output packets processed."
                ],
                "group": "/Interface/Interface Status/IKE Status: ipsec_gre_ike only",
                "type": "integer"
              },
              "ipsec_ike_reauth_time": {
                "doc": [
                  "Reports the epoch time when this connection re-authenticates."
                ],
                "group": "/Interface/Interface Status/IKE Status: ipsec_gre_ike only",
                "type": "integer"
              },
              "lldp_local_port_description": {
                "doc": [
                  "Description of LLDP port in alpha-numeric format."
                ],
                "type": "string",
                "group": "/Interface/Interface Status/LLDP status info"
              },
              "ipsec_sa_spi_in": {
                "doc": [
                  "Reports the Security Parameter Index used for SA inbound traffics."
                ],
                "group": "/Interface/Interface Status/IKE Status: ipsec_gre_ike only",
                "type": "integer"
              },
              "kernel_interface_error": {
                "doc": [
                  "Human readable kernel interface provisioning error description."
                ],
                "type": "string",
                "group": "/Interface/Interface Status"
              },
              "ipsec_ike_responder_spi": {
                "doc": [
                  "Reports the IKE responder SPI."
                ],
                "group": "/Interface/Interface Status/IKE Status: ipsec_gre_ike only",
                "type": "integer"
              },
              "ipsec_ike_initiator_spi": {
                "doc": [
                  "Reports the IKE initiator SPI."
                ],
                "group": "/Interface/Interface Status/IKE Status: ipsec_gre_ike only",
                "type": "integer"
              },
              "ipsec_sa_expiration_time": {
                "doc": [
                  "Reports the epoch time when this SA expires."
                ],
                "group": "/Interface/Interface Status/IKE Status: ipsec_gre_ike only",
                "type": "integer"
              },
              "driver_name": {
                "doc": [
                  "The name of the device driver controlling the network adapter."
                ],
                "type": "string",
                "group": "/Interface/Interface Status"
              },
              "ipsec_ike_established_time": {
                "doc": [
                  "Reports the epoch time when this connection is established."
                ],
                "group": "/Interface/Interface Status/IKE Status: ipsec_gre_ike only",
                "type": "integer"
              },
              "ipsec_packets_in": {
                "doc": [
                  "Reports input packets processed."
                ],
                "group": "/Interface/Interface Status/IKE Status: ipsec_gre_ike only",
                "type": "integer"
              },
              "firmware_version": {
                "doc": [
                  "The version string of the network adapter's firmware, if available."
                ],
                "type": "string",
                "group": "/Interface/Interface Status"
              },
              "ipsec_sa_rekey_time": {
                "doc": [
                  "Reports the epoch time when this SA re-keys."
                ],
                "group": "/Interface/Interface Status/IKE Status: ipsec_gre_ike only",
                "type": "integer"
              },
              "ipsec_sa_state": {
                "doc": [
                  "Reports the this SA state."
                ],
                "group": "/Interface/Interface Status/IKE Status: ipsec_gre_ike only",
                "type": "string"
              },
              "ipsec_ike_conn_state": {
                "doc": [
                  "Reports this connection state."
                ],
                "group": "/Interface/Interface Status/IKE Status: ipsec_gre_ike only",
                "type": {
                  "enum": [
                    "config_error",
                    "config_ok",
                    "created",
                    "connecting",
                    "passive",
                    "rekeying",
                    "deleting",
                    "destroying",
                    "routed",
                    "installing",
                    "updating",
                    "rekeyed",
                    "retrying",
                    "installed",
                    "establish"
                  ],
                  "type": "string"
                }
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "doc": [
            "Key-value pairs that report port status.  Supported status values are",
            "[type](Interface.type)-dependent; some interfaces may not have a valid",
            "[driver_name](Interface.status.driver_name), for example."
          ],
          "ephemeral": true,
          "group": [
            "/Interface/Interface Status",
            "/Interface/Interface Status/LLDP status info"
          ]
        },
        "lacp_status": {
          "category": "status",
          "doc": [
            "Key-value pairs that report LACP protocol status."
          ],
          "type": {
            "max": "unlimited",
            "valueMap": {
              "lacp_blocked": {
                "emptyValue": false,
                "doc": [
                  "lacp_blocked is set to 'true' if LACP decides to block the interface. Default",
                  "value is `false`."
                ],
                "type": "boolean",
                "group": "/Interface/Interface Status"
              },
              "actor_system_id": {
                "doc": [
                  "The LACP actor system ID in the form of priority and mac address tuple."
                ],
                "type": "string",
                "group": "/Interface/Interface Status"
              },
              "partner_state": {
                "doc": [
                  "The LACP partner protocol state information in an abbreviated form reporting",
                  "status/state bit values. For example,",
                  "(Actv:1,TmOut:1,Aggr:1,Sync:1,Col:1,Dist:1,Def:0,Exp:0)"
                ],
                "type": "string",
                "group": "/Interface/Interface Status"
              },
              "partner_port_id": {
                "doc": [
                  "The LACP partner port ID in the form of priority and port number tuple."
                ],
                "type": "string",
                "group": "/Interface/Interface Status"
              },
              "actor_key": {
                "doc": [
                  "The LACP actor key in use."
                ],
                "type": "string",
                "group": "/Interface/Interface Status"
              },
              "partner_key": {
                "doc": [
                  "The LACP partner key in use."
                ],
                "type": "string",
                "group": "/Interface/Interface Status"
              },
              "partner_system_id": {
                "doc": [
                  "The LACP partner system ID in the form of priority and mac address tuple."
                ],
                "type": "string",
                "group": "/Interface/Interface Status"
              },
              "actor_port_id": {
                "doc": [
                  "The LACP actor port ID in the form of priority and port number tuple."
                ],
                "type": "string",
                "group": "/Interface/Interface Status"
              },
              "actor_state": {
                "doc": [
                  "The LACP actor protocol state information in an abbreviated form reporting",
                  "status/state bit values. For example,",
                  "(Actv:1,TmOut:1,Aggr:1,Sync:1,Col:1,Dist:1,Def:0,Exp:0)"
                ],
                "type": "string",
                "group": "/Interface/Interface Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Interface/Interface Status"
        },
        "mac_in_use": {
          "category": "status",
          "type": {
            "max": 1,
            "key": {
              "type": "string"
            },
            "min": 0
          },
          "doc": [
            "The MAC address in use by this [Interface](Interface)."
          ],
          "ephemeral": true,
          "group": "/Interface/Interface Status"
        },
        "hw_intf_config": {
          "doc": [
            "Key-value pairs that represent the configuration passed down to hardware."
          ],
          "type": {
            "max": "unlimited",
            "valueMap": {
              "pause": {
                "doc": [
                  "The possible values are \"none\", \"rx\", \"tx\", and \"rxtx\"."
                ],
                "type": {
                  "enum": [
                    "none",
                    "rx",
                    "tx",
                    "rxtx"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Hardware Interface Configuration"
              },
              "duplex": {
                "doc": [
                  "The possible values are \"half\" and \"full\"."
                ],
                "type": {
                  "enum": [
                    "half",
                    "full"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Hardware Interface Configuration"
              },
              "interface_type": {
                "doc": [
                  "Physical layer interface type of [Interface](Interface). The possible values are",
                  "\"unknown\", \"backplane\", \"1GBASE_SX\", \"1GBASE_T\", \"10GBASE_CR\", \"10GBASE_SR\",",
                  "\"10GBASE_LR\", \"10GBASE_LRM\", \"40GBASE_CR4\", \"40GBASE_SR4\" and \"40GBASE_LR4\"."
                ],
                "type": {
                  "enum": [
                    "unknown",
                    "backplane",
                    "1GBASE_SX",
                    "1GBASE_T",
                    "10GBASE_CR",
                    "10GBASE_SR",
                    "10GBASE_LR",
                    "10GBASE_LRM",
                    "40GBASE_CR4",
                    "40GBASE_SR4",
                    "40GBASE_LR4"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Hardware Interface Configuration"
              },
              "mtu": {
                "doc": [
                  "Maximum transmission unit (MTU) of [Interface](Interface)."
                ],
                "type": "string",
                "group": "/Interface/Hardware Interface Configuration"
              },
              "enable": {
                "doc": [
                  "The possible values are \"true\" and \"false\"."
                ],
                "type": "string",
                "group": "/Interface/Hardware Interface Configuration"
              },
              "autoneg": {
                "doc": [
                  "The possible values are \"on\" and \"off\"."
                ],
                "type": {
                  "enum": [
                    "on",
                    "off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Hardware Interface Configuration"
              },
              "speeds": {
                "doc": [
                  "The list of possible interface speeds, in megabits per second. If autoneg is",
                  "true, this is the list of advertised speeds. If not, the first speed in the list",
                  "is the fixed speed of [Interface](Interface)."
                ],
                "type": "string",
                "group": "/Interface/Hardware Interface Configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Interface/Hardware Interface Configuration"
        },
        "link_speed": {
          "category": "status",
          "type": {
            "max": 1,
            "key": "integer",
            "min": 0
          },
          "doc": [
            "The negotiated speed of the physical network link in bits per second. Valid",
            "values are positive integers greater than 0."
          ],
          "ephemeral": true,
          "group": "/Interface/Interface Status"
        },
        "pause": {
          "category": "status",
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "none",
                "rx",
                "tx",
                "rxtx"
              ],
              "type": "string"
            },
            "min": 0
          },
          "doc": [
            "The status of the Ethernet PAUSE (link-level flow control) mode of the physical",
            "network link."
          ],
          "ephemeral": true,
          "group": "/Interface/Interface Status"
        },
        "admin_state": {
          "category": "status",
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "up",
                "down"
              ],
              "type": "string"
            },
            "min": 0
          },
          "doc": [
            "The administrative state of the physical network link."
          ],
          "ephemeral": true,
          "group": "/Interface/Interface Status"
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Interface/Common Columns"
        },
        "lldp_statistics": {
          "category": "statistics",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "lldp_rx_discard": {
                "doc": [
                  "Number of lldp packet received and discarded because of missing, out-of-order or",
                  "incorrect TLVs."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/LLDP Interface Level Statistics"
              },
              "lldp_rx_tlv_discard": {
                "doc": [
                  "Number of lldp TLVs discarded because of errors."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/LLDP Interface Level Statistics"
              },
              "lldp_tx_len_err": {
                "doc": [
                  "Number of lldp packet transmit error because of length."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/LLDP Interface Level Statistics"
              },
              "lldp_rx_tlv_unknown": {
                "doc": [
                  "Number of lldp TLVs discarded because of unknown tlv."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/LLDP Interface Level Statistics"
              },
              "lldp_rx_err": {
                "doc": [
                  "Number of lldp packets received with one or more detectable errors."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/LLDP Interface Level Statistics"
              },
              "lldp_tx": {
                "doc": [
                  "Number of lldp packets transmitted."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/LLDP Interface Level Statistics"
              },
              "lldp_rx": {
                "doc": [
                  "Number of lldp packets received."
                ],
                "type": "integer",
                "group": "/Interface/Statistics/LLDP Interface Level Statistics"
              }
            },
            "key": "string",
            "value": "integer",
            "min": 0
          },
          "ephemeral": true,
          "group": "/Interface/Statistics/LLDP Interface Level Statistics"
        },
        "split_children": {
          "category": "configuration",
          "doc": [
            "For a split parent interface, this is the reference to the list of children",
            "[Interface](Interface)s."
          ],
          "type": {
            "max": 4,
            "key": {
              "type": "uuid",
              "refTable": "Interface"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/Interface/Hardware Interface Information"
        },
        "hw_intf_info": {
          "category": "status",
          "doc": [
            "Key-value pairs that show the information about a physical interface."
          ],
          "type": {
            "max": "unlimited",
            "valueMap": {
              "bridge": {
                "emptyValue": false,
                "doc": [
                  "Boolean value indicating interface is a `bridge` interface which is created for",
                  "every bridge instance. The `bridge` interface receives all VLAN traffic and",
                  "distributes to the vlan interfaces based on the VLAN tags. The default value is",
                  "`false`"
                ],
                "type": "boolean",
                "group": "/Interface/Hardware Interface Information"
              },
              "capability_split_4": {
                "doc": [
                  "+ Boolean value indicating whether or not the interface supports being split",
                  "into four split ports. For example, a QSFP",
                  "+ port can run as a single port or can be split into four 10G split ports using",
                  "a QSFP",
                  "+ splitter cable."
                ],
                "type": "string",
                "group": "/Interface/Hardware Interface Information"
              },
              "switch_unit": {
                "doc": [
                  "The hardware switch chip unit identifier. This value is applicable only to",
                  "interfaces on physical switch devices."
                ],
                "type": "string",
                "group": "/Interface/Hardware Interface Information"
              },
              "pluggable": {
                "doc": [
                  "Boolean value indicating whether or not the interface has a fixed connector or a",
                  "pluggable module socket."
                ],
                "type": "string",
                "group": "/Interface/Hardware Interface Information"
              },
              "connector": {
                "doc": [
                  "The form factor of the interface socket. The possible values are \"SFP_PLUS\" and",
                  "\"QSFP_PLUS\"."
                ],
                "type": {
                  "enum": [
                    "SFP_PLUS",
                    "QSFP_PLUS"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Hardware Interface Information"
              },
              "capability_enet10G": {
                "doc": [
                  "Boolean value indicating whether or not the interface supports Ethernet 10G",
                  "speed."
                ],
                "type": "string",
                "group": "/Interface/Hardware Interface Information"
              },
              "switch_intf_id": {
                "doc": [
                  "The hardware switch chip interface identifier. This value is applicable only to",
                  "interfaces on physical switch devices."
                ],
                "type": "string",
                "group": "/Interface/Hardware Interface Information"
              },
              "max_speed": {
                "doc": [
                  "The maximum speed of the interface in units of megabits per second."
                ],
                "type": "string",
                "group": "/Interface/Hardware Interface Information"
              },
              "mac_addr": {
                "doc": [
                  "The MAC Address for the interface."
                ],
                "type": "string",
                "group": "/Interface/Hardware Interface Information"
              },
              "capability_enet40G": {
                "doc": [
                  "Boolean value indicating whether or not the interface supports Ethernet 40G",
                  "speed."
                ],
                "type": "string",
                "group": "/Interface/Hardware Interface Information"
              },
              "capability_enet1G": {
                "doc": [
                  "Boolean value indicating whether or not the interface supports Ethernet 1G",
                  "speed."
                ],
                "type": "string",
                "group": "/Interface/Hardware Interface Information"
              },
              "speeds": {
                "doc": [
                  "The list of supported speeds of the interface in units of megabits per second."
                ],
                "type": "string",
                "group": "/Interface/Hardware Interface Information"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Interface/Hardware Interface Information"
        },
        "name": {
          "category": "configuration",
          "mutable": false,
          "doc": [
            "Interface name.  Should be alphanumeric and no more than about 8 bytes long.",
            "May be the same as the port name, for non-bonded ports.  Must otherwise be",
            "unique among the names of ports, interfaces, and bridges on a host."
          ],
          "type": "string",
          "group": "/Interface/Core Features"
        },
        "queue_tx_packets": {
          "category": "statistics",
          "group": "/Interface/Statistics/Statistics: Interface Queue Transmit Statistics",
          "doc": [
            "For each outbound queue, a count of the queue's total packets transmitted."
          ],
          "ephemeral": true,
          "keyname": "queue_number",
          "type": {
            "max": "unlimited",
            "key": {
              "minInteger": 0,
              "type": "integer"
            },
            "value": {
              "minInteger": 0,
              "type": "integer"
            },
            "min": 0
          }
        },
        "bond_status": {
          "category": "status",
          "doc": [
            "Key-value pairs that report the status of a bond.  This applies to both static",
            "or LACP bonds."
          ],
          "type": {
            "max": "unlimited",
            "valueMap": {
              "state": {
                "doc": [
                  "Enumeration indicating the forwarding state of the interface when it is",
                  "configured as a member of a LAG. * Up: The interface is eligible and should be",
                  "fowarding traffic according to LACP * Blocked:  The interface is either not",
                  "eligible or should be blocked according to LACP.  If an interface is Rx disable,",
                  "it is also Tx disable, thus, it is blocked * Down:  The interface is configured",
                  "to be a member of a LAG, but it is either administratively or operatively down"
                ],
                "type": {
                  "enum": [
                    "up",
                    "blocked",
                    "down"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Interface Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Interface/Interface Status"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "lacp-port-priority": {
                "doc": [
                  "The LACP port priority of this [Interface](Interface).  In LACP negotiations",
                  "[Interface](Interface)s with numerically lower priorities are preferred for",
                  "aggregation."
                ],
                "type": {
                  "minInteger": 1,
                  "maxInteger": 65535,
                  "type": "integer"
                },
                "group": "/Interface/Bonding Configuration"
              },
              "lldp_enable_dir": {
                "doc": [
                  "LLDP interface level config."
                ],
                "type": {
                  "enum": [
                    "off",
                    "rx",
                    "tx",
                    "rxtx"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Common Columns/LLDP Interface configurations"
              },
              "lacp-port-id": {
                "doc": [
                  "The LACP port ID of this [Interface](Interface).  Port IDs are used in LACP",
                  "negotiations to identify individual ports participating in a bond."
                ],
                "type": {
                  "minInteger": 1,
                  "maxInteger": 65535,
                  "type": "integer"
                },
                "group": "/Interface/Bonding Configuration"
              },
              "lacp-aggregation-key": {
                "doc": [
                  "The LACP aggregation key of this [Interface](Interface). [Interface](Interface)s",
                  "with different aggregation keys may not be active within a given [Port](Port) at",
                  "the same time."
                ],
                "type": {
                  "minInteger": 1,
                  "maxInteger": 65535,
                  "type": "integer"
                },
                "group": "/Interface/Bonding Configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": [
            "/Interface/Bonding Configuration",
            "/Interface/Common Columns",
            "/Interface/Common Columns/LLDP Interface configurations"
          ]
        },
        "mtu": {
          "category": "status",
          "type": {
            "max": 1,
            "key": "integer",
            "min": 0
          },
          "doc": [
            "The MTU (maximum transmission unit); i.e. the largest amount of data that can",
            "fit into a single Ethernet frame. The standard Ethernet MTU is 1500 bytes.  Some",
            "physical media and many kinds of virtual interfaces can be configured with",
            "higher MTUs.",
            "",
            "This column will be empty for an interface that does not have an MTU as, for",
            "example, some kinds of tunnels do not."
          ],
          "ephemeral": true,
          "group": "/Interface/Interface Status"
        },
        "forwarding_state": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "interface_aggregation_forwarding": {
                "emptyValue": false,
                "doc": [
                  "Interface aggregation is set based on the information provided by protocols",
                  "related to link aggregation. The asserting protocol setting the value of this",
                  "key to be defined in the interface_aggregation_blocked_reason key. Default value",
                  "is `false`."
                ],
                "type": "boolean",
                "group": "/Interface/Interface Status"
              },
              "interface_aggregation_blocked_reason": {
                "doc": [
                  "Enumeration that identifies the asserting protocol that causes the interface",
                  "aggregation to be different from \"forwarding\"."
                ],
                "type": {
                  "enum": [
                    "lacp"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Interface Status"
              },
              "forwarding": {
                "emptyValue": false,
                "doc": [
                  "Enumeration that summarizes the state of the interface. Default value is",
                  "`false`."
                ],
                "type": "boolean",
                "group": "/Interface/Interface Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Interface/Interface Status"
        },
        "error": {
          "category": "status",
          "doc": [
            "If the configuration of the [Interface](Interface) failed, OpenSwitch sets this",
            "column to an error description in human readable form.  Otherwise, OpenSwitch",
            "clears this column."
          ],
          "type": {
            "max": 1,
            "key": "string",
            "min": 0
          },
          "group": "/Interface/Interface Status"
        },
        "pm_info": {
          "category": "status",
          "doc": [
            "Key-value pairs that report pluggable module information."
          ],
          "type": {
            "max": "unlimited",
            "valueMap": {
              "tx_power_high_alarm_threshold": {
                "doc": [
                  "+ Alarm high threshold value of output power, ranging from 0 to 6.5535, in units",
                  "of milliwatts. This is a factory preset value in DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 6.5535,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "rx3_power_low_alarm": {
                "doc": [
                  "+ Flag to indicate received average optical power in channel 3 of QSFP",
                  "+ module is below low alarm level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "tx_bias_high_warning_threshold": {
                "doc": [
                  "+ Warning high threshold value of TX bias current, ranging from 0 to 131, in",
                  "units of milliamps. This is a factory preset value in DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 131,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "rx_power_high_warning": {
                "doc": [
                  "+ Flag to indicate received average optical power exceeds high warning level.",
                  "This value is from DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "rx1_power_high_warning": {
                "doc": [
                  "+ Flag to indicate received average optical power in channel 1 of QSFP",
                  "+ module exceeds high warning level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "rx4_power_high_warning": {
                "doc": [
                  "+ Flag to indicate received average optical power in channel 4 of QSFP",
                  "+ module exceeds high warning level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "rx_power_low_warning_threshold": {
                "doc": [
                  "+ Warning low threshold value of received average optical power. The valid value",
                  "range is 0 to 6.5535, in units of milliwatts. This is a factory preset value in",
                  "DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 6.5535,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "vcc_low_warning": {
                "doc": [
                  "+ Flag to indicate internal supply voltage is below low warning level. This",
                  "value is from DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "vcc_high_warning": {
                "doc": [
                  "+ Flag to indicate internal supply voltage exceeds high warning level. This",
                  "value is from DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "vcc_low_alarm": {
                "doc": [
                  "+ Flag to indicate internal supply voltage is below low alarm level. This value",
                  "is from DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "tx_power_high_warning": {
                "doc": [
                  "+ Flag to indicate output power exceeds high warning level. This value is from",
                  "DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "rx_power_low_warning": {
                "doc": [
                  "+ Flag to indicate received average optical power is below low warning level.",
                  "This value is from DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "vcc_high_alarm": {
                "doc": [
                  "+ Flag to indicate internal supply voltage exceeds high alarm level. This value",
                  "is from DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "rx4_power_high_alarm": {
                "doc": [
                  "+ Flag to indicate received average optical power in channel 4 of QSFP",
                  "+ module exceeds high alarm level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "rx4_power_low_alarm": {
                "doc": [
                  "+ Flag to indicate received average optical power in channel 4 of QSFP",
                  "+ module is below low alarm level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "temperature_low_alarm": {
                "doc": [
                  "+ Flag to indicate internal temperature is below low alarm level. This value is",
                  "from DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "rx4_power_low_warning": {
                "doc": [
                  "+ Flag to indicate received average optical power in channel 4 of QSFP",
                  "+ module is below low warning level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "rx_power_high_alarm_threshold": {
                "doc": [
                  "+ Alarm high threshold value of received average optical power. The valid value",
                  "range is 0 to 6.5535, in units of milliwatts. This is a factory preset value in",
                  "DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 6.5535,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "tx_bias_low_alarm_threshold": {
                "doc": [
                  "+ Alarm low threshold value of TX bias current, ranging from 0 to 131, in units",
                  "of milliamps. This is a factory preset value in DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 131,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "tx4_bias_high_warning": {
                "doc": [
                  "+ Flag to indicate TX bias current in channel 4 of QSFP",
                  "+ module exceeds high warning level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "tx_power_low_warning": {
                "doc": [
                  "+ Flag to indicate output power is below low warning level. This value is from",
                  "DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "tx4_bias": {
                "doc": [
                  "+ Transceiver TX bias current in channel 4 of QSFP",
                  "+ module, ranging from 0 to 131, in units of milliamps. This value is from DOM",
                  "supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 131,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "tx2_bias_low_alarm": {
                "doc": [
                  "+ Flag to indicate TX bias current in channel 2 of QSFP",
                  "+ module is below low alarm level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "rx3_power": {
                "doc": [
                  "+ Transceiver received average optical power in channel 3 of QSFP",
                  "+ module. The valid value range is 0 to 6.5535, in units of milliwatts. This",
                  "value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 6.5535,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "rx2_power_low_alarm": {
                "doc": [
                  "+ Flag to indicate received average optical power in channel 2 of QSFP",
                  "+ module is below low alarm level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "connector_status": {
                "doc": [
                  "The status of the connector to indicate whether it is supported by the hardware",
                  "platform. The possible values are \"unrecognized\", \"unsupported\" and \"supported\"."
                ],
                "type": {
                  "enum": [
                    "unrecognized",
                    "unsupported",
                    "supported"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "temperature_low_alarm_threshold": {
                "doc": [
                  "+ Alarm low threshold value of internal temperature, ranging from -128 to 128,",
                  "in units of Celsius. This is a factory preset value in DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 128,
                  "minReal": -128
                },
                "group": "/Interface/Module Information"
              },
              "tx_power_high_warning_threshold": {
                "doc": [
                  "+ Warning high threshold value of output power, ranging from 0 to 6.5535, in",
                  "units of milliwatts. This is a factory preset value in DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 6.5535,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "tx2_bias_high_alarm": {
                "doc": [
                  "+ Flag to indicate TX bias current in channel 2 of QSFP",
                  "+ module exceeds high alarm level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "vcc": {
                "doc": [
                  "+ Internally measured transceiver supply voltage, ranging from 0 to 6.55, in",
                  "units of Volts. This value is from DOM supporting SFP+/QSFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 6.55,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "vendor_oui": {
                "doc": [
                  "The Organizationally Unique Identifier (OUI) of the module vendor."
                ],
                "type": "string",
                "group": "/Interface/Module Information"
              },
              "rx4_power": {
                "doc": [
                  "+ Transceiver received average optical power in channel 4 of QSFP",
                  "+ module. The valid value range is 0 to 6.5535, in units of milliwatts. This",
                  "value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 6.5535,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "temperature_high_alarm_threshold": {
                "doc": [
                  "+ Alarm high threshold value of internal temperature, ranging from -128 to 128,",
                  "in units of Celsius. This is a factory preset value in DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 128,
                  "minReal": -128
                },
                "group": "/Interface/Module Information"
              },
              "rx1_power_low_alarm": {
                "doc": [
                  "+ Flag to indicate received average optical power in channel 1 of QSFP",
                  "+ module is below low alarm level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "tx2_bias": {
                "doc": [
                  "+ Transceiver TX bias current in channel 2 of QSFP",
                  "+ module, ranging from 0 to 131, in units of milliamps. This value is from DOM",
                  "supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 131,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "temperature_low_warning": {
                "doc": [
                  "+ Flag to indicate internal temperature is below low warning level. This value",
                  "is from DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "rx3_power_high_alarm": {
                "doc": [
                  "+ Flag to indicate received average optical power in channel 3 of QSFP",
                  "+ module exceeds high alarm level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "cable_technology": {
                "doc": [
                  "This indicates whether a copper pluggable module is active or passive. The",
                  "possible values are \"active\" and \"passive\"."
                ],
                "type": {
                  "enum": [
                    "active",
                    "passive"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "max_speed": {
                "doc": [
                  "The maximum speed supported by the transceiver, in units of megabits per second."
                ],
                "type": "string",
                "group": "/Interface/Module Information"
              },
              "rx_power": {
                "doc": [
                  "+ Transceiver received average optical power, ranging from 0 to 6.5535, in units",
                  "of milliwatts. This value is from DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 6.5535,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "tx_bias_high_warning": {
                "doc": [
                  "+ Flag to indicate TX bias current exceeds high warning level. This value is",
                  "from DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "vcc_high_warning_threshold": {
                "doc": [
                  "+ Warning high threshold value of internal supply voltage, ranging from 0 to",
                  "6.55, in units of Volts. This is a factory preset value in DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 6.55,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "tx1_bias_low_warning": {
                "doc": [
                  "+ Flag to indicate TX bias current in channel 1 of QSFP",
                  "+ module is below low warning level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "temperature": {
                "doc": [
                  "+ Internally measured transceiver temperature, ranging from -128 to 128, in",
                  "units of Celsius. This value is from DOM supporting SFP+/QSFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 128,
                  "minReal": -128
                },
                "group": "/Interface/Module Information"
              },
              "vendor_revision": {
                "doc": [
                  "The vendor's module revision number."
                ],
                "type": "string",
                "group": "/Interface/Module Information"
              },
              "tx3_bias_low_warning": {
                "doc": [
                  "+ Flag to indicate TX bias current in channel 3 of QSFP",
                  "+ module is below low warning level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "tx3_bias_high_alarm": {
                "doc": [
                  "+ Flag to indicate TX bias current in channel 3 of QSFP",
                  "+ module exceeds high alarm level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "tx1_bias": {
                "doc": [
                  "+ Transceiver TX bias current in channel 1 of QSFP",
                  "+ module, ranging from 0 to 131, in units of milliamps. This value is from DOM",
                  "supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 131,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "tx1_bias_low_alarm": {
                "doc": [
                  "+ Flag to indicate TX bias current in channel 1 of QSFP",
                  "+ module is below low alarm level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "rx3_power_high_warning": {
                "doc": [
                  "+ Flag to indicate received average optical power in channel 3 of QSFP",
                  "+ module exceeds high warning level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "vcc_high_alarm_threshold": {
                "doc": [
                  "+ Alarm high threshold value of internal supply voltage, ranging from 0 to 6.55,",
                  "in units of Volts. This is a factory preset value in DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 6.55,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "tx_power_low_alarm_threshold": {
                "doc": [
                  "+ Alarm low threshold value of output power, ranging from 0 to 6.5535, in units",
                  "of milliwatts. This is a factory preset value in DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 6.5535,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "tx_bias_low_alarm": {
                "doc": [
                  "+ Flag to indicate TX bias current is below low alarm level. This value is from",
                  "DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "rx1_power_high_alarm": {
                "doc": [
                  "+ Flag to indicate received average optical power in channel 1 of QSFP",
                  "+ module exceeds high alarm level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "tx2_bias_low_warning": {
                "doc": [
                  "+ Flag to indicate TX bias current in channel 2 of QSFP",
                  "+ module is below low warning level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "rx_power_low_alarm": {
                "doc": [
                  "+ Flag to indicate received average optical power is below low alarm level. This",
                  "value is from DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "rx_power_high_alarm": {
                "doc": [
                  "+ Flag to indicate received average optical power exceeds high alarm level. This",
                  "value is from DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "vendor_serial_number": {
                "doc": [
                  "The vendor's module serial number."
                ],
                "type": "string",
                "group": "/Interface/Module Information"
              },
              "tx3_bias_low_alarm": {
                "doc": [
                  "+ Flag to indicate TX bias current in channel 3 of QSFP",
                  "+ module is below low alarm level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "vcc_low_alarm_threshold": {
                "doc": [
                  "+ Alarm low threshold value of internal supply voltage, ranging from 0 to 6.55,",
                  "in units of Volts. This is a factory preset value in DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 6.55,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "tx2_bias_high_warning": {
                "doc": [
                  "+ Flag to indicate TX bias current in channel 2 of QSFP",
                  "+ module exceeds high warning level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "cable_length": {
                "doc": [
                  "The length of the cable in meters. This is only applicable to transceivers with",
                  "built-in cable or the maximum cable length for a transceiver restricted by",
                  "length."
                ],
                "type": "string",
                "group": "/Interface/Module Information"
              },
              "supported_speeds": {
                "doc": [
                  "The list of speeds, in megabits per second, supported by this pluggable module."
                ],
                "type": "string",
                "group": "/Interface/Module Information"
              },
              "power_mode": {
                "doc": [
                  "The power mode for the pluggable module. The possible values are \"low\" or",
                  "\"high\". This typically applies to QSFP pluggable modules."
                ],
                "type": {
                  "enum": [
                    "low",
                    "high"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "tx1_bias_high_warning": {
                "doc": [
                  "+ Flag to indicate TX bias current in channel 1 of QSFP",
                  "+ module exceeds high warning level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "tx4_bias_high_alarm": {
                "doc": [
                  "+ Flag to indicate TX bias current in channel 4 of QSFP",
                  "+ module exceeds high alarm level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "connector": {
                "doc": [
                  "The type of pluggable module connector inserted into the socket. The possible",
                  "values are \"absent\", \"unknown\", \"SFP_RJ45\", \"SFP_SX\", \"SFP_LX\", \"SFP_CX\",",
                  "\"SFP_SR\", \"SFP_LR\", \"SFP_LRM\", \"SFP_DAC\", \"SFP_FC\", \"QSFP_CR4\", \"QSFP_SR4\" and",
                  "\"QSFP_LR4\"."
                ],
                "type": {
                  "enum": [
                    "absent",
                    "unknown",
                    "SFP_RJ45",
                    "SFP_SX",
                    "SFP_LX",
                    "SFP_CX",
                    "SFP_SR",
                    "SFP_LR",
                    "SFP_LRM",
                    "SFP_DAC",
                    "SFP_FC",
                    "QSFP_CR4",
                    "QSFP_SR4",
                    "QSFP_LR4"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "temperature_low_warning_threshold": {
                "doc": [
                  "+ Warning low threshold value of internal temperature, ranging from -128 to 128,",
                  "in units of Celsius. This is a factory preset value in DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 128,
                  "minReal": -128
                },
                "group": "/Interface/Module Information"
              },
              "rx1_power": {
                "doc": [
                  "+ Transceiver received average optical power in channel 1 of QSFP",
                  "+ module. The valid value range is 0 to 6.5535, in units of milliwatts. This",
                  "value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 6.5535,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "rx2_power_high_alarm": {
                "doc": [
                  "+ Flag to indicate received average optical power in channel 2 of QSFP",
                  "+ module exceeds high alarm level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "tx_power_high_alarm": {
                "doc": [
                  "+ Flag to indicate output power exceeds high alarm level. This value is from DOM",
                  "supporting SFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "rx3_power_low_warning": {
                "doc": [
                  "+ Flag to indicate received average optical power in channel 3 of QSFP",
                  "+ module is below low warning level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "tx_bias_low_warning": {
                "doc": [
                  "+ Flag to indicate TX bias current is below low warning level. This value is",
                  "from DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "temperature_high_alarm": {
                "doc": [
                  "+ Flag to indicate internal temperature exceeds high alarm level. This value is",
                  "from DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "rx1_power_low_warning": {
                "doc": [
                  "+ Flag to indicate received average optical power in channel 1 of QSFP",
                  "+ module is below low warning level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "rx_power_high_warning_threshold": {
                "doc": [
                  "+ Warning high threshold value of received average optical power. The valid",
                  "value range is 0 to 6.5535, in units of milliwatts. This is a factory preset",
                  "value in DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 6.5535,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "rx2_power_high_warning": {
                "doc": [
                  "+ Flag to indicate received average optical power in channel 2 of QSFP",
                  "+ module exceeds high warning level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "tx1_bias_high_alarm": {
                "doc": [
                  "+ Flag to indicate TX bias current in channel 1 of QSFP",
                  "+ module exceeds high alarm level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "tx_bias_low_warning_threshold": {
                "doc": [
                  "+ Warning low threshold value of TX bias current, ranging from 0 to 131, in",
                  "units of milliamps. This is a factory preset value in DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 131,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "tx_power_low_warning_threshold": {
                "doc": [
                  "+ Warning low threshold value of output power, ranging from 0 to 6.5535, in",
                  "units of milliwatts. This is a factory preset value in DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 6.5535,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "rx_power_low_alarm_threshold": {
                "doc": [
                  "+ Alarm low threshold value of received average optical power. The valid value",
                  "range is 0 to 6.5535, in units of milliwatts. This is a factory preset value in",
                  "DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 6.5535,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "tx3_bias": {
                "doc": [
                  "+ Transceiver TX bias current in channel 3 of QSFP",
                  "+ module, ranging from 0 to 131, in units of milliamps. This value is from DOM",
                  "supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 131,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "vendor_part_number": {
                "doc": [
                  "The vendor's module part number."
                ],
                "type": "string",
                "group": "/Interface/Module Information"
              },
              "temperature_high_warning_threshold": {
                "doc": [
                  "+ Warning high threshold value of internal temperature, ranging from -128 to",
                  "128, in units of Celsius. This is a factory preset value in DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 128,
                  "minReal": -128
                },
                "group": "/Interface/Module Information"
              },
              "tx_bias": {
                "doc": [
                  "+ Transceiver TX bias current, ranging from 0 to 131, in units of milliamps.",
                  "This value is from DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 131,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "tx_bias_high_alarm": {
                "doc": [
                  "+ Flag to indicate TX bias current exceeds high alarm level. This value is from",
                  "DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "temperature_high_warning": {
                "doc": [
                  "+ Flag to indicate internal temperature exceeds high warning level. This value",
                  "is from DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "tx4_bias_low_alarm": {
                "doc": [
                  "+ Flag to indicate TX bias current in channel 4 of QSFP",
                  "+ module is below low alarm level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "rx2_power": {
                "doc": [
                  "+ Transceiver received average optical power in channel 2 of QSFP",
                  "+ module. The valid value range is 0 to 6.5535, in units of milliwatts. This",
                  "value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 6.5535,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "tx_power_low_alarm": {
                "doc": [
                  "+ Flag to indicate output power is below low alarm level. This value is from DOM",
                  "supporting SFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "vcc_low_warning_threshold": {
                "doc": [
                  "+ Warning low threshold value of internal supply voltage, ranging from 0 to",
                  "6.55, in units of Volts. This is a factory preset value in DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 6.55,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "rx2_power_low_warning": {
                "doc": [
                  "+ Flag to indicate received average optical power in channel 2 of QSFP",
                  "+ module is below low warning level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "tx_power": {
                "doc": [
                  "+ Transceiver output power, ranging from 0 to 6.5535, in units of milliwatts.",
                  "This value is from DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 6.5535,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "tx3_bias_high_warning": {
                "doc": [
                  "+ Flag to indicate TX bias current in channel 3 of QSFP",
                  "+ module exceeds high warning level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "tx_bias_high_alarm_threshold": {
                "doc": [
                  "+ Alarm high threshold value of TX bias current, ranging from 0 to 131, in units",
                  "of milliamps. This is a factory preset value in DOM supporting SFP",
                  "+ module."
                ],
                "type": {
                  "type": "real",
                  "maxReal": 131,
                  "minReal": 0
                },
                "group": "/Interface/Module Information"
              },
              "tx4_bias_low_warning": {
                "doc": [
                  "+ Flag to indicate TX bias current in channel 4 of QSFP",
                  "+ module is below low warning level. This value is from DOM supporting QSFP",
                  "+ module."
                ],
                "type": {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                "group": "/Interface/Module Information"
              },
              "vendor_name": {
                "doc": [
                  "The name of the vendor of the module."
                ],
                "type": "string",
                "group": "/Interface/Module Information"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Interface/Module Information"
        },
        "options": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "psk": {
                "doc": [
                  "Required for pre-shared key authentication.  Specifies a pre-shared key for",
                  "authentication that must be identical on both sides of the tunnel."
                ],
                "group": "/Interface/Tunnel Options/Tunnel Options: ipsec_gre only",
                "type": "string"
              },
              "private_key": {
                "doc": [
                  "Optional for certificate authentication.  The name of a PEM file containing the",
                  "private key associated with `certificate`. If `certificate` contains the private",
                  "key, this option may be omitted."
                ],
                "group": "/Interface/Tunnel Options/Tunnel Options: ipsec_gre only",
                "type": "string"
              },
              "key": {
                "doc": [
                  "Optional.  Shorthand to set `in_key` and `out_key` at the same time."
                ],
                "type": "string",
                "group": "/Interface/Tunnel Options"
              },
              "certificate": {
                "doc": [
                  "Required for certificate authentication.  The name of a PEM file containing a",
                  "certificate that will be presented to the peer during authentication."
                ],
                "group": "/Interface/Tunnel Options/Tunnel Options: ipsec_gre only",
                "type": "string"
              },
              "local_ip": {
                "doc": [
                  "The tunnel destination IP that received packets must match.",
                  "",
                  "+ An IPv4 address (not a DNS name), e.g. `192.168.12.3`."
                ],
                "type": {
                  "type": "string",
                  "maxLength": 15
                },
                "group": "/Interface/Tunnel Options"
              },
              "tos": {
                "emptyValue": "0",
                "doc": [
                  "Optional.  The value of the ToS bits to be set on the encapsulating packet.  ToS",
                  "is interpreted as DSCP and ECN bits, ECN part must be zero.  It may also be the",
                  "word `inherit`, in which case the ToS will be copied from the inner packet if it",
                  "is IPv4 or IPv6 (otherwise it will be 0).  The ECN fields are always inherited.",
                  "Default is 0."
                ],
                "type": "string",
                "group": "/Interface/Tunnel Options"
              },
              "peer_cert": {
                "doc": [
                  "Required for certificate authentication.  A string containing the peer's",
                  "certificate in PEM format.  Additionally the host's certificate must be",
                  "specified with the `certificate` option."
                ],
                "group": "/Interface/Tunnel Options/Tunnel Options: ipsec_gre only",
                "type": "string"
              },
              "out_key": {
                "doc": [
                  "Optional.  The key to be set on outgoing packets, one of:",
                  "",
                  "+ `0`.  Packets sent through the tunnel will have no key. This is equivalent to",
                  "specifying no [out_key](Interface.options.out_key) at all.",
                  "+ A 32-bit (for GRE).  The tunnel sends packets only with the specified key.",
                  "+ A positive 24-bit (VXLAN). The tunnel sends packets only with the specified",
                  "key."
                ],
                "type": "string",
                "group": "/Interface/Tunnel Options"
              },
              "in_key": {
                "doc": [
                  "Optional.  The key that received packets must contain, one of:",
                  "",
                  "+ `0`.  The tunnel receives packets with no key or with a key of 0.  This is",
                  "equivalent to specifying no [in_key](Interface.options.in_key) at all.",
                  "+ A 32-bit (for GRE).  The tunnel receives only packets with the specified key.",
                  "+ A positive 24-bit (VXLAN). The tunnel receives only packets with the specified",
                  "key."
                ],
                "type": "string",
                "group": "/Interface/Tunnel Options"
              },
              "df_default": {
                "emptyValue": true,
                "doc": [
                  "Optional.  If enabled, the Don't Fragment bit will be set on tunnel outer",
                  "headers to allow path MTU discovery. Default is enabled; set to `false` to",
                  "disable."
                ],
                "type": "boolean",
                "group": "/Interface/Tunnel Options"
              },
              "ttl": {
                "doc": [
                  "Optional.  The TTL to be set on the encapsulating packet.  It may also be the",
                  "word `inherit`, in which case the TTL will be copied from the inner packet if it",
                  "is IPv4 or IPv6 (otherwise it will be the system default, typically 64).",
                  "Default is the system default TTL."
                ],
                "type": "string",
                "group": "/Interface/Tunnel Options"
              },
              "remote_ip": {
                "doc": [
                  "Required.  The remote tunnel endpoint, one of:",
                  "",
                  "+ An IPv4 address (not a DNS name), e.g. `192.168.0.123`. Only unicast endpoints",
                  "are supported."
                ],
                "type": "string",
                "group": "/Interface/Tunnel Options"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Interface/Tunnel Options"
        }
      },
      "title": "One physical network device in a Port."
    },
    "MCLAG": {
      "columns": {
        "device_priority": {
          "category": "configuration",
          "doc": [
            "Configures MCLAG device priority. The default value is `1`. Device with the",
            "lower value of priority will be the primary in the case of split brain handling."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 15,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 1,
          "group": "/MCLAG/MCLAG Device configuration"
        },
        "split_brain_handling": {
          "category": "configuration",
          "doc": [
            "Configures how MCLAG split-brain is handled. \"one-fragment-active\" means in case",
            "of a split, MCLAG links of primary will be active and secondary will be",
            "disabled. \"dual-active\" means in case of a split, MCLAG links of both primary",
            "and secondary will be active. The default value is `one-fragment-active`."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "one-fragment-active",
                "dual-active"
              ],
              "type": "string"
            },
            "min": 0
          },
          "emptyValue": "one-fragment-active",
          "group": "/MCLAG/MCLAG Device configuration"
        },
        "isl_port": {
          "category": "configuration",
          "doc": [
            "References port to be used as inter switch link."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "uuid",
              "refTable": "Port"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/MCLAG/MCLAG Port configuraiton"
        },
        "keepalive_status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "state": {
                "doc": [
                  "State of the protocol."
                ],
                "type": {
                  "enum": [
                    "init",
                    "disabled",
                    "established",
                    "failure"
                  ],
                  "type": "string"
                },
                "group": "/MCLAG/MCLAG Keepalive status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/MCLAG/MCLAG Keepalive status"
        },
        "isl_statistics": {
          "category": "statistics",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "hello_tx": {
                "doc": [
                  "Number of ISLP hello packets transmitted."
                ],
                "type": "integer",
                "group": "/MCLAG/MCLAG Port statistics"
              },
              "pdu_rx": {
                "doc": [
                  "Number of ISLP PDUs received."
                ],
                "type": "integer",
                "group": "/MCLAG/MCLAG Port statistics"
              },
              "hello_rx": {
                "doc": [
                  "Number of ISLP hello packets received."
                ],
                "type": "integer",
                "group": "/MCLAG/MCLAG Port statistics"
              },
              "pdu_tx": {
                "doc": [
                  "Number of ISLP PDUs transmitted."
                ],
                "type": "integer",
                "group": "/MCLAG/MCLAG Port statistics"
              }
            },
            "key": "string",
            "value": "integer",
            "min": 0
          },
          "ephemeral": true,
          "group": "/MCLAG/MCLAG Port statistics"
        },
        "oper_status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "oper_device_priority": {
                "doc": [
                  "Operational device priority. Determines primary and secondary MCLAG role."
                ],
                "type": "string",
                "group": "/MCLAG/MCLAG Operational status"
              },
              "islp_state": {
                "emptyValue": "out_of_sync",
                "doc": [
                  "ISL protocol state. in_sync means ISLP link is established. out_of_sync means",
                  "ISLP link is not established. Default value is `out_of_sync`."
                ],
                "type": {
                  "enum": [
                    "out_of_sync",
                    "in_sync"
                  ],
                  "type": "string"
                },
                "group": "/MCLAG/MCLAG Operational status"
              },
              "oper_system_id": {
                "doc": [
                  "Operational system id."
                ],
                "type": "string",
                "group": "/MCLAG/MCLAG Operational status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/MCLAG/MCLAG Operational status"
        },
        "keepalive_port": {
          "category": "status",
          "doc": [
            "Specifies L3 port for keepalive [Port](Port)."
          ],
          "type": {
            "max": 1,
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "Port"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/MCLAG/MCLAG Keepalive status"
        },
        "isl_timers": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "hold_time": {
                "emptyValue": 0,
                "doc": [
                  "Configures ISL port-flap hold time in seconds. The default value is `0`."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 3,
                  "type": "integer"
                },
                "group": "/MCLAG/MCLAG ISL timer configuration"
              },
              "timeout": {
                "emptyValue": 3,
                "doc": [
                  "Configures the amount of time to wait for hellos from peer in seconds. The",
                  "default value is `3`."
                ],
                "type": {
                  "minInteger": 2,
                  "maxInteger": 20,
                  "type": "integer"
                },
                "group": "/MCLAG/MCLAG ISL timer configuration"
              },
              "hello_interval": {
                "emptyValue": 1,
                "doc": [
                  "ISLP hello interval in seconds. The default value is `1`."
                ],
                "type": {
                  "minInteger": 1,
                  "maxInteger": 5,
                  "type": "integer"
                },
                "group": "/MCLAG/MCLAG ISL timer configuration"
              }
            },
            "key": "string",
            "value": "integer",
            "min": 0
          },
          "group": "/MCLAG/MCLAG ISL timer configuration"
        },
        "keepalive_vrf": {
          "category": "configuration",
          "doc": [
            "VRF to be used for keepalive routing. If not configured, keepalive functionality",
            "is disabled."
          ],
          "type": {
            "max": 1,
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "VRF"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/MCLAG/MCLAG Keepalive configuration"
        },
        "keepalive_udp_port": {
          "category": "configuration",
          "doc": [
            "UDP port number of peer device. The default value is `7678`."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 1024,
              "maxInteger": 65535,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 7678,
          "group": "/MCLAG/MCLAG Keepalive configuration"
        },
        "keepalive_statistics": {
          "category": "statistics",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "rx": {
                "doc": [
                  "Number of packets received."
                ],
                "type": "integer",
                "group": "/MCLAG/MCLAG Keepalive packet statistics"
              },
              "tx": {
                "doc": [
                  "Number of packets transmitted."
                ],
                "type": "integer",
                "group": "/MCLAG/MCLAG Keepalive packet statistics"
              }
            },
            "key": "string",
            "value": "integer",
            "min": 0
          },
          "ephemeral": true,
          "group": "/MCLAG/MCLAG Keepalive packet statistics"
        },
        "peer_status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "peer_device_priority": {
                "doc": [
                  "Device priority of the peer switch."
                ],
                "type": "string",
                "group": "/MCLAG/MCLAG Peer status"
              },
              "peer_isl_port": {
                "doc": [
                  "Name of the logical port on the peer switch configured as ISL port."
                ],
                "type": "string",
                "group": "/MCLAG/MCLAG Peer status"
              },
              "peer_system_id": {
                "doc": [
                  "System ID of the peer switch."
                ],
                "type": "string",
                "group": "/MCLAG/MCLAG Peer status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/MCLAG/MCLAG Peer status"
        },
        "keepalive_src_ip": {
          "category": "configuration",
          "doc": [
            "IPv4 address of the device. If not configured, keepalive functionality is",
            "disabled."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 45
            },
            "min": 0
          },
          "group": "/MCLAG/MCLAG Keepalive configuration"
        },
        "keepalive_peer_ip": {
          "category": "configuration",
          "doc": [
            "IPv4 address of the peer device. If not configured, keepalive functionality is",
            "disabled."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 45
            },
            "min": 0
          },
          "group": "/MCLAG/MCLAG Keepalive configuration"
        },
        "keepalive_timers": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "timeout": {
                "emptyValue": 90,
                "doc": [
                  "Configures the amount of time to wait for keepalive packets from a peer in",
                  "seconds. The default value is `90`."
                ],
                "type": {
                  "minInteger": 2,
                  "maxInteger": 120,
                  "type": "integer"
                },
                "group": "/MCLAG/MCLAG Keepalive timer configuration"
              },
              "hello_interval": {
                "emptyValue": 30,
                "doc": [
                  "Keepalive hello interval in seconds. The default value is `30`."
                ],
                "type": {
                  "minInteger": 1,
                  "maxInteger": 30,
                  "type": "integer"
                },
                "group": "/MCLAG/MCLAG Keepalive timer configuration"
              }
            },
            "key": "string",
            "value": "integer",
            "min": 0
          },
          "group": "/MCLAG/MCLAG Keepalive timer configuration"
        }
      },
      "isRoot": true,
      "maxRows": 1,
      "title": "MCLAG ISL Port"
    },
    "MCLAG_Remote_Interface": {
      "doc": [
        "Each entry contains the information about a physical interface on the peer",
        "switch which is configured for MCLAG. This information is determined by",
        "exchanging packets over the ISL link between the MLAG switches."
      ],
      "indexes": [
        [
          "name"
        ]
      ],
      "columns": {
        "lacp_partner_system_id": {
          "category": "status",
          "doc": [
            "Peer interface's LACP partner system ID."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string"
            },
            "min": 0
          },
          "group": "/MCLAG_Remote_Interface/partner information"
        },
        "name": {
          "category": "status",
          "mutable": false,
          "doc": [
            "Name of the peer interface."
          ],
          "type": "string",
          "group": "/MCLAG_Remote_Interface/partner information"
        },
        "duplex": {
          "category": "status",
          "doc": [
            "The duplex mode of the physical network link."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "half",
                "full"
              ],
              "type": "string"
            },
            "min": 0
          },
          "group": "/MCLAG_Remote_Interface/partner link status"
        },
        "link_state": {
          "category": "status",
          "doc": [
            "The observed state of the physical network link.  This is ordinarily the link's",
            "carrier status."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "up",
                "down"
              ],
              "type": "string"
            },
            "min": 0
          },
          "group": "/MCLAG_Remote_Interface/partner link status"
        },
        "link_speed": {
          "category": "status",
          "doc": [
            "The negotiated speed of the physical network link in bits per second. Valid",
            "values are positive integers greater than 0."
          ],
          "type": {
            "max": 1,
            "key": "integer",
            "min": 0
          },
          "group": "/MCLAG_Remote_Interface/partner link status"
        },
        "admin_state": {
          "category": "status",
          "doc": [
            "The administrative state of the physical network link."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "up",
                "down"
              ],
              "type": "string"
            },
            "min": 0
          },
          "group": "/MCLAG_Remote_Interface/partner link status"
        },
        "lacp_partner_port_id": {
          "category": "status",
          "doc": [
            "Peer interface's LACP partner port ID."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "integer"
            },
            "min": 0
          },
          "group": "/MCLAG_Remote_Interface/partner information"
        },
        "lacp_partner_state": {
          "category": "status",
          "doc": [
            "LACP partner state."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "up",
                "down"
              ],
              "type": "string"
            },
            "min": 0
          },
          "group": "/MCLAG_Remote_Interface/partner link status"
        },
        "lacp_partner_key": {
          "category": "status",
          "doc": [
            "Peer interface's LACP partner key."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "integer"
            },
            "min": 0
          },
          "group": "/MCLAG_Remote_Interface/partner information"
        }
      },
      "isRoot": true,
      "title": "Remote MCLAG information"
    },
    "Fan": {
      "indexes": [
        [
          "name"
        ]
      ],
      "columns": {
        "status": {
          "category": "status",
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "uninitialized",
                "ok",
                "fault"
              ],
              "type": "string"
            },
            "min": 0
          },
          "ephemeral": true,
          "group": "/Fan/Status"
        },
        "direction": {
          "category": "configuration",
          "type": {
            "key": {
              "enum": [
                "b2f",
                "f2b"
              ],
              "type": "string"
            }
          },
          "group": "/Fan/Status"
        },
        "name": {
          "category": "status",
          "mutable": false,
          "type": "string",
          "group": "/Fan/Core Features"
        },
        "rpm": {
          "category": "status",
          "type": {
            "max": 1,
            "key": {
              "type": "integer"
            },
            "min": 0
          },
          "ephemeral": true,
          "group": "/Fan/Status"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Fan/Common Columns"
        },
        "hw_config": {
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          }
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Fan/Common Columns"
        },
        "speed": {
          "category": "configuration",
          "type": {
            "key": {
              "enum": [
                "slow",
                "normal",
                "medium",
                "fast",
                "max"
              ],
              "type": "string"
            }
          },
          "group": "/Fan/Status"
        }
      },
      "title": "Fans on various subsystems"
    },
    "LED": {
      "indexes": [
        [
          "id"
        ]
      ],
      "columns": {
        "status": {
          "category": "status",
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "uninitialized",
                "ok",
                "fault"
              ],
              "type": "string"
            },
            "min": 0
          },
          "doc": [
            "Status of the LED is the current operational status."
          ],
          "ephemeral": true,
          "group": "/LED/Status"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/LED/Common Columns"
        },
        "state": {
          "category": "configuration",
          "doc": [
            "State of the LED controls the lighting behavior."
          ],
          "type": {
            "key": {
              "enum": [
                "off",
                "on",
                "flashing"
              ],
              "type": "string"
            }
          },
          "group": "/LED/Configuration"
        },
        "hw_config": {
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          }
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/LED/Common Columns"
        },
        "id": {
          "category": "status",
          "mutable": false,
          "doc": [
            "Logical name of the LED."
          ],
          "type": "string",
          "group": "/LED/Configuration"
        }
      },
      "title": "LEDs on various subsystems"
    },
    "Temp_sensor": {
      "indexes": [
        [
          "name"
        ]
      ],
      "columns": {
        "status": {
          "category": "status",
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "uninitialized",
                "normal",
                "min",
                "max",
                "low_critical",
                "critical",
                "fault",
                "emergency"
              ],
              "type": "string"
            },
            "min": 0
          },
          "doc": [
            "Results of evaluation of the current temperature against the sensor's threshold",
            "values."
          ],
          "ephemeral": true,
          "group": "/Temp_sensor/Status"
        },
        "name": {
          "category": "status",
          "mutable": false,
          "type": "string",
          "doc": [
            "Logical name of the temperature sensor, including the subsystem name and numeric",
            "identifier of the temperature sensor."
          ]
        },
        "min": {
          "category": "status",
          "doc": [
            "Historic minimum (since last restart of tempd process), in milidegrees Celcius."
          ],
          "type": "integer",
          "group": "/Temp_sensor/Readings"
        },
        "fan_state": {
          "category": "status",
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "normal",
                "medium",
                "fast",
                "max"
              ],
              "type": "string"
            },
            "min": 0
          },
          "doc": [
            "Recommended minimum fan setting based on current temperature. The fand process",
            "should choose the worst-case sensor fan_state when determining the fan setting",
            "for the subsystem."
          ],
          "ephemeral": true,
          "group": "/Temp_sensor/Status"
        },
        "max": {
          "category": "status",
          "doc": [
            "Historic maximum (since last restart of tempd process), in milidegrees Celcius."
          ],
          "type": "integer",
          "group": "/Temp_sensor/Readings"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Temp_sensor/Common Columns"
        },
        "location": {
          "category": "status",
          "doc": [
            "Descriptive text for the physical location of the temperature sensor relative to",
            "the subsystem."
          ],
          "type": "string"
        },
        "hw_config": {
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          }
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Temp_sensor/Common Columns"
        },
        "temperature": {
          "category": "status",
          "doc": [
            "Current temperature reading, in milidegrees Celcius."
          ],
          "type": "integer",
          "group": "/Temp_sensor/Readings"
        }
      },
      "title": "Temperature sensors"
    },
    "Power_supply": {
      "doc": [
        "Information for a power supply unit (PSU)."
      ],
      "indexes": [
        [
          "name"
        ]
      ],
      "columns": {
        "status": {
          "category": "status",
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "ok",
                "fault_absent",
                "fault_input",
                "fault_output",
                "unknown",
                "unsupported",
                "warning"
              ],
              "type": "string"
            },
            "min": 0
          },
          "ephemeral": true,
          "group": "/Power_supply/Status"
        },
        "statistics": {
          "category": "statistics",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "failures": {
                "doc": [
                  "Number of failures the PSU has experienced since the most recent insertion of",
                  "the PSU and boot of the system.  The number of failures for a PSU will be",
                  "cleared if the PSU is removed from the system or if the system is rebooted.  For",
                  "non removable PSUs, the number of failures will not clear until the system",
                  "reboots.  Failures are any events where power delivery from the PSU did not",
                  "occur when expected.  This includes unsupported PSU types since their power",
                  "delivery is not considered valid even though the PSU itself may not have an",
                  "internal failure. Some examples of failures are over current, invalid input",
                  "power, and unsupported PSU type."
                ],
                "type": {
                  "minInteger": 0,
                  "type": "integer"
                },
                "group": "/Power_supply/Statistics"
              },
              "warnings": {
                "doc": [
                  "Number of warnings the PSU has experienced since the most recent insertion of",
                  "the PSU and boot of the system.  The number of warnings for a PSU will be",
                  "cleared if the PSU is removed from the system or if the system is rebooted.  For",
                  "non removable PSUs, the number of warnings will not clear until the system",
                  "reboots.  Warnings are any events that do not impair the power delivery from the",
                  "PSU but require notification that service may be needed.  Some examples of",
                  "warnings are fan failures and over temperature."
                ],
                "type": {
                  "minInteger": 0,
                  "type": "integer"
                },
                "group": "/Power_supply/Statistics"
              }
            },
            "key": "string",
            "value": {
              "minInteger": 0,
              "type": "integer"
            },
            "min": 0
          },
          "doc": [
            "Various statistics about the PSU."
          ],
          "ephemeral": true,
          "group": "/Power_supply/Statistics"
        },
        "name": {
          "category": "status",
          "mutable": false,
          "type": "string"
        },
        "characteristics": {
          "category": "status",
          "doc": [
            "Electrical characteristics."
          ],
          "type": {
            "max": "unlimited",
            "valueMap": {
              "maximum_power": {
                "doc": [
                  "Total maximum power capacity that can be supplied by the PSU in Watts."
                ],
                "type": "string",
                "group": "/Power_supply/Status"
              },
              "instantaneous_power": {
                "doc": [
                  "Total instantaneous power supplied by the PSU in Watts."
                ],
                "type": "string",
                "group": "/Power_supply/Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Power_supply/Status"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Power_supply/Common Columns"
        },
        "hw_config": {
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          }
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Power_supply/Common Columns"
        },
        "identity": {
          "category": "status",
          "doc": [
            "PSU identification."
          ],
          "type": {
            "max": "unlimited",
            "valueMap": {
              "serial_number": {
                "doc": [
                  "PSU serial number to uniquely identify the PSU."
                ],
                "type": "string",
                "group": "/Power_supply/Status"
              },
              "product_name": {
                "doc": [
                  "PSU product name identification.  This field is used to determine if the PSU is",
                  "supported."
                ],
                "type": "string",
                "group": "/Power_supply/Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Power_supply/Status"
        }
      },
      "title": "Power supplies"
    },
    "Manager": {
      "doc": [
        "Configuration for a database connection to an OpenSwitch database (OVSDB)",
        "client.",
        "",
        "This table primarily configures the OpenSwitch database (`ovsdb-server`), not",
        "the OpenSwitch switch (`ovs-vswitchd`).  The switch does read the table to",
        "determine what connections should be treated as in-band.",
        "",
        "The OpenSwitch database server can initiate and maintain active connections to",
        "remote clients.  It can also listen for database connections."
      ],
      "indexes": [
        [
          "target"
        ]
      ],
      "columns": {
        "max_backoff": {
          "category": "configuration",
          "doc": [
            "Maximum number of milliseconds to wait between connection attempts. Default is",
            "implementation-specific."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 1000,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/Manager/Client Failure Detection and Handling"
        },
        "status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "locks_waiting": {
                "doc": [
                  "Space-separated list of the names of OVSDB locks that the connection is",
                  "currently waiting to acquire.  Omitted if the connection is not waiting for any",
                  "locks."
                ],
                "type": "string",
                "group": "/Manager/Status"
              },
              "locks_lost": {
                "doc": [
                  "Space-separated list of the names of OVSDB locks that the connection has had",
                  "stolen by another OVSDB client.  Omitted if no locks have been stolen from this",
                  "connection."
                ],
                "type": "string",
                "group": "/Manager/Status"
              },
              "bound_port": {
                "doc": [
                  "When [target](Manager.target) is `ptcp:` or `pssl:`, this is the TCP port on",
                  "which the OVSDB server is listening.  (This is is particularly useful when",
                  "[target](Manager.target) specifies a port of 0, allowing the kernel to choose",
                  "any available port.)"
                ],
                "type": "integer",
                "group": "/Manager/Status"
              },
              "last_error": {
                "doc": [
                  "A human-readable description of the last error on the connection to the manager;",
                  "i.e. `strerror(errno)`.  This key will exist only if an error has occurred."
                ],
                "type": "string",
                "group": "/Manager/Status"
              },
              "sec_since_connect": {
                "doc": [
                  "The amount of time since this manager last successfully connected to the",
                  "database (in seconds). Value is empty if manager has never successfully",
                  "connected."
                ],
                "type": {
                  "minInteger": 0,
                  "type": "integer"
                },
                "group": "/Manager/Status"
              },
              "state": {
                "doc": [
                  "The state of the connection to the manager:",
                  "",
                  "+ __`VOID`__:  Connection is disabled.",
                  "+ __`BACKOFF`__:  Attempting to reconnect at an increasing period.",
                  "+ __`CONNECTING`__:  Attempting to connect.",
                  "+ __`ACTIVE`__:  Connected, remote host responsive.",
                  "+ __`IDLE`__:  Connection is idle.  Waiting for response to keep-alive.",
                  "",
                  "These values may change in the future.  They are provided only for human",
                  "consumption."
                ],
                "type": {
                  "enum": [
                    "VOID",
                    "BACKOFF",
                    "CONNECTING",
                    "ACTIVE",
                    "IDLE"
                  ],
                  "type": "string"
                },
                "group": "/Manager/Status"
              },
              "locks_held": {
                "doc": [
                  "Space-separated list of the names of OVSDB locks that the connection holds.",
                  "Omitted if the connection does not hold any locks."
                ],
                "type": "string",
                "group": "/Manager/Status"
              },
              "n_connections": {
                "doc": [
                  "When [target](Manager.target) specifies a connection method that listens for",
                  "inbound connections (e.g. `ptcp:` or `pssl:`) and more than one connection is",
                  "actually active, the value is the number of active connections.  Otherwise, this",
                  "key-value pair is omitted.",
                  "",
                  "When multiple connections are active, status columns and key-value pairs (other",
                  "than this one) report the status of one arbitrarily chosen connection."
                ],
                "type": {
                  "minInteger": 2,
                  "type": "integer"
                },
                "group": "/Manager/Status"
              },
              "sec_since_disconnect": {
                "doc": [
                  "The amount of time since this manager last disconnected from the database (in",
                  "seconds). Value is empty if manager has never disconnected."
                ],
                "type": {
                  "minInteger": 0,
                  "type": "integer"
                },
                "group": "/Manager/Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "ephemeral": true,
          "group": "/Manager/Status"
        },
        "target": {
          "category": "configuration",
          "doc": [
            "Connection method for managers.",
            "",
            "The following connection methods are currently supported:",
            "",
            "+ __`ssl:_ip_`[`:_port_`]__:    The specified SSL _port_ on the host at the",
            "given _ip_, which must be expressed as an IP address (not a DNS name).  The",
            "[ssl](System.ssl) column in the [System](System) table must point to a valid SSL",
            "configuration when this form is used.   If _port_ is not specified, it currently",
            "defaults to 6632.  In the future, the default will change to 6640, which is the",
            "IANA-defined value.   SSL support is an optional feature that is not always",
            "built as part of OpenSwitch.",
            "+ __`tcp:_ip_`[`:_port_`]__:    The specified TCP _port_ on the host at the",
            "given _ip_, which must be expressed as an IP address (not a DNS name), where",
            "_ip_ can be IPv4 or IPv6 address.  If _ip_ is an IPv6 address, wrap it in square",
            "brackets, e.g. `tcp:[::1]:6632`.   If _port_ is not specified, it currently",
            "defaults to 6632.  In the future, the default will change to 6640, which is the",
            "IANA-defined value.",
            "+ __`pssl:`[_port_][`:_ip_`]__:    Listens for SSL connections on the specified",
            "TCP _port_. Specify 0 for _port_ to have the kernel automatically choose an",
            "available port.  If _ip_, which must be expressed as an IP address (not a DNS",
            "name), is specified, then connections are restricted to the specified local IP",
            "address (either IPv4 or IPv6 address).  If _ip_ is an IPv6 address, wrap in",
            "square brackets, e.g. `pssl:6632:[::1]`.  If _ip_ is not specified then it",
            "listens only on IPv4 (but not IPv6) addresses. The [ssl](System.ssl) column in",
            "the [System](System) table must point to a valid SSL configuration when this",
            "form is used.   If _port_ is not specified, it currently defaults to 6632.  In",
            "the future, the default will change to 6640, which is the IANA-defined value.",
            "SSL support is an optional feature that is not always built as part of",
            "OpenSwitch.",
            "+ __`ptcp:`[_port_][`:_ip_`]__:    Listens for connections on the specified TCP",
            "_port_. Specify 0 for _port_ to have the kernel automatically choose an",
            "available port.  If _ip_, which must be expressed as an IP address (not a DNS",
            "name), is specified, then connections are restricted to the specified local IP",
            "address (either IPv4 or IPv6 address).  If _ip_ is an IPv6 address, wrap it in",
            "square brackets, e.g. `ptcp:6632:[::1]`.  If _ip_ is not specified then it",
            "listens only on IPv4 addresses.   If _port_ is not specified, it currently",
            "defaults to 6632.  In the future, the default will change to 6640, which is the",
            "IANA-defined value.",
            "",
            "When multiple managers are configured, the [target](Manager.target) values must",
            "be unique.  Duplicate [target](Manager.target) values yield unspecified results."
          ],
          "type": "string",
          "group": "/Manager/Core Features"
        },
        "connection_mode": {
          "category": "configuration",
          "doc": [
            "If it is specified, this setting must be one of the following strings that",
            "describes how OpenSwitch contacts this OVSDB client over the network:",
            "",
            "+ __`in-band`__:   In this mode, this connection's traffic travels over a bridge",
            "managed by OpenSwitch.  With this setting, OpenSwitch allows traffic to and from",
            "the client regardless of the contents of the OpenFlow flow table.  (Otherwise,",
            "OpenSwitch would never be able to connect to the client, because it did not have",
            "a flow to enable it.)  This is the most common connection mode because it is not",
            "necessary to maintain two independent networks.",
            "+ __`out-of-band`__:   In this mode, the client's traffic uses a control network",
            "separate from that managed by OpenSwitch, that is, OpenSwitch does not use any",
            "of its own network devices to communicate with the client. The control network",
            "must be configured separately, before or after `pswitchd` is started.",
            "",
            "If not specified, the default is implementation-specific."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "in-band",
                "out-of-band"
              ],
              "type": "string"
            },
            "min": 0
          },
          "group": "/Manager/Core Features"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "dscp": {
                "doc": [
                  "The Differentiated Service Code Point (DSCP) is specified using 6 bits in the",
                  "Type of Service (TOS) field in the IP header. DSCP provides a mechanism to",
                  "classify the network traffic and provide Quality of Service (QoS) on IP",
                  "networks.  The DSCP value specified here is used when establishing the",
                  "connection between the manager and the OpenSwitch.  If no value is specified, a",
                  "default value of 48 is chosen.  Valid DSCP values must be in the range 0 to 63."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 63,
                  "type": "integer"
                },
                "group": "/Manager/Connection Parameters"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": [
            "/Manager/Connection Parameters",
            "/Manager/Common Columns"
          ]
        },
        "inactivity_probe": {
          "category": "configuration",
          "doc": [
            "Maximum number of milliseconds of idle time on connection to the client before",
            "sending an inactivity probe message.  If OpenSwitch does not communicate with",
            "the client for the specified number of seconds, it will send a probe.  If a",
            "response is not received for the same additional amount of time, OpenSwitch",
            "assumes the connection has been broken and attempts to reconnect.  Default is",
            "implementation-specific. A value of 0 disables inactivity probes."
          ],
          "type": {
            "max": 1,
            "key": "integer",
            "min": 0
          },
          "group": "/Manager/Client Failure Detection and Handling"
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Manager/Common Columns"
        },
        "is_connected": {
          "category": "status",
          "type": "boolean",
          "doc": [
            "`true` if currently connected to this manager, `false` otherwise."
          ],
          "ephemeral": true,
          "group": "/Manager/Status"
        }
      },
      "title": "OVSDB management connection."
    },
    "SSL": {
      "doc": [
        "SSL configuration for an System."
      ],
      "columns": {
        "certificate": {
          "category": "configuration",
          "doc": [
            "Name of a PEM file containing a certificate, signed by the certificate authority",
            "(CA) used by the controller and manager, that certifies the switch's private",
            "key, identifying a trustworthy switch."
          ],
          "type": "string"
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/SSL/Common Columns"
        },
        "bootstrap_ca_cert": {
          "category": "configuration",
          "doc": [
            "If set to `true`, then OpenSwitch will attempt to obtain the CA certificate from",
            "the controller on its first SSL connection and save it to the named PEM file. If",
            "it is successful, it will immediately drop the connection and reconnect, and",
            "from then on all SSL connections must be authenticated by a certificate signed",
            "by the CA certificate thus obtained.  _This option exposes the SSL connection to",
            "a man-in-the-middle attack obtaining the initial CA certificate._  It may still",
            "be useful for bootstrapping."
          ],
          "type": "boolean"
        },
        "private_key": {
          "category": "configuration",
          "doc": [
            "Name of a PEM file containing the private key used as the switch's identity for",
            "SSL connections to the controller."
          ],
          "type": "string"
        },
        "ca_cert": {
          "category": "configuration",
          "doc": [
            "Name of a PEM file containing the CA certificate used to verify that the switch",
            "is connected to a trustworthy controller."
          ],
          "type": "string"
        }
      },
      "maxRows": 1
    },
    "Radius_Server": {
      "doc": [
        "These radius servers are being used for authenticating when users wants to login",
        "to the box."
      ],
      "indexes": [
        [
          "ip_address"
        ]
      ],
      "columns": {
        "retries": {
          "category": "configuration",
          "doc": [
            "Specifies the number of retries to radius server if there is no response.",
            "Default retry value is 1."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 5,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 1
        },
        "passkey": {
          "category": "configuration",
          "doc": [
            "Specifies the passkey between radius client and radius server for",
            "authentication. Default passkey is testing123-1."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 32
            },
            "min": 0
          },
          "emptyValue": "testing123-1"
        },
        "udp_port": {
          "category": "configuration",
          "doc": [
            "Specifies the udp port number for authentication. Default udp port number for",
            "authentication is 1812."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 65535,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 1812
        },
        "priority": {
          "category": "configuration",
          "doc": [
            "Specifies the order in which radius servers are configured on the switch."
          ],
          "type": {
            "key": {
              "minInteger": 0,
              "maxInteger": 64,
              "type": "integer"
            }
          }
        },
        "timeout": {
          "category": "configuration",
          "doc": [
            "Specifies the timeout between authentication requests to radius server. Default",
            "timeout is 5 seconds."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 1,
              "maxInteger": 60,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 5
        },
        "ip_address": {
          "category": "configuration",
          "mutable": false,
          "type": "string",
          "doc": [
            "IP address of the radius server configured."
          ]
        }
      },
      "title": "Radius server configuration"
    },
    "CLI_Alias": {
      "doc": [
        "Alias configurations for the command line interface."
      ],
      "columns": {
        "alias_name": {
          "category": "configuration",
          "doc": [
            "Shortcut name configured by the user for a set of commands."
          ],
          "type": "string"
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/CLI_Alias/Common Columns"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          }
        },
        "alias_definition": {
          "category": "configuration",
          "doc": [
            "The list of commands to be executed when the shortcut is used. Different",
            "commands can be separated by \";\". Runtime arguments can be specified using $1,",
            "$2 etc. Any extra arguments, will be added at the end of last command. Eg:",
            "Execute the command \"alias mycmd hostname $1; console length $2; console width",
            "$3\" to configure \"mycmd\" as shortcut. On executing \"mycmd Switch1 80 24\", it",
            "will be expanded to \"hostname Switch1; console length 80; console width 24\".",
            "\"mycmd\" will be stored in alias_name\" and \"hostname $1; console length $2;",
            "console width $3\" will be saved in alias_definition."
          ],
          "type": "string"
        }
      },
      "isRoot": true,
      "indexes": [
        [
          "alias_name"
        ]
      ]
    },
    "bufmon": {
      "doc": [
        "Configuration and status of the counters per Capacity Monitoring feature"
      ],
      "columns": {
        "status": {
          "category": "status",
          "doc": [
            "Specifies the status of the counter."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "ok",
                "not-properly-configured",
                "triggered"
              ],
              "type": "string"
            },
            "min": 0
          },
          "group": "/bufmon/Status"
        },
        "name": {
          "category": "status",
          "doc": [
            "Name of the counter as it will be shown in the management systems and will be",
            "referenced by all the interested agents. No spaces should be used in the name."
          ],
          "type": "string",
          "group": "/bufmon/Counter identification"
        },
        "counter_value": {
          "category": "statistics",
          "ephemeral": true,
          "doc": [
            "Last collected value of the counter."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/bufmon/Status"
        },
        "enabled": {
          "category": "configuration",
          "doc": [
            "Specifies whether counter is enabled."
          ],
          "type": "boolean",
          "group": "/bufmon/Configuration"
        },
        "hw_unit_id": {
          "category": "status",
          "doc": [
            "Identifies the ASIC that counter belongs to."
          ],
          "type": "integer",
          "group": "/bufmon/Counter identification"
        },
        "counter_vendor_specific_info": {
          "category": "status",
          "doc": [
            "Contains any information that might help ASIC specific driver to identify the",
            "counter. Both keys and values are driver and ASIC specific."
          ],
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/bufmon/Counter identification"
        },
        "trigger_threshold": {
          "category": "configuration",
          "doc": [
            "Specifies counter specific threshold that would trigger collection."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/bufmon/Configuration"
        }
      },
      "isRoot": true,
      "indexes": [
        [
          "hw_unit_id",
          "name"
        ]
      ]
    },
    "DHCP_Server": {
      "doc": [
        "DHCP Server configuration."
      ],
      "columns": {
        "matches": {
          "category": "configuration",
          "doc": [
            "Matching incoming DHCP options."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "DHCPSrv_Match"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/DHCP_Server/Configuration"
        },
        "static_hosts": {
          "category": "configuration",
          "doc": [
            "Static leases."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "DHCPSrv_Static_Host"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/DHCP_Server/Configuration"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          }
        },
        "bootp": {
          "category": "configuration",
          "doc": [
            "Key-value pairs that specifies BOOTP options for the DHCP clients."
          ],
          "type": {
            "max": "unlimited",
            "valueMap": {
              "match tag": {
                "emptyValue": "no_matching_tag",
                "doc": [
                  "The filename is keyed by match tag. If no key is specified, default key is",
                  "no_matching_tag."
                ],
                "type": "string",
                "group": "/DHCP_Server/Configuration/BOOTP Options Configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/DHCP_Server/Configuration/BOOTP Options Configuration"
        },
        "ranges": {
          "category": "configuration",
          "doc": [
            "Dynamic IP address ranges."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "DHCPSrv_Range"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/DHCP_Server/Configuration"
        },
        "dhcp_options": {
          "category": "configuration",
          "doc": [
            "DHCP options settings."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "DHCPSrv_Option"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/DHCP_Server/Configuration"
        }
      }
    },
    "DHCPSrv_Range": {
      "doc": [
        "Dynamic IP address ranges configuration of the DHCP server."
      ],
      "columns": {
        "is_static": {
          "category": "configuration",
          "doc": [
            "Set this value to `true` to assign static IP addresses to DHCP clients that have",
            "static host configuration. If the value is set to `false`, then the IP addresses",
            "in this range would be use for dynamic allocation. If not specifed, the IP",
            "address range would be used for dynamic allocation."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false
        },
        "name": {
          "category": "configuration",
          "mutable": false,
          "type": "string",
          "doc": [
            "Identifier for DHCP Server IP address range configuration. This has to be unique",
            "across all DHCP ranges and across all VRFs."
          ]
        },
        "start_ip_address": {
          "category": "configuration",
          "doc": [
            "Specifies the start IPv4/IPv6 address of the dynamic IP address range."
          ],
          "type": {
            "key": {
              "type": "string",
              "maxLength": 45
            }
          }
        },
        "set_tag": {
          "category": "configuration",
          "doc": [
            "Sets an alphanumeric label that marks the network so that dhcp options would be",
            "specified on a per-network basis."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string"
            },
            "min": 0
          }
        },
        "broadcast": {
          "category": "configuration",
          "doc": [
            "This is used only in IPv4 address ranges configuration. Specifies the broadcast",
            "address that would be used for the assigned IP addresses in this range and this",
            "would be sent to DHCP clients. If not specified, broadcast address of the switch",
            "interface that received the DHCP request would be used."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 45
            },
            "min": 0
          }
        },
        "netmask": {
          "category": "configuration",
          "doc": [
            "This is used only in IPv4 address ranges configuration. Specifies the netmask",
            "that would be used for the assigned IP addresses in this range and this would be",
            "sent to DHCP clients. If end ip address is not configured for this range, then",
            "end ip address would be chosen based on the netmask. If netmask is not",
            "specified, then netmask of the switch interface that received the DHCP request",
            "would be used."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 15
            },
            "min": 0
          }
        },
        "lease_duration": {
          "category": "configuration",
          "doc": [
            "Specifies the lease expiry time in minutes. If not specified, default value of",
            "one hour (60) would be used."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 60
        },
        "constructor": {
          "category": "configuration",
          "doc": [
            "This is used only in IPv6 address ranges configuration. Specifies the interface",
            "whose IP address would be used to calculate the end IP address for this range.",
            "This is used when end ip address is not specified."
          ],
          "type": {
            "max": 1,
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "Port"
            },
            "min": 0
          },
          "relationship": "reference"
        },
        "prefix_len": {
          "category": "configuration",
          "doc": [
            "This is used only in IPv6 address ranges configuration. Specifies the prefix",
            "length that would be used for the assigned IPv6 addresses. If not specifed,",
            "default value of 64 would be used."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 64,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 64
        },
        "match_tags": {
          "category": "configuration",
          "doc": [
            "Specifies the list of the tags that would be matched for the incoming DHCP",
            "request on the interfaces whose IP addresses are in the configured range."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "string"
            },
            "min": 0
          }
        },
        "end_ip_address": {
          "category": "configuration",
          "doc": [
            "Specifies the end IPv4/IPv6 address of the dynamic IP address range. If not",
            "specifed, then for IPv4 address family - end ip address would be calculated",
            "based on the configured netmask for this range or based on the netmask of the",
            "interface that received the DHCP request and for IPv6 family - end ip address",
            "would be calculated based on the constructor template configuration."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 45
            },
            "min": 0
          }
        }
      },
      "indexes": [
        [
          "name"
        ]
      ]
    },
    "DHCPSrv_Static_Host": {
      "doc": [
        "Static leases configured by the user."
      ],
      "columns": {
        "set_tags": {
          "category": "configuration",
          "doc": [
            "Specifies the list of tags associated with the DHCP request. When a DHCP request",
            "from the specific DHCP client is received, the list of configured tags would be",
            "set and used to selectively send DHCP options for the client."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "string"
            },
            "min": 0
          }
        },
        "client_hostname": {
          "category": "configuration",
          "doc": [
            "Specifies the client hostname of the DHCP client to which the configured static",
            "IP address would be assigned."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string"
            },
            "min": 0
          }
        },
        "mac_addresses": {
          "category": "configuration",
          "doc": [
            "Specifies the list of MAC addresses of the DHCP hosts to which the static IP",
            "address would be assigned. If more than one MAC addresses are specified, it",
            "would work reliably only if one MAC address is active at a time."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "minLength": 17,
              "type": "string",
              "maxLength": 17
            },
            "min": 0
          }
        },
        "lease_duration": {
          "category": "configuration",
          "doc": [
            "Specifies the lease expiry time in minutes. If not specified, default value of",
            "one hour (60) would be used."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 60
        },
        "client_id": {
          "category": "configuration",
          "doc": [
            "Specifies the client id of the DHCP client to which the configured static IP",
            "address would be assigned,"
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string"
            },
            "min": 0
          }
        },
        "ip_address": {
          "category": "configuration",
          "doc": [
            "Specifies the static IP address that should be assigned to the specific",
            "host.This ip address may contain an IPv4 address or an IPv6 address, or both."
          ],
          "type": {
            "key": {
              "type": "string",
              "maxLength": 45
            }
          }
        }
      },
      "indexes": [
        [
          "ip_address"
        ]
      ]
    },
    "DHCPSrv_Option": {
      "doc": [
        "Configuration to specify extra options (other than standard options) that would",
        "be sent to the DHCP clients."
      ],
      "columns": {
        "option_number": {
          "category": "configuration",
          "doc": [
            "Specifies the number of the extra option that should be sent to the DHCP",
            "clients. The option number would be ignored if option name is specified."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "integer"
            },
            "min": 0
          }
        },
        "option_name": {
          "category": "configuration",
          "doc": [
            "Specifies the name of the extra option that should be sent to the DHCP clients."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string"
            },
            "min": 0
          }
        },
        "match_tags": {
          "category": "configuration",
          "doc": [
            "The option and option value specified in the configuration would be sent only if",
            "the DHCP request from the client matches all the tags specified in this list."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "string"
            },
            "min": 0
          }
        },
        "option_value": {
          "category": "configuration",
          "doc": [
            "Specifies the value of the extra option that should be sent to the DHCP clients."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string"
            },
            "min": 0
          }
        },
        "ipv6": {
          "category": "configuration",
          "doc": [
            "Set this value to `true` if the configured option is for IPv6 and set to `false`",
            "for IPv4 option. If not specifed, the configured option would be used for IPv4."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false
        }
      }
    },
    "DHCPSrv_Match": {
      "doc": [
        "Configuration to set tags for the incoming DHCP requests based on the options",
        "and its value sent by the clients."
      ],
      "columns": {
        "option_number": {
          "category": "configuration",
          "doc": [
            "Specifies the number of the extra option that should be sent by the client to",
            "set the configured tag for DHCP requests. The option number would be ignored if",
            "option name is specified."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "integer"
            },
            "min": 0
          }
        },
        "option_name": {
          "category": "configuration",
          "doc": [
            "Specifies the name of the option that should be sent by the client to set the",
            "configured tag for DHCP requests."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string"
            },
            "min": 0
          }
        },
        "option_value": {
          "category": "configuration",
          "doc": [
            "Specifies the value of the option that should be sent by the client to set the",
            "configured tag for DHCP requests. If the value is not specified, then the tag",
            "would be set for any value of the option."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string"
            },
            "min": 0
          }
        },
        "set_tag": {
          "category": "configuration",
          "doc": [
            "Specifies the name of the tag that would be set if the incoming DHCP request has",
            "the configured option and the value."
          ],
          "type": {
            "key": {
              "type": "string"
            }
          }
        }
      }
    },
    "Logical_Switch": {
      "doc": [
        "Configuration for identifying overlay networks associated with bridges."
      ],
      "columns": {
        "tunnel_key": {
          "category": "status",
          "doc": [
            "Tunnel key used in the overlay. For VXLAN, this is the VNI."
          ],
          "type": {
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            }
          }
        },
        "bridge": {
          "category": "status",
          "doc": [
            "Reference to a [Bridge](Bridge) participating in the overlay."
          ],
          "type": {
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "Bridge"
            }
          },
          "relationship": "m:1"
        },
        "from": {
          "category": "configuration",
          "doc": [
            "The entity managing the overlay."
          ],
          "type": {
            "key": {
              "enum": [
                "hw-vtep"
              ],
              "type": "string"
            }
          }
        },
        "name": {
          "category": "status",
          "mutable": false,
          "type": "string",
          "doc": [
            "Name of the overlay network."
          ]
        },
        "description": {
          "category": "status",
          "doc": [
            "Description of the overlay network."
          ],
          "type": "string"
        }
      },
      "isRoot": true,
      "indexes": [
        [
          "bridge",
          "tunnel_key"
        ]
      ]
    },
    "MAC": {
      "doc": [
        "Configuration for consolidated MAC table which can potentially be learnt from",
        "ASIC, from the hw-vtep controller or statically configured."
      ],
      "columns": {
        "status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "no_memory": {
                "doc": [
                  "Memory exhaustion"
                ],
                "type": "string",
                "group": "/MAC/status"
              },
              "ok": {
                "doc": [
                  "Properly configured"
                ],
                "type": "string",
                "group": "/MAC/status"
              },
              "invalid": {
                "doc": [
                  "Invalid parameters"
                ],
                "type": "string",
                "group": "/MAC/status"
              },
              "error": {
                "doc": [
                  "Unspecified error."
                ],
                "type": "string",
                "group": "/MAC/status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/MAC/status"
        },
        "bridge": {
          "category": "status",
          "doc": [
            "Specifies the bridge [Bridge](Bridge) on which this MAC address is associated."
          ],
          "type": {
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "Bridge"
            }
          },
          "relationship": "m:1"
        },
        "from": {
          "category": "status",
          "doc": [
            "This specifies whether this MAC address has been added by the hw-vtep controller",
            "or dynamically learnt from the ASIC."
          ],
          "type": {
            "key": {
              "enum": [
                "hw-vtep",
                "dynamic"
              ],
              "type": "string"
            }
          }
        },
        "vlan": {
          "category": "status",
          "doc": [
            "VLAN associated with MAC address."
          ],
          "type": {
            "key": {
              "minInteger": 1,
              "maxInteger": 4094,
              "type": "integer"
            }
          }
        },
        "mac_addr": {
          "category": "status",
          "doc": [
            "MAC address."
          ],
          "type": {
            "key": {
              "minLength": 17,
              "type": "string",
              "maxLength": 17
            }
          }
        },
        "tunnel_key": {
          "category": "status",
          "doc": [
            "If this MAC address is learnt from the tunnel port, then the tunnel_key will be",
            "populated/configured. Otherwise, for static entries not having tunnel as port,",
            "this column should not be populated."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          }
        },
        "expiry_time": {
          "category": "status",
          "doc": [
            "POSIX Time at which this MAC entry expires."
          ],
          "type": "integer"
        },
        "port": {
          "category": "status",
          "doc": [
            "Specifies the port [Port](Port) on which this MAC address is associated."
          ],
          "type": {
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "Port"
            }
          },
          "relationship": "m:1"
        }
      },
      "isRoot": true,
      "indexes": [
        [
          "bridge",
          "vlan",
          "from",
          "mac_addr"
        ]
      ]
    },
    "sFlow": {
      "doc": [
        "A set of sFlow(R) configurations.  sFlow is a protocol for remote monitoring of",
        "switches."
      ],
      "columns": {
        "sampling_per_speed": {
          "category": "configuration",
          "doc": [
            "The sampling rate can be configured per interface-speed (in Mbps) which means",
            "the rate will be applied only for interfaces that match the speed. For example,",
            "`sflow sampling 1024 1G` means a sampling rate of 1024 is applied to all the",
            "1Gig interfaces on the system. If interface-speed is not specified, the global",
            "rate is applied on the interface."
          ],
          "type": {
            "max": "unlimited",
            "valueMap": {
              "40G": {
                "doc": [
                  "Sampling rate for the 40 Gigabit interfaces."
                ],
                "type": "integer"
              },
              "100G": {
                "doc": [
                  "Sampling rate for the 100 Gigabit interfaces."
                ],
                "type": "integer"
              },
              "10G": {
                "doc": [
                  "Sampling rate for the 10 Gigabit interfaces."
                ],
                "type": "integer"
              },
              "1G": {
                "doc": [
                  "Sampling rate for the 1 Gigabit interfaces."
                ],
                "type": "integer"
              }
            },
            "key": "string",
            "value": "integer",
            "min": 0
          }
        },
        "statistics": {
          "category": "statistics",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "num_sampled_pkts": {
                "doc": [
                  "Total number of sampled packets sent to the collector."
                ],
                "type": "string"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "ephemeral": true,
          "doc": [
            "Key value pairs that has sampling statistics."
          ]
        },
        "name": {
          "category": "configuration",
          "mutable": false,
          "type": "string",
          "doc": [
            "sFlow identifier for the configuration. Should be alphanumeric."
          ]
        },
        "max_datagram": {
          "category": "configuration",
          "doc": [
            "Maximum number of bytes that will be send in the sflow datagram. If not",
            "specified, the default is 1400 bytes."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 1400
        },
        "agent": {
          "category": "configuration",
          "doc": [
            "Name of the network device whose IP address should be reported as the ``agent",
            "address'' to collectors.  If not specified, the agent IP is derived from the",
            "first interface in alphabetical order."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string"
            },
            "min": 0
          }
        },
        "sampling": {
          "category": "configuration",
          "doc": [
            "Specifies the rate at which packets should be sampled and sent to the collector.",
            "If not specified, rate defaults to 4096, which means one out of 4096 packets, on",
            "average, will be sent to the collector."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 4096
        },
        "header": {
          "category": "configuration",
          "doc": [
            "Number of bytes of a sampled packet to send to the collector. If not specified,",
            "the default is 128 bytes."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 128
        },
        "agent_addr_family": {
          "category": "configuration",
          "doc": [
            "Address type of agent address reported. If agent interface has both IPv4 and",
            "IPv6 address configured, then this column selects which address will be used.",
            "Defaults to IPv4."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "IPv4",
                "IPv6"
              ],
              "type": "string"
            },
            "min": 0
          },
          "emptyValue": "IPv4"
        },
        "polling": {
          "category": "configuration",
          "doc": [
            "Specifies the interval at which counter statistics are send to the collector. If",
            "not specified, interval defaults to 30 seconds"
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 30
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          }
        },
        "targets": {
          "category": "configuration",
          "doc": [
            "sFlow collectors in the form `_ip_:_port_`. Port defaults to 6343 if not",
            "specified. Can have multiple collectors. Atleast one target has to be configured",
            "for sflow to be enabled. Collectors can only be reached over vrf_default."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "string"
            },
            "min": 0
          }
        }
      },
      "isRoot": true,
      "indexes": [
        [
          "name"
        ]
      ]
    },
    "QoS_DSCP_Map_Entry": {
      "doc": [
        "Contains DSCP map entries used by QoS Trust Mode. It associates each code point",
        "to local_priority (required), and (optionally), priority code point, color and",
        "description."
      ],
      "indexes": [
        [
          "code_point"
        ]
      ],
      "columns": {
        "description": {
          "category": "configuration",
          "doc": [
            "Used for customer documentation."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 64
            },
            "min": 0
          },
          "group": "/QoS_DSCP_Map_Entry/Configuration"
        },
        "color": {
          "category": "configuration",
          "doc": [
            "It may be used later in the pipeline in packet-drop decision points. The default",
            "is 'green'."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "green",
                "yellow",
                "red"
              ],
              "type": "string"
            },
            "min": 0
          },
          "emptyValue": "green",
          "group": "/QoS_DSCP_Map_Entry/Configuration"
        },
        "code_point": {
          "category": "configuration",
          "mutable": false,
          "doc": [
            "The identifier for an entry in the DSCP map that represents the Differentiated",
            "Services Code Point (DSCP) value for this entry."
          ],
          "type": {
            "key": {
              "minInteger": 0,
              "maxInteger": 63,
              "type": "integer"
            }
          },
          "group": "/QoS_DSCP_Map_Entry/Configuration"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/QoS_DSCP_Map_Entry/Common Columns"
        },
        "priority_code_point": {
          "category": "configuration",
          "doc": [
            "The 802.1Q priority that will be assigned to the packet. If the packet is",
            "transmitted with a VLAN tag, this value will be in the Priority Code Point",
            "field. If this value is not specified, the default behavior is that the priority",
            "of the packet will not be changed."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 7,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/QoS_DSCP_Map_Entry/Configuration"
        },
        "local_priority": {
          "category": "configuration",
          "doc": [
            "This is a switch internal meta-data value that will be associated with the",
            "packet. This value will be used later to select the egress queue for the packet."
          ],
          "type": {
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            }
          },
          "group": "/QoS_DSCP_Map_Entry/Configuration"
        },
        "hw_defaults": {
          "category": "status",
          "mutable": false,
          "type": {
            "max": "unlimited",
            "valueMap": {
              "default_local_priority": {
                "doc": [
                  "When missing, the default local_priority is obtained from the",
                  "[hw_defaults](QoS_DSCP_Map_Entry.hw_defaults) of the",
                  "[QoS_COS_Map_Entry](QoS_COS_Map_Entry) row indexed by the top 3-bits of this",
                  "row's code_point (i.e. class selector bits cs0 through cs7)."
                ],
                "type": "string",
                "group": "/QoS_DSCP_Map_Entry/Hardware Default"
              },
              "default_priority_code_point": {
                "doc": [
                  "When missing, the default is not to remark packets' 802.1Q priority."
                ],
                "type": "string",
                "group": "/QoS_DSCP_Map_Entry/Hardware Default"
              },
              "default_color": {
                "emptyValue": "green",
                "doc": [
                  "When missing, the default is 'green'."
                ],
                "type": "string",
                "group": "/QoS_DSCP_Map_Entry/Hardware Default"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/QoS_DSCP_Map_Entry/Hardware Default"
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/QoS_DSCP_Map_Entry/Common Columns"
        }
      },
      "maxRows": 64,
      "title": "Quality of Service Differentiated Services Code Point Map"
    },
    "QoS_COS_Map_Entry": {
      "doc": [
        "Contains COS map entries used by QoS Trust Mode. It associates each priority to",
        "local_priority (required), and (optionally), color and description."
      ],
      "indexes": [
        [
          "code_point"
        ]
      ],
      "columns": {
        "description": {
          "category": "configuration",
          "doc": [
            "Used for customer documentation."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 64
            },
            "min": 0
          },
          "group": "/QoS_COS_Map_Entry/Configuration"
        },
        "color": {
          "category": "configuration",
          "doc": [
            "It may be used later in the pipeline in packet-drop decision points. The default",
            "is 'green'."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "green",
                "yellow",
                "red"
              ],
              "type": "string"
            },
            "min": 0
          },
          "emptyValue": "green",
          "group": "/QoS_COS_Map_Entry/Configuration"
        },
        "code_point": {
          "category": "configuration",
          "mutable": false,
          "doc": [
            "The identifier for an entry in the COS map that is the 802.1Q priority code",
            "point for this entry."
          ],
          "type": {
            "key": {
              "minInteger": 0,
              "maxInteger": 7,
              "type": "integer"
            }
          },
          "group": "/QoS_COS_Map_Entry/Configuration"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/QoS_COS_Map_Entry/Common Columns"
        },
        "local_priority": {
          "category": "configuration",
          "doc": [
            "This is a switch internal meta-data value that will be associated with the",
            "packet. This value will be used later to select the egress queue for the packet."
          ],
          "type": {
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            }
          },
          "group": "/QoS_COS_Map_Entry/Configuration"
        },
        "hw_defaults": {
          "category": "status",
          "mutable": false,
          "type": {
            "max": "unlimited",
            "valueMap": {
              "default_local_priority": {
                "doc": [
                  "When missing, the default is the 802.1Q (Annex I) Traffic Type assignment for",
                  "this row's Priority Code Point:",
                  "",
                  "+code_point 0 (Traffic Type BE) local_priority=1 +code_point 1 (Traffic Type BK)",
                  "local_priority=0 +code_point 2 (Traffic Type EE) local_priority=2 +code_point 3",
                  "(Traffic Type CA) local_priority=3 +code_point 4 (Traffic Type VI)",
                  "local_priority=4 +code_point 5 (Traffic Type VO) local_priority=5 +code_point 6",
                  "(Traffic Type IC) local_priority=6 +code_point 7 (Traffic Type NC)",
                  "local_priority=7"
                ],
                "type": "string",
                "group": "/QoS_COS_Map_Entry/Hardware Default"
              },
              "default_color": {
                "emptyValue": "green",
                "doc": [
                  "When missing, the default is 'green'."
                ],
                "type": "string",
                "group": "/QoS_COS_Map_Entry/Hardware Default"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/QoS_COS_Map_Entry/Hardware Default"
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/QoS_COS_Map_Entry/Common Columns"
        }
      },
      "maxRows": 8,
      "title": "Quality of Service Class of Service Map"
    },
    "Q_Profile": {
      "doc": [
        "Used to specify named profiles of queue configuration. Ports use a queue profile",
        "to configure their packet queue settings."
      ],
      "indexes": [
        [
          "name"
        ]
      ],
      "columns": {
        "q_profile_entries": {
          "category": "configuration",
          "group": "/Q_Profile/Configuration",
          "relationship": "1:m",
          "doc": [
            "Configuration parameters for individual queues.",
            "",
            "Queues are numbered in *priority order*, with zero being the lowest priority.",
            "The maximum number of queues is hardware dependent."
          ],
          "keyname": "queue_number",
          "type": {
            "max": "unlimited",
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "value": {
              "type": "uuid",
              "refTable": "Q_Profile_Entry"
            },
            "min": 0
          }
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Q_Profile/Common Columns"
        },
        "hw_default": {
          "category": "status",
          "mutable": false,
          "doc": [
            "When true, this row contains the hardware default queue profile.",
            "",
            "The default queue profile will be 8 queues when any of the following conditions",
            "occur:",
            "",
            "+No row in this table has hw_default true +More than one row in this table has",
            "hw_default true +Any [Q_Profile_Entry](Q_Profile_Entry) rows referenced do not",
            "have their hw_default true"
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "group": "/Q_Profile/Hardware Default"
        },
        "name": {
          "category": "configuration",
          "mutable": false,
          "doc": [
            "There must be a user-defined name of the schedule profile."
          ],
          "type": {
            "key": {
              "type": "string",
              "maxLength": 64
            }
          },
          "group": "/Q_Profile/Configuration"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Q_Profile/Common Columns"
        }
      },
      "isRoot": true,
      "title": "Quality of Service Queue Profile"
    },
    "Q_Profile_Entry": {
      "doc": [
        "Contains configuration parameters for one queue of one profile."
      ],
      "columns": {
        "local_priorities": {
          "category": "configuration",
          "doc": [
            "This essential parameter specifies one or more local-priority(s) that are",
            "assigned to this queue.  Packets' local-priority meta-data is initially assigned",
            "by the port's QoS Trust Mode  (see [Port](Port) qos_config).  If missing, the",
            "queue is not used."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/Q_Profile_Entry/Configuration"
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Q_Profile_Entry/Common Columns"
        },
        "hw_default": {
          "category": "status",
          "mutable": false,
          "doc": [
            "When true, this row contains the hardware default queue profile parameters for",
            "this queue."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "group": "/Q_Profile_Entry/Hardware Default"
        },
        "description": {
          "category": "configuration",
          "doc": [
            "Used for documentation of these queue configuration parameters."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 64
            },
            "min": 0
          },
          "group": "/Q_Profile_Entry/Configuration"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Q_Profile_Entry/Common Columns"
        }
      },
      "title": "Q Profile Entry"
    },
    "QoS": {
      "doc": [
        "Used to specify named profiles of scheduling configuration. Ports use a schedule",
        "profile to configure their packet queue servicing behavior."
      ],
      "indexes": [
        [
          "name"
        ]
      ],
      "columns": {
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/QoS/Common Columns"
        },
        "hw_default": {
          "category": "status",
          "mutable": false,
          "doc": [
            "When true, this row signifies the hardware default schedule profile.",
            "",
            "Default schedule profile is \"Strict Priority\" when any of the following occur:",
            "",
            "+No row in this table has hw_default true +More than one row in this table has",
            "hw_default true +Any [Queue](Queue) rows referenced do not have their hw_default",
            "true"
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "group": "/QoS/Hardware Default"
        },
        "queues": {
          "category": "configuration",
          "group": "/QoS/Configuration",
          "relationship": "1:m",
          "doc": [
            "Schedule parameters for individual queues.",
            "",
            "Queues are numbered in *priority order*, with zero being the lowest priority.",
            "The maximum number of queues is hardware dependent."
          ],
          "keyname": "queue_number",
          "type": {
            "max": "unlimited",
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "value": {
              "type": "uuid",
              "refTable": "Queue"
            },
            "min": 0
          }
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/QoS/Common Columns"
        },
        "name": {
          "category": "configuration",
          "mutable": false,
          "doc": [
            "There must be a user-defined name of the schedule profile."
          ],
          "type": {
            "key": {
              "type": "string",
              "maxLength": 64
            }
          },
          "group": "/QoS/Configuration"
        }
      },
      "isRoot": true,
      "title": "Quality of Service Schedule Profile"
    },
    "Queue": {
      "doc": [
        "Contains scheduling parameters for one queue of one profile."
      ],
      "columns": {
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Queue/Common Columns"
        },
        "hw_default": {
          "category": "status",
          "mutable": false,
          "doc": [
            "When true, this row contains the hardware default schedule profile parameters",
            "for this queue."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "group": "/Queue/Hardware Default"
        },
        "algorithm": {
          "category": "configuration",
          "doc": [
            "This parameter selects the scheduling behavior of the queue:",
            "",
            "`strict` - Strict Priority will service all packets in the queue before any",
            "packets in lower numbered queues as long as there are no packets in any higher",
            "number queue.",
            "",
            "`dwrr` - Deficit Weight Round Robin will apportion available bandwidth amongst",
            "all non-empty dwrr queues in relation to their queue weights.",
            "",
            "If this parameter is missing, it is assumed to be 'strict'."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "strict",
                "dwrr"
              ],
              "type": "string"
            },
            "min": 0
          },
          "emptyValue": "strict",
          "group": "/Queue/Configuration"
        },
        "weight": {
          "category": "configuration",
          "doc": [
            "The weight value for this queue. The maximum weight is hardware dependent."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 1,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/Queue/Configuration"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Queue/Common Columns"
        }
      },
      "title": "Queue Schedule Parameters"
    },
    "NTP_Association": {
      "doc": [
        "NTP Client Configuration info related to configured NTP servers and their status",
        "info.`https://www.ietf.org/rfc/rfc5907.txt`"
      ],
      "columns": {
        "key_id": {
          "category": "configuration",
          "doc": [
            "Key id is used if NTP client wants to connect to an authenticated association.",
            "Key id is not used when using an unauthenticated association."
          ],
          "type": {
            "max": 1,
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "NTP_Key"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/NTP_Association/NTP Association Configuration"
        },
        "address": {
          "category": "configuration",
          "mutable": false,
          "doc": [
            "FQDN or ip address for the association."
          ],
          "type": {
            "key": {
              "type": "string",
              "maxLength": 57
            }
          },
          "group": "/NTP_Association/NTP Association Configuration"
        },
        "association_status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "network_delay": {
                "doc": [
                  "Provides round trip delay (in milliseconds) between the switch and the remote",
                  "peer or server."
                ],
                "type": "string",
                "group": "/NTP_Association/NTP Association Status"
              },
              "jitter": {
                "doc": [
                  "Provides jitter (in milliseconds) in the time reported for that remote peer or",
                  "server."
                ],
                "type": "string",
                "group": "/NTP_Association/NTP Association Status"
              },
              "remote_peer_address": {
                "doc": [
                  "Provides the remote peer's ip address being synced to. If FQDN is used as",
                  "\"address\" during config, then this would be the ip address."
                ],
                "type": "string",
                "group": "/NTP_Association/NTP Association Status"
              },
              "peer_type": {
                "doc": [
                  "Provides information about the remote peer type."
                ],
                "type": {
                  "enum": [
                    "uni_or_many_cast",
                    "bcast_or_mcast_client",
                    "local_ref_clock",
                    "symm_peer",
                    "manycast_server",
                    "bcast_server",
                    "mcast_server"
                  ],
                  "type": "string"
                },
                "group": "/NTP_Association/NTP Association Status"
              },
              "reference_time": {
                "doc": [
                  "Provides the time (in \"day, month date year hh:mm\" format) when the server clock",
                  "of refid was last adjusted. Eg format Wed, Jan 13 2016  7:56:26.126"
                ],
                "type": "string",
                "group": "/NTP_Association/NTP Association Status"
              },
              "associd": {
                "doc": [
                  "Provides the Association ID mapped for this association. This is an Internal ID."
                ],
                "type": "string",
                "group": "/NTP_Association/NTP Association Status"
              },
              "reachability_register": {
                "doc": [
                  "Provides status about the last consequetive polls for this peer. (1 bit per",
                  "poll)"
                ],
                "type": "string",
                "group": "/NTP_Association/NTP Association Status"
              },
              "remote_peer_ref_id": {
                "doc": [
                  "Provides the reference id used by the remote peer. This can be either another",
                  "server or stratum 1 devices like .GPS. .USNO. etc. For more info, refer to",
                  "`http://nlug.ml1.co.uk/2012/01/ntpq-p-output/831`"
                ],
                "type": "string",
                "group": "/NTP_Association/NTP Association Status"
              },
              "last_polled": {
                "doc": [
                  "Provides information about when the peer was last polled. (in seconds ago OR 'h'",
                  "hours ago OR 'd' days ago). Example 6h, 5d, 5 (this refers to seconds)."
                ],
                "type": "string",
                "group": "/NTP_Association/NTP Association Status"
              },
              "polling_interval": {
                "doc": [
                  "Provides the polling frequency (in seconds) used for this peer."
                ],
                "type": "string",
                "group": "/NTP_Association/NTP Association Status"
              },
              "root_dispersion": {
                "doc": [
                  "Provides maximum error relative time (in seconds) to primary reference clock."
                ],
                "type": "string",
                "group": "/NTP_Association/NTP Association Status"
              },
              "stratum": {
                "doc": [
                  "Provides the remote peer or server stratum level. Range between 1-16."
                ],
                "type": {
                  "minInteger": 1,
                  "maxInteger": 16,
                  "type": "integer"
                },
                "group": "/NTP_Association/NTP Association Status"
              },
              "peer_status_word": {
                "doc": [
                  "Provides information about the peer status. Refer to link for more info",
                  "`https://www.eecis.udel.edu/~mills/ntp/html/decode.html#peer`"
                ],
                "type": {
                  "enum": [
                    "reject",
                    "falsetick",
                    "excess",
                    "outlier",
                    "pps_peer",
                    "candidate",
                    "backup",
                    "system_peer"
                  ],
                  "type": "string"
                },
                "group": "/NTP_Association/NTP Association Status"
              },
              "time_offset": {
                "doc": [
                  "Provides Root Mean Square time (in milliseconds) between this local host and the",
                  "remote peer or server."
                ],
                "type": "string",
                "group": "/NTP_Association/NTP Association Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "doc": [
            "Key-value pairs that report NTP association status."
          ],
          "ephemeral": true,
          "group": "/NTP_Association/NTP Association Status"
        },
        "association_attributes": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "ref_clock_id": {
                "doc": [
                  "The refclock driver ID, if available. A refclock driver ID like \"127.127.1.0\"",
                  "for non uni/multi/broadcast associations"
                ],
                "type": "string",
                "group": "/NTP_Association/NTP Association Configuration"
              },
              "ntp_version": {
                "emptyValue": 3,
                "doc": [
                  "NTP version to use for when communicating with this association. Default is 3."
                ],
                "type": {
                  "minInteger": 3,
                  "maxInteger": 4,
                  "type": "integer"
                },
                "group": "/NTP_Association/NTP Association Configuration"
              },
              "prefer": {
                "emptyValue": false,
                "doc": [
                  "Preference flag to suggest for this association. Set this to `true` to enable",
                  "preference for this association. Default is false."
                ],
                "type": "boolean",
                "group": "/NTP_Association/NTP Association Configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/NTP_Association/NTP Association Configuration"
        },
        "vrf": {
          "category": "configuration",
          "group": "/NTP_Association/NTP Association Configuration",
          "relationship": "m:1",
          "doc": [
            "Specifies which VRF this association should connect with."
          ],
          "mutable": false,
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "VRF"
            }
          }
        }
      },
      "isRoot": true,
      "maxRows": 8,
      "indexes": [
        [
          "vrf",
          "address"
        ]
      ]
    },
    "NTP_Key": {
      "doc": [
        "NTP Keys configuration"
      ],
      "columns": {
        "key_id": {
          "category": "configuration",
          "mutable": false,
          "type": {
            "key": {
              "minInteger": 1,
              "maxInteger": 65534,
              "type": "integer"
            }
          },
          "doc": [
            "Specifies a key_id which is used for NTP authentication."
          ]
        },
        "trust_enable": {
          "category": "configuration",
          "doc": [
            "Enables trust settings for this key_id. Default is false."
          ],
          "type": "boolean",
          "emptyValue": false
        },
        "key_password": {
          "category": "configuration",
          "doc": [
            "Specifies a key_password which is used for NTP authentication."
          ],
          "type": {
            "key": {
              "minLength": 8,
              "type": "string",
              "maxLength": 16
            }
          }
        }
      },
      "isRoot": true,
      "maxRows": 65534,
      "indexes": [
        [
          "key_id"
        ]
      ]
    },
    "OSPF_Router": {
      "columns": {
        "router_id": {
          "category": "configuration",
          "type": {
            "max": 2,
            "valueMap": {
              "router_id_val": {
                "doc": [
                  "The OSPFv2 router identifier. The router ID for the OSPFv2 instance. The router",
                  "ID may be an IPv4 address of the router. It can be any arbitrary 32bit number.",
                  "However it MUST be non-zero and unique within the entire Autonomus System",
                  "domain."
                ],
                "type": {
                  "minInteger": 1,
                  "maxInteger": 4294967295,
                  "type": "integer"
                },
                "group": "/OSPF_Router/Configuration"
              },
              "router_id_static": {
                "emptyValue": false,
                "doc": [
                  "This determines whether the router-ID is configured statically on this router",
                  "instance or not. The default is false."
                ],
                "type": "boolean",
                "group": "/OSPF_Router/Configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/OSPF_Router/Configuration"
        },
        "distance": {
          "category": "configuration",
          "type": {
            "max": 4,
            "valueMap": {
              "all": {
                "emptyValue": 110,
                "doc": [
                  "The administrative distance applies to all types of routes if not configured",
                  "specifically for certain types. The default value is 110."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 255,
                  "type": "integer"
                },
                "group": "/OSPF_Router/Configuration"
              },
              "inter_area": {
                "emptyValue": 110,
                "doc": [
                  "The administrative distance applies to routes of type inter-area. The default is",
                  "110."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 255,
                  "type": "integer"
                },
                "group": "/OSPF_Router/Configuration"
              },
              "external": {
                "emptyValue": 110,
                "doc": [
                  "The administrative distance applies to routes of type external. The default is",
                  "110."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 255,
                  "type": "integer"
                },
                "group": "/OSPF_Router/Configuration"
              },
              "intra_area": {
                "emptyValue": 110,
                "doc": [
                  "The administrative distance applies to routes of type intra-area. The default is",
                  "110."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 255,
                  "type": "integer"
                },
                "group": "/OSPF_Router/Configuration"
              }
            },
            "key": {
              "enum": [
                "all",
                "external",
                "inter_area",
                "intra_area"
              ],
              "type": "string"
            },
            "value": {
              "minInteger": 0,
              "maxInteger": 255,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/OSPF_Router/Configuration"
        },
        "redistribute": {
          "category": "configuration",
          "doc": [
            "Redistributes the different types of routes into OSPFv2 network."
          ],
          "type": {
            "max": 3,
            "key": {
              "enum": [
                "connected",
                "static",
                "bgp"
              ],
              "type": "string"
            },
            "min": 0
          },
          "group": "/OSPF_Router/Configuration"
        },
        "default_information": {
          "category": "configuration",
          "doc": [
            "The configurations related to the default routes advertisement. The router",
            "should originate an AS-External (type-5) LSA describing a default route into the",
            "Autonomus Sytem's all external-routing capable areas."
          ],
          "type": {
            "max": "unlimited",
            "valueMap": {
              "always": {
                "emptyValue": false,
                "doc": [
                  "The default route must be advertised always, even if the default route doesn't",
                  "exist in the local system or VRF RIB. The default value is false."
                ],
                "type": "boolean",
                "group": "/OSPF_Router/Configuration"
              },
              "default_info_originate": {
                "emptyValue": false,
                "doc": [
                  "The router should advertise the default route into the Autonomus System. The",
                  "default value is false, that is, router should not advertise the default route."
                ],
                "type": "boolean",
                "group": "/OSPF_Router/Configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/OSPF_Router/Configuration"
        },
        "spf_calculation": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "spf_holdtime": {
                "emptyValue": 1000,
                "doc": [
                  "The minimum hold time, in milliseconds, between the SPF calculation schedules.",
                  "The SPF hold time itself will be adaptive and increasing and bounded by max wait",
                  "time. The default value is 1000 milliseconds."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 600000,
                  "type": "integer"
                },
                "group": "/OSPF_Router/Configuration"
              },
              "spf_max_wait": {
                "emptyValue": 10000,
                "doc": [
                  "The the maximum wait time or hold time, in milliseconds, between the SPF",
                  "calculation schedules. The default value is 10000 milliseconds."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 600000,
                  "type": "integer"
                },
                "group": "/OSPF_Router/Configuration"
              },
              "spf_delay": {
                "emptyValue": 200,
                "doc": [
                  "The initial delay time, in milliseconds, for SPF calculation schedule. The",
                  "default value is 200 milliseconds."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 600000,
                  "type": "integer"
                },
                "group": "/OSPF_Router/Configuration"
              }
            },
            "key": "string",
            "value": "integer",
            "min": 0
          },
          "group": "/OSPF_Router/Configuration"
        },
        "stub_router_adv": {
          "category": "configuration",
          "type": {
            "max": 1,
            "valueMap": {
              "admin_set": {
                "emptyValue": false,
                "doc": [
                  "This determines whether the stub router router_lsa advertisement is set",
                  "administratively. The default value is false."
                ],
                "type": "boolean",
                "group": "/OSPF_Router/Configuration"
              },
              "startup": {
                "doc": [
                  "This determines whether the router should advertise stub router router_lsa on",
                  "start-up. The delay, in seconds, is the duration for how long, after the reboot,",
                  "stub router router_lsa should be advertised."
                ],
                "type": {
                  "minInteger": 5,
                  "maxInteger": 86400,
                  "type": "integer"
                },
                "group": "/OSPF_Router/Configuration"
              }
            },
            "key": {
              "enum": [
                "admin_set",
                "startup"
              ],
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0
          },
          "group": "/OSPF_Router/Configuration"
        },
        "passive_interface_default": {
          "category": "configuration",
          "doc": [
            "This determines whether all interfaces should be set to passive by default. The",
            "default value is false."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false,
          "group": "/OSPF_Router/Configuration"
        },
        "nbma_nbrs": {
          "category": "configuration",
          "group": "/OSPF_Router/Configuration",
          "relationship": "1:m",
          "doc": [
            "The list of all the \"OSPF_NBMA_Neighbor\" for the OSPFv2 router instance, which",
            "contains the OSPFv2 configurations related to non-broadcast multi-access",
            "networks."
          ],
          "keyname": "nbr_ip_address",
          "type": {
            "max": "unlimited",
            "key": {
              "minInteger": 1,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "value": {
              "type": "uuid",
              "refTable": "OSPF_NBMA_Neighbor"
            },
            "min": 0
          }
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "log_adjacency_details": {
                "emptyValue": false,
                "doc": [
                  "This determines whether to log changes in adjacency in detail or not. If the",
                  "flag is not set then only changes to full or regressions are shown. The default",
                  "value is false."
                ],
                "type": "boolean",
                "group": "/OSPF_Router/Configuration"
              },
              "default_metric": {
                "emptyValue": 20,
                "doc": [
                  "The default cost metric for the redistributed routes. The default value is 20."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 16777214,
                  "type": "integer"
                },
                "group": "/OSPF_Router/Configuration"
              },
              "log_adjacency_changes": {
                "emptyValue": false,
                "doc": [
                  "This determines whether to log changes in adjacency or not. The default value is",
                  "false."
                ],
                "type": "boolean",
                "group": "/OSPF_Router/Configuration"
              },
              "ospf_rfc1583_compatible": {
                "emptyValue": false,
                "doc": [
                  "This determines whether RFC1583 compatibility mode is enabled or not. If value",
                  "is false then the path preference algorithm is calculated as per RFC 2328. The",
                  "default value is false."
                ],
                "type": "boolean",
                "group": "/OSPF_Router/Configuration"
              },
              "auto_cost_ref_bw": {
                "doc": [
                  "1.The reference bandwidth, Mbits/second, for default cost calculations. This",
                  "bandwidth is considered equivalent to an OSPFv2 cost of",
                  "1. The allowed range is 1 to 4000000 Mbps, that is 1 Mbps to 4000 Gbps. The",
                  "default value is 40000 Mbps, that is 40 Gbps."
                ],
                "type": {
                  "minInteger": 1,
                  "maxInteger": 4000000,
                  "type": "integer"
                },
                "group": "/OSPF_Router/Configuration"
              },
              "enable_ospf_opaque_lsa": {
                "emptyValue": false,
                "doc": [
                  "This  determines if the OSPFv2 Opaque LSA capability is enabled or not. The",
                  "default value is false."
                ],
                "type": "boolean",
                "group": "/OSPF_Router/Configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/OSPF_Router/Configuration"
        },
        "active_interfaces": {
          "category": "configuration",
          "doc": [
            "The list of the active-interfaces. If \"passive_interface_default\" is set",
            "\"false\", then this list should be empty."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "Port"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/OSPF_Router/Configuration"
        },
        "networks": {
          "category": "configuration",
          "doc": [
            "The list of all the IPv4 networks configured to run OSPFv2 protocol. The key is",
            "the network prefix in A.B.C.D/M format."
          ],
          "keyname": "network_prefix",
          "type": {
            "max": "unlimited",
            "key": {
              "type": "string",
              "maxLength": 18
            },
            "value": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/OSPF_Router/Configuration"
        },
        "status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "asbr": {
                "emptyValue": false,
                "doc": [
                  "The Router is a OSPFv2 Autonomus System Boundary Router (ASBR). The default",
                  "value is false."
                ],
                "type": "boolean",
                "group": "/OSPF_Router/Status"
              },
              "opaque_origination_blocked": {
                "emptyValue": false,
                "doc": [
                  "This describes if the Opaque LSA origination is blocked. The default value is",
                  "false."
                ],
                "type": "boolean",
                "group": "/OSPF_Router/Status"
              },
              "spf_hold_multiplier": {
                "emptyValue": 1,
                "doc": [
                  "This is current value of adaptive multiplier of the initial-holdtime and used in",
                  "determining the hold time. The default value is 1."
                ],
                "type": "integer",
                "group": "/OSPF_Router/Status"
              },
              "capability_restart": {
                "emptyValue": false,
                "doc": [
                  "This describes if the device has support for Graceful OSPFv2 Restart. The",
                  "default value is false."
                ],
                "type": "boolean",
                "group": "/OSPF_Router/Status"
              },
              "as_ext_lsas_sum_cksum": {
                "emptyValue": 0,
                "doc": [
                  "The sum of checksum of list of AS External LSAs. The default value is 0."
                ],
                "type": "integer",
                "group": "/OSPF_Router/Status"
              },
              "opaque_as_lsas_sum_cksum": {
                "emptyValue": 0,
                "doc": [
                  "The sum of checksum of list of AS scope Opaque LSAs. The default value is 0."
                ],
                "type": "integer",
                "group": "/OSPF_Router/Status"
              },
              "capability_opaque": {
                "emptyValue": true,
                "doc": [
                  "This describes if the device has support for Opaque lsa capability. The default",
                  "value is true."
                ],
                "type": "boolean",
                "group": "/OSPF_Router/Status"
              },
              "abr": {
                "emptyValue": false,
                "doc": [
                  "The Router is a OSPFv2 Area Border Router (ABR). The default value is false."
                ],
                "type": "boolean",
                "group": "/OSPF_Router/Status"
              },
              "opaque_status": {
                "emptyValue": false,
                "doc": [
                  "This describes if the device has support for Opaque LSA enabled. The default",
                  "value is false."
                ],
                "type": "boolean",
                "group": "/OSPF_Router/Status"
              },
              "stub_router_support": {
                "emptyValue": true,
                "doc": [
                  "This describes if the device has support for stub router advertisement as per",
                  "RFC 3137. The default value is true."
                ],
                "type": "boolean",
                "group": "/OSPF_Router/Status"
              },
              "ospf_rfc1583_compatibility": {
                "emptyValue": true,
                "doc": [
                  "This describes if the device has support for rfc1583 compatibility. The default",
                  "value is true."
                ],
                "type": "boolean",
                "group": "/OSPF_Router/Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/OSPF_Router/Status"
        },
        "ext_ospf_routes": {
          "category": "status",
          "doc": [
            "The list of all the ospf external routes."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "OSPF_Route"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/OSPF_Router/Status"
        },
        "passive_interfaces": {
          "category": "configuration",
          "doc": [
            "The list of the passive-interfaces. If \"passive_interface_default\" is set",
            "\"true\", then this list should be empty."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "Port"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/OSPF_Router/Configuration"
        },
        "opaque_as_lsas": {
          "category": "status",
          "doc": [
            "The list of all the AS scope Opaque_LSAs."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "OSPF_LSA"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/OSPF_Router/Status"
        },
        "areas": {
          "category": "configuration",
          "group": "/OSPF_Router/Configuration",
          "relationship": "1:m",
          "doc": [
            "The list of all the \"OSPF_Area\" for the OSPFv2 router instance, which contains",
            "the OSPFv2 area related configurations."
          ],
          "keyname": "area_id",
          "type": {
            "max": "unlimited",
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "value": {
              "type": "uuid",
              "refTable": "OSPF_Area"
            },
            "min": 0
          }
        },
        "as_ext_lsas": {
          "category": "status",
          "doc": [
            "The list of all the AS External LSAs."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "OSPF_LSA"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/OSPF_Router/Status"
        },
        "lsa_timers": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "lsa_arrival_interval": {
                "emptyValue": 1000,
                "doc": [
                  "The minimum interval, in milliseconds, between accepting the same LSA. The",
                  "default value is 1000 milliseconds."
                ],
                "type": {
                  "minInteger": 10,
                  "maxInteger": 600000,
                  "type": "integer"
                },
                "group": "/OSPF_Router/Configuration"
              },
              "lsa_group_pacing": {
                "emptyValue": 10,
                "doc": [
                  "The LSA group pacing timer. This is the interval, in seconds, between group of",
                  "LSA being refreshed or maxaged. The default value is 10 seconds."
                ],
                "type": {
                  "minInteger": 1,
                  "maxInteger": 1800,
                  "type": "integer"
                },
                "group": "/OSPF_Router/Configuration"
              }
            },
            "key": "string",
            "value": "integer",
            "min": 0
          },
          "group": "/OSPF_Router/Configuration"
        }
      },
      "title": "An OSPFv2 Router Instance"
    },
    "OSPF_Area": {
      "doc": [
        "The configurations and other details of and OSPFv2 Area entity."
      ],
      "columns": {
        "status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "transit_capability": {
                "emptyValue": "disable",
                "doc": [
                  "This describes the transit capability for virtual links. The default value is",
                  "false."
                ],
                "type": {
                  "enum": [
                    "enable",
                    "disable"
                  ],
                  "type": "string"
                },
                "group": "/OSPF_Area/status"
              },
              "asbr_summary_lsas_sum_cksum": {
                "emptyValue": 0,
                "doc": [
                  "The sum of checksums of list of Type 4 ASBR Summary LSAs. The default value is",
                  "0."
                ],
                "type": "integer",
                "group": "/OSPF_Area/status"
              },
              "NSSA translator role": {
                "emptyValue": "disable",
                "doc": [
                  "This describes the NSSA translator state. The default value is disable."
                ],
                "type": {
                  "enum": [
                    "enable",
                    "disable"
                  ],
                  "type": "string"
                },
                "group": "/OSPF_Area/status"
              },
              "full_virtual_nbrs": {
                "emptyValue": 0,
                "doc": [
                  "This describes the number of adjacent virtual neighbors. The default value is 0."
                ],
                "type": "integer",
                "group": "/OSPF_Area/status"
              },
              "stub_router_admin_set": {
                "emptyValue": false,
                "doc": [
                  "This describes the status of the stub_router if it is set administratively. The",
                  "default value is false."
                ],
                "type": "boolean",
                "group": "/OSPF_Area/status"
              },
              "spf_last_run_timestamp": {
                "doc": [
                  "This describes the time when the last time SPF algorithm had run for this area."
                ],
                "type": "string",
                "group": "/OSPF_Area/status"
              },
              "opaque_link_lsas_sum_cksum": {
                "emptyValue": 0,
                "doc": [
                  "The sum of checksums of list of Link scope Opaque LSAs. The default value is 0."
                ],
                "type": "integer",
                "group": "/OSPF_Area/status"
              },
              "stub_router_startup": {
                "emptyValue": false,
                "doc": [
                  "This describes the status of the stub_router if it is set \"startup\". The default",
                  "value is false."
                ],
                "type": "boolean",
                "group": "/OSPF_Area/status"
              },
              "router_lsas_sum_cksum": {
                "emptyValue": 0,
                "doc": [
                  "The sum of checksums of list of Router LSAs. The default value is 0."
                ],
                "type": "integer",
                "group": "/OSPF_Area/status"
              },
              "stub_router_state_active": {
                "emptyValue": false,
                "doc": [
                  "This describes the status of the stub_router. The default value is false."
                ],
                "type": "boolean",
                "group": "/OSPF_Area/status"
              },
              "abr_summary_lsas_sum_cksum": {
                "emptyValue": 0,
                "doc": [
                  "The sum of checksums of list of Type 3 ABR Summary LSAs. The default value is 0."
                ],
                "type": "integer",
                "group": "/OSPF_Area/status"
              },
              "full_nbrs": {
                "emptyValue": 0,
                "doc": [
                  "This describes the the number of adjacent neighbors in the area. The default",
                  "value is 0."
                ],
                "type": "integer",
                "group": "/OSPF_Area/status"
              },
              "opaque_area_lsas_sum_cksum": {
                "emptyValue": 0,
                "doc": [
                  "The sum of checksums of list of  Area scope Opaque LSAs. The default value is 0."
                ],
                "type": "integer",
                "group": "/OSPF_Area/status"
              },
              "network_lsas_sum_cksum": {
                "emptyValue": 0,
                "doc": [
                  "The sum of checksums of list of Network LSAs. The default value is 0."
                ],
                "type": "integer",
                "group": "/OSPF_Area/status"
              },
              "active_interfaces": {
                "emptyValue": 0,
                "doc": [
                  "This describes the number of active OSPFv2 interfaces in the area. The default",
                  "value is 0."
                ],
                "type": "integer",
                "group": "/OSPF_Area/status"
              },
              "as_nssa_lsas_sum_cksum": {
                "emptyValue": 0,
                "doc": [
                  "The sum of checksums of list of Type 7 NSSA External LSAs. The default value is",
                  "0."
                ],
                "type": "integer",
                "group": "/OSPF_Area/status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/OSPF_Area/status"
        },
        "intra_area_ospf_routes": {
          "category": "status",
          "doc": [
            "The list of all the OSPFv2 intra area routes."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "OSPF_Route"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/OSPF_Area/status"
        },
        "statistics": {
          "category": "statistics",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "abr_count": {
                "doc": [
                  "The number of Area Border Routers (ABR) in the area."
                ],
                "type": "integer",
                "group": "/OSPF_Area/statistics"
              },
              "asbr_count": {
                "doc": [
                  "The number of autonomous system border routers (ASBR) in the area."
                ],
                "type": "integer",
                "group": "/OSPF_Area/statistics"
              },
              "spf_calc": {
                "doc": [
                  "The number of times the SPF calculations has run."
                ],
                "type": "integer",
                "group": "/OSPF_Area/statistics"
              }
            },
            "key": "string",
            "value": "integer",
            "min": 0
          },
          "ephemeral": true,
          "group": "/OSPF_Area/statistics"
        },
        "opaque_link_lsas": {
          "category": "status",
          "doc": [
            "The list of all the Link scope Opaque LSAs."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "OSPF_LSA"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/OSPF_Area/status"
        },
        "ospf_auth_type": {
          "category": "configuration",
          "doc": [
            "The type of OSPFv2 authentication. If not set, the OSPFv2 protocol packets",
            "excahges are not authenticated."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "text",
                "md5"
              ],
              "type": "string"
            },
            "min": 0
          },
          "group": "/OSPF_Area/Configuration"
        },
        "network_lsas": {
          "category": "status",
          "doc": [
            "The list of all the Network LSAs."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "OSPF_LSA"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/OSPF_Area/status"
        },
        "ospf_area_summary_addresses": {
          "category": "configuration",
          "doc": [
            "The list of all OSPFv2 summary aAddresses for this OSPFv2 area. If area range",
            "addresses are configured, then ABR may advertise summarized prefixes to other",
            "areas."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "OSPF_Summary_Address"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/OSPF_Area/Configuration"
        },
        "inter_area_ospf_routes": {
          "category": "status",
          "doc": [
            "The list of all the OSPFv2 inter area routes."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "OSPF_Route"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/OSPF_Area/status"
        },
        "ospf_interfaces": {
          "category": "configuration",
          "doc": [
            "The list of all the \"OSPF_Interface\" for the OSPFv2 Area, which contains the",
            "OSPFv2 interface realted configurations, statuses, and statistics."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "OSPF_Interface"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/OSPF_Area/Configuration"
        },
        "router_lsas": {
          "category": "status",
          "doc": [
            "The list of all the Router LSAs."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "OSPF_LSA"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/OSPF_Area/status"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "stub_default_cost": {
                "emptyValue": 1,
                "doc": [
                  "The cost metric for the default summary route sent into the stub area. The",
                  "default value is 1."
                ],
                "type": "integer"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          }
        },
        "abr_summary_lsas": {
          "category": "status",
          "doc": [
            "The list of all the Type 3 ABR Summary LSAs."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "OSPF_LSA"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/OSPF_Area/status"
        },
        "area_type": {
          "category": "configuration",
          "doc": [
            "This defines how the external routing and summary lsas for this area will be",
            "handled. The default value is \"default\"."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "default",
                "stub",
                "stub_no_summary",
                "nssa",
                "nssa_no_summary"
              ],
              "type": "string"
            },
            "min": 0
          },
          "emptyValue": "default",
          "group": "/OSPF_Area/Configuration"
        },
        "nssa_translator_role": {
          "category": "configuration",
          "doc": [
            "If value is set to \"always\", then NSSA ABR always translates NSSA External (type",
            "5) LSAs to AS External (type 7) LSAs. If value is set to \"never\", then NSSA ABR",
            "will not translate NSSA External (type 5) LSAs to AS External (type 7) LSAs. If",
            "value is set to \"candidate\", then  this ABR router participates in the",
            "translator election to determine if it will perform the translation duties. If",
            "this NSSA router is not an ABR, then this option has no effect. The default",
            "value is \"candidate\"."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "never",
                "candidate",
                "always"
              ],
              "type": "string"
            },
            "min": 0
          },
          "emptyValue": "candidate",
          "group": "/OSPF_Area/Configuration"
        },
        "ospf_vlinks": {
          "category": "configuration",
          "group": "/OSPF_Area/Configuration",
          "relationship": "1:m",
          "doc": [
            "The list of all the \"OSPF_Vlink\" for the OSPFv2 Area, which contains the OSPFv2",
            "Virtual link related configurations."
          ],
          "keyname": "peer_router_id",
          "type": {
            "max": "unlimited",
            "key": {
              "minInteger": 1,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "value": {
              "type": "uuid",
              "refTable": "OSPF_Vlink"
            },
            "min": 0
          }
        },
        "asbr_summary_lsas": {
          "category": "status",
          "doc": [
            "The list of all the Type 4 ASBR Summary LSAs."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "OSPF_LSA"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/OSPF_Area/status"
        },
        "opaque_area_lsas": {
          "category": "status",
          "doc": [
            "The list of all the Area scope Opaque LSAs."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "OSPF_LSA"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/OSPF_Area/status"
        },
        "prefix_lists": {
          "category": "configuration",
          "doc": [
            "The ABR filters the  Type-3 summary-LSAs to or from area using prefix lists."
          ],
          "type": {
            "max": 2,
            "key": {
              "enum": [
                "in",
                "out"
              ],
              "type": "string"
            },
            "value": {
              "type": "uuid",
              "refTable": "Prefix_List"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/OSPF_Area/Configuration"
        },
        "as_nssa_lsas": {
          "category": "status",
          "doc": [
            "The list of all the Type 7 NSSA External LSAs."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "OSPF_LSA"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/OSPF_Area/status"
        },
        "router_ospf_routes": {
          "category": "status",
          "doc": [
            "The list of all the OSPFv2 routes to the routers."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "OSPF_Route"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/OSPF_Area/status"
        }
      },
      "title": "OSPF Area level configurations"
    },
    "OSPF_Summary_Address": {
      "columns": {
        "prefix": {
          "category": "configuration",
          "doc": [
            "The prefix address in A.B.C.D/M format."
          ],
          "type": {
            "key": {
              "type": "string",
              "maxLength": 18
            }
          },
          "group": "/OSPF_Summary_Address/Configuration"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "advertise": {
                "emptyValue": true,
                "doc": [
                  "This determines whether to advertise the summary address or not. If value is",
                  "false then the OSPFv2 router does not advertise this summary address. The",
                  "default value is true."
                ],
                "type": "boolean",
                "group": "/OSPF_Summary_Address/Configuration"
              },
              "cost": {
                "emptyValue": 16777214,
                "doc": [
                  "The cost of the summary address. The default value is 16777214."
                ],
                "type": {
                  "minInteger": 1,
                  "maxInteger": 16777214,
                  "type": "integer"
                },
                "group": "/OSPF_Summary_Address/Configuration"
              },
              "tag": {
                "doc": [
                  "The tag for the summarized prefix."
                ],
                "type": {
                  "type": "string",
                  "maxLength": 64
                },
                "group": "/OSPF_Summary_Address/Configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/OSPF_Summary_Address/Configuration"
        }
      },
      "title": "OSPFv2 summarization related configurations"
    },
    "OSPF_Interface": {
      "indexes": [
        [
          "name"
        ]
      ],
      "columns": {
        "neighbors": {
          "category": "status",
          "doc": [
            "The list of all the OSPFv2 neighbors on this OSPFv2 Interface."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "uuid",
              "refTable": "OSPF_Neighbor"
            },
            "min": 0
          },
          "relationship": "1:m",
          "group": "/OSPF_Interface/status"
        },
        "status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "active": {
                "emptyValue": true,
                "doc": [
                  "Updates status whether the interface is active. The default value is true."
                ],
                "type": "boolean",
                "group": "/OSPF_Interface/status"
              },
              "hello_due_at": {
                "doc": [
                  "Updates when the next hello is due on the interface in seconds. The default",
                  "value is hello_interval on this interface."
                ],
                "type": "integer",
                "group": "/OSPF_Interface/status"
              },
              "if_out_cost": {
                "doc": [
                  "The interface out cost. If not configured, this is calculated as per the auto",
                  "cost bandwidth reference and interface speed."
                ],
                "type": "integer",
                "group": "/OSPF_Interface/status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/OSPF_Interface/status"
        },
        "statistics": {
          "category": "statistics",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "ls_ack_rcvd": {
                "doc": [
                  "The total number of Link State Ack packets received on the interface."
                ],
                "type": "integer",
                "group": "/OSPF_Interface/statistics"
              },
              "hello_rcvd": {
                "doc": [
                  "The total number of hello packets received on the interface."
                ],
                "type": "integer",
                "group": "/OSPF_Interface/statistics"
              },
              "ls_req_sent": {
                "doc": [
                  "The total number of Link State Request packets sent on the interface."
                ],
                "type": "integer",
                "group": "/OSPF_Interface/statistics"
              },
              "ls_req_rcvd": {
                "doc": [
                  "The total number of Link State Request packets received on the interface."
                ],
                "type": "integer",
                "group": "/OSPF_Interface/statistics"
              },
              "ls_upd_rcvd": {
                "doc": [
                  "The total number of Link State Update packets received on the interface."
                ],
                "type": "integer",
                "group": "/OSPF_Interface/statistics"
              },
              "ls_upd_sent": {
                "doc": [
                  "The total number of Link State Update packets sent on the interface."
                ],
                "type": "integer",
                "group": "/OSPF_Interface/statistics"
              },
              "rx_discard": {
                "doc": [
                  "The total number of  received packets discarded on the interface."
                ],
                "type": "integer",
                "group": "/OSPF_Interface/statistics"
              },
              "hello_sent": {
                "doc": [
                  "The total number of hello packets sent on the interface."
                ],
                "type": "integer",
                "group": "/OSPF_Interface/statistics"
              },
              "state_changes": {
                "doc": [
                  "The total number of state changes on the interface."
                ],
                "type": "integer",
                "group": "/OSPF_Interface/statistics"
              },
              "db_desc_sent": {
                "doc": [
                  "The total number of DataBase Description packets sent on the interface."
                ],
                "type": "integer",
                "group": "/OSPF_Interface/statistics"
              },
              "db_desc_rcvd": {
                "doc": [
                  "The total number of DataBase Description packets received on the interface."
                ],
                "type": "integer",
                "group": "/OSPF_Interface/statistics"
              },
              "ls_ack_sent": {
                "doc": [
                  "The total number of Link State Ack packets sent on the interface."
                ],
                "type": "integer",
                "group": "/OSPF_Interface/statistics"
              }
            },
            "key": "string",
            "value": "integer",
            "min": 0
          },
          "ephemeral": true,
          "group": "/OSPF_Interface/statistics"
        },
        "ospf_vlink": {
          "category": "configuration",
          "doc": [
            "The virtual link related configurations. This is valid for the interface of type",
            "\"virtual link\"."
          ],
          "type": {
            "max": 1,
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "OSPF_Vlink"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/OSPF_Interface/Configuration"
        },
        "ifsm_state": {
          "category": "status",
          "doc": [
            "OSPFv2 Interface FSM states. The default value is \"depend_upon\"."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "depend_upon",
                "down",
                "loopback",
                "waiting",
                "point_to_point",
                "dr_other",
                "backup_dr",
                "dr"
              ],
              "type": "string"
            },
            "min": 0
          },
          "emptyValue": "depend_upon",
          "group": "/OSPF_Interface/status"
        },
        "port": {
          "category": "configuration",
          "doc": [
            "The \"Port\" corresponding to the OSPFv2 Interface."
          ],
          "type": {
            "max": 1,
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "Port"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/OSPF_Interface/Configuration"
        },
        "name": {
          "category": "configuration",
          "mutable": false,
          "doc": [
            "The OSPFv2 Interface name."
          ],
          "type": {
            "key": {
              "type": "string",
              "maxLength": 32
            }
          },
          "group": "/OSPF_Interface/Configuration"
        }
      },
      "title": "OSPFv2 Interface related configurations"
    },
    "OSPF_Neighbor": {
      "columns": {
        "status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "last_up_timestamp": {
                "emptyValue": 0,
                "doc": [
                  "The duration since when the state of the neighbor is seen. The default value is",
                  "0."
                ],
                "type": "integer",
                "group": "/OSPF_Neighbor/status"
              },
              "dead_timer_due": {
                "doc": [
                  "The time left for the dead timer of the neighbor to expire. The default value is",
                  "the dead_interval for the interface."
                ],
                "type": "integer",
                "group": "/OSPF_Neighbor/status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/OSPF_Neighbor/status"
        },
        "statistics": {
          "category": "statistics",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "ls_request_count": {
                "doc": [
                  "The total number of link state request packets."
                ],
                "type": "integer",
                "group": "/OSPF_Neighbor/statistics"
              },
              "ls_retransmit_count": {
                "doc": [
                  "The total number of link state packets retransmitted."
                ],
                "type": "integer",
                "group": "/OSPF_Neighbor/statistics"
              },
              "db_summary_count": {
                "doc": [
                  "The total number of DataBase summary reports."
                ],
                "type": "integer",
                "group": "/OSPF_Neighbor/statistics"
              },
              "state_changes_count": {
                "doc": [
                  "The total number of state change events on this interface."
                ],
                "type": "integer",
                "group": "/OSPF_Neighbor/statistics"
              }
            },
            "key": "string",
            "value": "integer",
            "min": 0
          },
          "ephemeral": true,
          "group": "/OSPF_Neighbor/statistics"
        },
        "nbr_priority": {
          "category": "status",
          "doc": [
            "The priority of the neighbor. The default value is 255."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 255,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 255,
          "group": "/OSPF_Neighbor/status"
        },
        "nfsm_state": {
          "category": "status",
          "doc": [
            "OSPFv2 Neighbor FSM states. The default value is \"down\"."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "depend_upon",
                "down",
                "deleted",
                "attempt",
                "init",
                "two_way",
                "ex_start",
                "exchange",
                "loading",
                "full"
              ],
              "type": "string"
            },
            "min": 0
          },
          "emptyValue": "down",
          "group": "/OSPF_Neighbor/status"
        },
        "nbr_if_addr": {
          "category": "status",
          "doc": [
            "The interface address of the OSPFv2 Neighbor on which the neighbor relationship",
            "is established. The default value is 0, which is invalid if_address."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 0,
          "group": "/OSPF_Neighbor/status"
        },
        "nbr_options": {
          "category": "status",
          "doc": [
            "The neighbor options or capabilities such as Opaque LSA capability, Demand",
            "Circuit, External Attribute LSA capability, and so on."
          ],
          "type": {
            "max": 7,
            "key": {
              "enum": [
                "type_of_service",
                "external_routing",
                "multicast",
                "type_7_lsa",
                "external_attributes_lsa",
                "demand_circuits",
                "opaque_lsa"
              ],
              "type": "string"
            },
            "min": 0
          },
          "group": "/OSPF_Neighbor/status"
        },
        "bdr": {
          "category": "status",
          "doc": [
            "The router ID of the Backup Designated Router, as reported by the neighbor. The",
            "default value is 0."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 0,
          "group": "/OSPF_Neighbor/status"
        },
        "nbma_nbr": {
          "category": "configuration",
          "doc": [
            "The NBMA Neighbor related configurations, and statuses. This is valid in case of",
            "NBMA Neighbor only."
          ],
          "type": {
            "max": 1,
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "OSPF_NBMA_Neighbor"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/OSPF_Neighbor/Configuration"
        },
        "dr": {
          "category": "status",
          "doc": [
            "The router ID of the Designated Router, as reported by the neighbor. The default",
            "value is 0."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 0,
          "group": "/OSPF_Neighbor/status"
        },
        "nbr_router_id": {
          "category": "status",
          "doc": [
            "The Neighbor Router ID is used to identify the neighbor. The default value is 0,",
            "which is invalid router_id."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 1,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 0,
          "group": "/OSPF_Neighbor/status"
        }
      },
      "title": "OSPFv2 Neighbor information"
    },
    "OSPF_NBMA_Neighbor": {
      "columns": {
        "nbr_address": {
          "category": "configuration",
          "emptyValue": 0,
          "group": "/OSPF_NBMA_Neighbor/Configuration",
          "doc": [
            "The IP address of the NMBA neighbor. The default value is 0, which is invalid."
          ],
          "mutable": false,
          "type": {
            "max": 1,
            "key": {
              "minInteger": 1,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          }
        },
        "status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "poll_timer_due": {
                "doc": [
                  "The poll timer due in seconds for the NMBA neighbor. The default value is",
                  "poll_interval."
                ],
                "type": "integer",
                "group": "/OSPF_NBMA_Neighbor/status"
              },
              "state_changes_count": {
                "emptyValue": 0,
                "doc": [
                  "The total number of state change events. The default value is 0."
                ],
                "type": "integer",
                "group": "/OSPF_NBMA_Neighbor/status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/OSPF_NBMA_Neighbor/status"
        },
        "interface_name": {
          "category": "status",
          "doc": [
            "The name of the interface on which the NBMA Neighbor is adjacent."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 32
            },
            "min": 0
          },
          "group": "/OSPF_NBMA_Neighbor/status"
        },
        "nbr_router_id": {
          "category": "status",
          "doc": [
            "The router ID of the neighbor. The default value is 0, which is invalid",
            "router_id."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 1,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 0,
          "group": "/OSPF_NBMA_Neighbor/status"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "priority": {
                "emptyValue": 0,
                "doc": [
                  "The priority of the NMBA neighbor. The default value is 0."
                ],
                "type": {
                  "minInteger": 0,
                  "maxInteger": 255,
                  "type": "integer"
                },
                "group": "/OSPF_NBMA_Neighbor/Configuration"
              },
              "poll_interval": {
                "emptyValue": 60,
                "doc": [
                  "The poll interval (in seconds) of the NMBA neighbor. Default is 60 seconds."
                ],
                "type": {
                  "minInteger": 1,
                  "maxInteger": 65535,
                  "type": "integer"
                },
                "group": "/OSPF_NBMA_Neighbor/Configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/OSPF_NBMA_Neighbor/Configuration"
        }
      },
      "title": "OSPFv2 NBMA Neighbor information"
    },
    "OSPF_Vlink": {
      "columns": {
        "area_id": {
          "category": "configuration",
          "mutable": false,
          "doc": [
            "The area ID of the virtual link. Backbone area cannot have virtual link."
          ],
          "type": {
            "key": {
              "minInteger": 1,
              "maxInteger": 4294967295,
              "type": "integer"
            }
          },
          "group": "/OSPF_Vlink/Configuration"
        },
        "name": {
          "category": "status",
          "doc": [
            "The virtual link identifier."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 32
            },
            "min": 0
          },
          "group": "/OSPF_Vlink/status"
        },
        "peer_router_id": {
          "category": "configuration",
          "mutable": false,
          "doc": [
            "The peer router ID."
          ],
          "type": {
            "key": {
              "minInteger": 1,
              "maxInteger": 4294967295,
              "type": "integer"
            }
          },
          "group": "/OSPF_Vlink/Configuration"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "retransmit_interval": {
                "emptyValue": 5,
                "doc": [
                  "The estimated time, in seconds, between successive LSAs. The default value is 5",
                  "seconds."
                ],
                "type": "integer",
                "group": "/OSPF_Vlink/Configuration"
              },
              "dead_interval": {
                "doc": [
                  "The time, in seconds, that a neighbor waits for a Hello packet before tearing",
                  "down adjacency with local router. The default value is 4 times the hello",
                  "interval."
                ],
                "type": "integer",
                "group": "/OSPF_Vlink/Configuration"
              },
              "transmit_delay": {
                "emptyValue": 1,
                "doc": [
                  "The estimated time, in seconds, to transmit an LSA to a neighbor. The default",
                  "value is 1 second."
                ],
                "type": "integer",
                "group": "/OSPF_Vlink/Configuration"
              },
              "hello_interval": {
                "emptyValue": 10,
                "doc": [
                  "The time, in seconds, between successive Hello packets. The default value is 10",
                  "seconds."
                ],
                "type": "integer",
                "group": "/OSPF_Vlink/Configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/OSPF_Vlink/Configuration"
        },
        "ospf_auth_text_key": {
          "category": "configuration",
          "doc": [
            "The authentication key for OSPFv2 authentication type \"text\"."
          ],
          "type": {
            "max": 1,
            "key": {
              "minLength": 1,
              "type": "string",
              "maxLength": 8
            },
            "min": 0
          },
          "group": "/OSPF_Vlink/Configuration"
        },
        "ospf_auth_type": {
          "category": "configuration",
          "doc": [
            "The type of OSPFv2 authentication. If not set, then the area level",
            "authentication of the transit area, holds for the port."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "null",
                "text",
                "md5"
              ],
              "type": "string"
            },
            "min": 0
          },
          "group": "/OSPF_Vlink/Configuration"
        },
        "ospf_auth_md5_keys": {
          "category": "configuration",
          "doc": [
            "The authentication keys for OSPFv2 authentication type \"md5\" message-digest."
          ],
          "keyname": "key_id",
          "type": {
            "max": 255,
            "key": {
              "minInteger": 1,
              "maxInteger": 255,
              "type": "integer"
            },
            "value": {
              "minLength": 1,
              "type": "string",
              "maxLength": 16
            },
            "min": 0
          },
          "group": "/OSPF_Vlink/Configuration"
        }
      },
      "title": "OSPFv2 virtual link information"
    },
    "OSPF_Route": {
      "columns": {
        "route_info": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "area_id": {
                "doc": [
                  "The area ID of the route."
                ],
                "type": "integer",
                "group": "/OSPF_Route/status"
              },
              "ext_tag": {
                "doc": [
                  "The tag of the route."
                ],
                "type": "string",
                "group": "/OSPF_Route/status"
              },
              "ext_type": {
                "emptyValue": "ext_type_1",
                "doc": [
                  "External Type 1 or Type 2 Route. For External routes only. The default value is",
                  "\"ext_type_1\"."
                ],
                "type": {
                  "enum": [
                    "ext_type_1",
                    "ext_type_2"
                  ],
                  "type": "string"
                },
                "group": "/OSPF_Route/status"
              },
              "area_type_abr": {
                "emptyValue": false,
                "doc": [
                  "The area type ABR. The default value is false."
                ],
                "type": "boolean",
                "group": "/OSPF_Route/status"
              },
              "cost": {
                "emptyValue": 16777215,
                "doc": [
                  "The cost metric of the route. The default value is `16777215`, which is maximum",
                  "metric value."
                ],
                "type": {
                  "maxInteger": 16777215,
                  "type": "integer"
                },
                "group": "/OSPF_Route/status"
              },
              "type2_cost": {
                "emptyValue": 16777215,
                "doc": [
                  "The External Type 2 route cost. The default value is `16777215`, which is",
                  "maximum metric value."
                ],
                "type": {
                  "maxInteger": 16777215,
                  "type": "integer"
                },
                "group": "/OSPF_Route/status"
              },
              "asbr_router_id": {
                "emptyValue": 0,
                "doc": [
                  "The ASBR router ID. The default value is 0, which is invalid router ID."
                ],
                "type": "integer",
                "group": "/OSPF_Route/status"
              },
              "area_type_asbr": {
                "emptyValue": false,
                "doc": [
                  "The area type ASBR. The default value is false."
                ],
                "type": "boolean",
                "group": "/OSPF_Route/status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/OSPF_Route/status"
        },
        "path_type": {
          "category": "status",
          "doc": [
            "The value indicates whether the path type is inter-area, intra-area, or",
            "external."
          ],
          "type": {
            "key": {
              "enum": [
                "intra_area",
                "inter_area",
                "external"
              ],
              "type": "string"
            }
          },
          "group": "/OSPF_Route/status"
        },
        "prefix": {
          "category": "status",
          "doc": [
            "Specifies the prefix address in A.B.C.D/M format."
          ],
          "type": {
            "key": {
              "type": "string",
              "maxLength": 18
            }
          },
          "group": "/OSPF_Route/status"
        },
        "paths": {
          "category": "status",
          "doc": [
            "The list of paths."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "string"
            },
            "min": 0
          },
          "group": "/OSPF_Route/status"
        }
      },
      "title": "OSPFv2 Route related information"
    },
    "OSPF_LSA": {
      "columns": {
        "area_id": {
          "category": "status",
          "doc": [
            "The OSPFv2 Area ID. This is for area scope LSAs. The default value is 0."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 0,
          "group": "/OSPF_LSA/status"
        },
        "ls_seq_num": {
          "category": "status",
          "doc": [
            "The sequence number of the OSPFv2 LSA."
          ],
          "type": {
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            }
          },
          "group": "/OSPF_LSA/status"
        },
        "lsa_data": {
          "category": "status",
          "doc": [
            "The OSPFv2 LSA specific data."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "type": "string"
            },
            "min": 0
          },
          "group": "/OSPF_LSA/status"
        },
        "ls_birth_time": {
          "category": "status",
          "doc": [
            "The OSPFv2 LSA birth time, number of seconds elapsed since Epoch, which can be",
            "used to compute LSA age."
          ],
          "type": {
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            }
          },
          "group": "/OSPF_LSA/status"
        },
        "num_router_links": {
          "category": "status",
          "doc": [
            "Total number of router links. This is applicable in case of Router LSA. The",
            "default value is 0."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 65535,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 0,
          "group": "/OSPF_LSA/status"
        },
        "prefix": {
          "category": "status",
          "doc": [
            "The prefix in A.B.C.D/M format. This is applicable in case of the type 3 and 4",
            "Summary LSAs."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 18
            },
            "min": 0
          },
          "group": "/OSPF_LSA/status"
        },
        "lsa_type": {
          "category": "status",
          "mutable": false,
          "doc": [
            "The type of the OSPFv2 LSA."
          ],
          "type": {
            "key": {
              "enum": [
                "type1_router_lsa",
                "type2_network_lsa",
                "type3_abr_summary_lsa",
                "type4_asbr_summary_lsa",
                "type5_as_external_lsa",
                "type6_multicast_lsa",
                "type7_nssa_lsa",
                "type8_external_attributes_lsa",
                "type9_opaque_link_lsa",
                "type10_opaque_area_lsa",
                "type11_opaque_as_lsa"
              ],
              "type": "string"
            }
          },
          "group": "/OSPF_LSA/status"
        },
        "ls_id": {
          "category": "status",
          "mutable": false,
          "doc": [
            "The OSPFv2 LS_ID."
          ],
          "type": {
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            }
          },
          "group": "/OSPF_LSA/status"
        },
        "chksum": {
          "category": "status",
          "doc": [
            "The checksum in the OSPFv2 LSA. The default value is 0."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 65535,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 0,
          "group": "/OSPF_LSA/status"
        },
        "length": {
          "category": "status",
          "doc": [
            "The length of the OSPFv2 LSA in bytes. The default value is 20 bytes."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 65535,
              "type": "integer"
            },
            "min": 0
          },
          "emptyValue": 20,
          "group": "/OSPF_LSA/status"
        },
        "adv_router": {
          "category": "status",
          "mutable": false,
          "doc": [
            "The Router ID of the advertising router."
          ],
          "type": {
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            }
          },
          "group": "/OSPF_LSA/status"
        },
        "options": {
          "category": "status",
          "doc": [
            "The options in the OSPFv2 LSA."
          ],
          "type": {
            "max": 7,
            "key": {
              "enum": [
                "type_of_service",
                "external_routing",
                "multicast",
                "type_7_lsa",
                "external_attributes_lsa",
                "demand_circuits",
                "opaque_lsa"
              ],
              "type": "string"
            },
            "min": 0
          },
          "group": "/OSPF_LSA/status"
        },
        "flags": {
          "category": "status",
          "doc": [
            "The flags in the OSPFv2 Router LSA."
          ],
          "type": {
            "max": 3,
            "key": {
              "enum": [
                "area_border_router",
                "autonomus_system_boundary_router",
                "virtual_link_endpoint"
              ],
              "type": "string"
            },
            "min": 0
          },
          "group": "/OSPF_LSA/status"
        }
      },
      "title": "OSPFv2 link state related information"
    },
    "DHCP_Relay": {
      "doc": [
        "Placeholder for a set of server configuration entries. DHCP-Relay feature uses",
        "these entries to forward matching DHCP broadcast packets received on the layer3",
        "Port."
      ],
      "columns": {
        "ipv6_mcast_server": {
          "category": "configuration",
          "group": "/DHCP_Relay/DHCP-Relay Configuration",
          "relationship": "reference",
          "doc": [
            "List of IPv6 multicast or link local server destinations to which matching DHCP",
            "broadcast packets received on the port are duplciated and forwarded. Value of",
            "this key referenes a Port table entry, packets matching the criteria are",
            "forwarded to the server through this port. A maximum of 8 IPv6 server",
            "configurations are allowed. This count includes IPv6 unicast server",
            "configurations from the column \"ipv6_ucast_server\"."
          ],
          "keyname": "ipv6_address",
          "type": {
            "max": 8,
            "key": {
              "type": "string",
              "maxLength": 49
            },
            "value": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "Port"
            },
            "min": 0
          }
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "bootp_gateway": {
                "doc": [
                  "Provides a way to configure a gateway address for the DHCP relay agent to use",
                  "for DHCP requests, rather than the DHCP relay agent automatically assigning the",
                  "lowest-numbered IP address."
                ],
                "type": {
                  "type": "string",
                  "maxLength": 15
                },
                "group": "/DHCP_Relay/DHCP-Relay Configuration"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/DHCP_Relay/DHCP-Relay Configuration"
        },
        "ipv6_ucast_server": {
          "category": "configuration",
          "doc": [
            "List of IPv6 unicast server destinations to which DHCP broadcast packets",
            "received on the port are dulicated and forwarded. A maximum of 8 IPv6 server",
            "configurations are allowed. The count includes IPv6 multicast and link local",
            "server configuration from the column \"ipv6_mcast_server\"."
          ],
          "type": {
            "max": 8,
            "key": {
              "type": "string",
              "maxLength": 49
            },
            "min": 0
          },
          "group": "/DHCP_Relay/DHCP-Relay Configuration"
        },
        "vrf": {
          "category": "configuration",
          "group": "/DHCP_Relay/DHCP-Relay Configuration",
          "relationship": "reference",
          "doc": [
            "VRF through which DHCP server is reachable."
          ],
          "mutable": false,
          "type": {
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "VRF"
            }
          }
        },
        "ipv4_ucast_server": {
          "category": "configuration",
          "doc": [
            "List of IPv4 unicast server destinations to which DHCP broadcast packets",
            "received on the port are duplicated and forwarded. A maximum of 8 ipv4 unicast",
            "server configurations are allowed."
          ],
          "type": {
            "max": 8,
            "key": {
              "type": "string",
              "maxLength": 15
            },
            "min": 0
          },
          "group": "/DHCP_Relay/DHCP-Relay Configuration"
        },
        "port": {
          "category": "configuration",
          "group": "/DHCP_Relay/DHCP-Relay Configuration",
          "relationship": "reference",
          "doc": [
            "Layer 3 Port on which the configuration is made."
          ],
          "mutable": false,
          "type": {
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "Port"
            }
          }
        }
      },
      "isRoot": true,
      "indexes": [
        [
          "port",
          "vrf"
        ]
      ]
    },
    "Mirror": {
      "doc": [
        "Mirror sessions referenced from a [Bridge](Bridge).",
        "",
        "A mirror configures a bridge to send copies of selected packets to special",
        "\"mirrored\" ports, in addition to their normal destinations. Mirroring traffic",
        "may also be referred to as SPAN."
      ],
      "indexes": [
        [
          "name"
        ]
      ],
      "columns": {
        "select_src_port": {
          "category": "configuration",
          "doc": [
            "Set of Ethernet port or LAG references in [Port](Port) on which received packets",
            "are selected to be mirrored."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "Port"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/Mirror/Mirroring Source(s) Configuration"
        },
        "output_port": {
          "category": "configuration",
          "doc": [
            "Ethernet port or LAG reference in [Port](Port) used to transmit the mirror",
            "packets.  There must be a valid Ethernet port or LAG for the session operation",
            "state to become active.",
            "",
            "The output port should be reserved exclusively for transmitting mirror packets",
            "for this session.  It should not pariticapte in any other network activity (e.g.",
            "Spanning Tree, LLDP etc)."
          ],
          "type": {
            "max": 1,
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "Port"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/Mirror/Mirroring Destination Configuration"
        },
        "statistics": {
          "category": "statistics",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "tx_bytes": {
                "doc": [
                  "Number of bytes transmitted through this mirror."
                ],
                "type": "integer",
                "group": "/Mirror/Mirror Session Statistics"
              },
              "tx_packets": {
                "doc": [
                  "Number of packets transmitted through this mirror."
                ],
                "type": "integer",
                "group": "/Mirror/Mirror Session Statistics"
              }
            },
            "key": "string",
            "value": "integer",
            "min": 0
          },
          "ephemeral": true,
          "group": "/Mirror/Mirror Session Statistics"
        },
        "name": {
          "category": "configuration",
          "mutable": false,
          "type": {
            "key": {
              "type": "string",
              "maxLength": 64
            }
          },
          "doc": [
            "There must be a user-defined name of the mirror session."
          ]
        },
        "mirror_status": {
          "category": "status",
          "doc": [
            "Key-value pair(s) that report mirror status in hardware."
          ],
          "type": {
            "max": "unlimited",
            "valueMap": {
              "operation_state": {
                "emptyValue": "inactive",
                "doc": [
                  "Operational state of the mirror session in hardware. Only the value \"active\"",
                  "means the hardware mirroring is running. Any other value, or if the key is",
                  "missing, means the session is not running."
                ],
                "type": "string",
                "group": "/Mirror/Mirror Session Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Mirror/Mirror Session Status"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Mirror/Common Columns"
        },
        "select_dst_port": {
          "category": "configuration",
          "doc": [
            "Set of Ethernet port or LAG references in [Port](Port) on which transmitted",
            "packets are selected to be mirrored."
          ],
          "type": {
            "max": "unlimited",
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "Port"
            },
            "min": 0
          },
          "relationship": "reference",
          "group": "/Mirror/Mirroring Source(s) Configuration"
        },
        "active": {
          "category": "configuration",
          "doc": [
            "The intended state of the mirror session: active or inactive. The",
            "[operation_state](Mirror.mirror_status.operation_state) value contains the actual state",
            "in hardware (e.g. active, inactive, or error). When missing or false, the state",
            "is inactive."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "emptyValue": false
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/Mirror/Common Columns"
        }
      },
      "title": "Mirror Sessions"
    },
    "UDP_Bcast_Forwarder_Server": {
      "doc": [
        "Each entry represents the match and forward criteria for UDP broadcast packets",
        "received on the port. UDP-Broadcast-Forwarder feature uses these entries to",
        "forward selective UDP broadcast packets received on the routed Port to the",
        "configured server(s)."
      ],
      "columns": {
        "udp_dport": {
          "category": "configuration",
          "mutable": false,
          "doc": [
            "UDP broadcast packets with this destination udp port are forwarded to the",
            "configured server(s)."
          ],
          "type": {
            "key": {
              "minInteger": 0,
              "maxInteger": 65535,
              "type": "integer"
            }
          },
          "group": "/UDP_Bcast_Forwarder_Server/UDP Broadcast Forwarder Configuration"
        },
        "dest_vrf": {
          "category": "configuration",
          "group": "/UDP_Bcast_Forwarder_Server/UDP Broadcast Forwarder Configuration",
          "relationship": "reference",
          "doc": [
            "VRF through which server is reachable."
          ],
          "mutable": false,
          "type": {
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "VRF"
            }
          }
        },
        "src_port": {
          "category": "configuration",
          "group": "/UDP_Bcast_Forwarder_Server/UDP Broadcast Forwarder Configuration",
          "relationship": "reference",
          "doc": [
            "Reference to the routed port on which packets are receive."
          ],
          "mutable": false,
          "type": {
            "key": {
              "refType": "weak",
              "type": "uuid",
              "refTable": "Port"
            }
          }
        },
        "ipv4_ucast_server": {
          "category": "configuration",
          "doc": [
            "List of IPv4 unicast server destinations to which matching UDP broadcast packets",
            "received on the port are duplicated and forwarded."
          ],
          "type": {
            "max": 8,
            "key": {
              "type": "string",
              "maxLength": 15
            },
            "min": 0
          },
          "group": "/UDP_Bcast_Forwarder_Server/UDP Broadcast Forwarder Configuration"
        }
      },
      "isRoot": true,
      "indexes": [
        [
          "src_port",
          "udp_dport",
          "dest_vrf"
        ]
      ]
    },
    "Package_Info": {
      "doc": [
        "Each entry contains metadata related to package which is part of the image"
      ],
      "columns": {
        "src_type": {
          "category": "status",
          "mutable": true,
          "type": "string",
          "doc": [
            "Corresponds to the type of source pointed to by src_url. Depending on the",
            "src_url, some of the values it can take are - git, https, http, ftp, svn, cvs",
            "etc."
          ]
        },
        "src_url": {
          "category": "status",
          "mutable": true,
          "type": {
            "max": 1,
            "key": {
              "type": "string"
            },
            "min": 0
          },
          "doc": [
            "This denotes the download location for the source-code of the package. For",
            "example: ops-openvswitch: https://git.openswitch.net/openswitch/ops-openvswitch",
            "sed: http://ftp.gnu.org/gnu/sed/sed-4.2.2.tar.gz"
          ]
        },
        "name": {
          "category": "status",
          "mutable": false,
          "type": "string",
          "doc": [
            "Name of the package. Example: ops-openvswitch, sed, ops-quagga, openssh etc."
          ]
        },
        "version": {
          "category": "status",
          "mutable": true,
          "type": "string",
          "doc": [
            "If the src_type is a git repository, this will contain the git hash. Otherwise",
            "it will contain the version string (depending on the package). For example: ops-",
            "openvswitch: ac19ac49778adf6cf011a3ef6e0675025f1945b5 sed: 4.2.2"
          ]
        }
      },
      "isRoot": true,
      "indexes": [
        [
          "name"
        ]
      ]
    },
    "Syslog_Remote": {
      "doc": [
        "Each entry contains the configuration of the remote syslog server to forward",
        "syslog messages."
      ],
      "indexes": [
        [
          "remote_host"
        ]
      ],
      "columns": {
        "remote_host": {
          "category": "configuration",
          "doc": [
            "FQDN or host name or IPv4 address or IPv6 address of the syslog server."
          ],
          "type": {
            "key": {
              "minLength": 1,
              "type": "string",
              "maxLength": 256
            }
          },
          "group": "/Syslog_Remote/Configuration"
        },
        "port_number": {
          "category": "configuration",
          "doc": [
            "Port number on which syslog server is listening. Default is `514` for UDP",
            "protocol and `1470` for TCP protocol."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 1,
              "maxInteger": 65535,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/Syslog_Remote/Configuration"
        },
        "severity": {
          "category": "configuration",
          "doc": [
            "Filter syslog messages with severity.  Only messages with severity higher than",
            "or equal to the specified value will be sent to the remote server. Default is",
            "`debug`."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "debug",
                "info",
                "notice",
                "warning",
                "err",
                "crit",
                "alert",
                "emerg"
              ],
              "type": "string"
            },
            "min": 0
          },
          "emptyValue": "debug",
          "group": "/Syslog_Remote/Configuration"
        },
        "transport": {
          "category": "configuration",
          "doc": [
            "Transport layer protocol used to forward messages to the server. Default is",
            "`udp`"
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "udp",
                "tcp"
              ],
              "type": "string"
            },
            "min": 0
          },
          "emptyValue": "udp",
          "group": "/Syslog_Remote/Configuration"
        }
      },
      "title": "Syslog remote configuration"
    },
    "SNMP_Trap": {
      "columns": {
        "community_name": {
          "category": "configuration",
          "doc": [
            "SNMPv1/SNMPv2c community strings. The default community string is \"public\"."
          ],
          "type": {
            "max": 1,
            "key": {
              "minLength": 1,
              "type": "string",
              "maxLength": 32
            },
            "min": 0
          },
          "emptyValue": "public",
          "group": "/SNMP_Trap/configuration"
        },
        "receiver_address": {
          "category": "configuration",
          "doc": [
            "The IP address of the trap receiver."
          ],
          "type": {
            "key": {
              "type": "string",
              "maxLength": 45
            }
          },
          "group": "/SNMP_Trap/configuration"
        },
        "version": {
          "category": "configuration",
          "doc": [
            "Trap/inform version. The default version is \"v2c\"."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "v1",
                "v2c",
                "v3"
              ],
              "type": "string"
            },
            "min": 0
          },
          "emptyValue": "v2c",
          "group": "/SNMP_Trap/configuration"
        },
        "type": {
          "category": "configuration",
          "doc": [
            "Trap type. The default type is \"trap\"."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "trap",
                "inform"
              ],
              "type": "string"
            },
            "min": 0
          },
          "emptyValue": "trap",
          "group": "/SNMP_Trap/configuration"
        },
        "receiver_udp_port": {
          "category": "configuration",
          "doc": [
            "The UDP port of the trap receiver."
          ],
          "type": {
            "key": {
              "minInteger": 1,
              "maxInteger": 65535,
              "type": "integer"
            }
          },
          "group": "/SNMP_Trap/configuration"
        }
      },
      "maxRows": 10,
      "isRoot": true,
      "indexes": [
        [
          "receiver_address",
          "receiver_udp_port"
        ]
      ]
    },
    "SNMPv3_User": {
      "columns": {
        "auth_protocol": {
          "category": "configuration",
          "doc": [
            "The authentication protocol to be used for authenticating the user. The default",
            "is \"none\"."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "md5",
                "sha",
                "none"
              ],
              "type": "string"
            },
            "min": 0
          },
          "emptyValue": "none",
          "group": "/SNMPv3_User/configuration"
        },
        "auth_pass_phrase": {
          "category": "configuration",
          "doc": [
            "The key to be used by authentication protocol."
          ],
          "type": {
            "max": 1,
            "key": {
              "minLength": 8,
              "type": "string",
              "maxLength": 32
            },
            "min": 0
          },
          "group": "/SNMPv3_User/configuration"
        },
        "priv_protocol": {
          "category": "configuration",
          "doc": [
            "The privacy protocol to be used for encrypting the user requests. The default is",
            "\"none\"."
          ],
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "aes",
                "des",
                "none"
              ],
              "type": "string"
            },
            "min": 0
          },
          "emptyValue": "none",
          "group": "/SNMPv3_User/configuration"
        },
        "user_name": {
          "category": "configuration",
          "doc": [
            "User name that should contain alphanumeric characters."
          ],
          "type": {
            "key": {
              "minLength": 1,
              "type": "string",
              "maxLength": 32
            }
          },
          "group": "/SNMPv3_User/configuration"
        },
        "priv_pass_phrase": {
          "category": "configuration",
          "doc": [
            "The key to be used by privacy protocol."
          ],
          "type": {
            "max": 1,
            "key": {
              "minLength": 8,
              "type": "string",
              "maxLength": 32
            },
            "min": 0
          },
          "group": "/SNMPv3_User/configuration"
        }
      },
      "maxRows": 10,
      "isRoot": true,
      "indexes": [
        [
          "user_name"
        ]
      ]
    },
    "ACL": {
      "indexes": [
        [
          "name",
          "list_type"
        ]
      ],
      "columns": {
        "in_progress_aces": {
          "category": "status",
          "group": "/ACL/Access Control List Status",
          "relationship": "reference",
          "doc": [
            "The in flight version of the Access Control List.  Access Control Entries (ACE)",
            "specified in this ACL are defined in [ACL_Entry](ACL_Entry)"
          ],
          "keyname": "sequence_number",
          "type": {
            "max": 512,
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "value": {
              "type": "uuid",
              "refTable": "ACL_Entry"
            },
            "min": 0
          }
        },
        "status": {
          "category": "status",
          "type": {
            "max": "unlimited",
            "valueMap": {
              "state": {
                "doc": [
                  "Valid values are 'applied', 'in_progress', 'canceled', 'rejected'"
                ],
                "type": {
                  "enum": [
                    "in_progress",
                    "applied",
                    "rejected",
                    "canceled"
                  ],
                  "type": "string"
                },
                "group": "/ACL/Access Control List Status"
              },
              "code": {
                "doc": [
                  "Numeric error code.  Expected to be 0 when state is 'applied'"
                ],
                "type": "integer",
                "group": "/ACL/Access Control List Status"
              },
              "message": {
                "doc": [
                  "Detailed reason for error state.  Expected empty when state is 'applied'"
                ],
                "type": "string",
                "group": "/ACL/Access Control List Status"
              },
              "version": {
                "doc": [
                  "The version of cfg_aces that corresponds to this status."
                ],
                "type": "integer",
                "group": "/ACL/Access Control List Status"
              },
              "status_string": {
                "doc": [
                  "The status of the last version of 'cfg_aces' column, that has been processed by",
                  "switchd.  Accepted values are: 'in_progress', 'applied', 'rejected', and",
                  "'canceled'."
                ],
                "type": {
                  "enum": [
                    "in_progress",
                    "applied",
                    "rejected",
                    "canceled"
                  ],
                  "type": "string"
                },
                "group": "/ACL/Access Control List Status"
              }
            },
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/ACL/Access Control List Status"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/ACL/Common Columns"
        },
        "name": {
          "category": "configuration",
          "mutable": false,
          "doc": [
            "Name of an Access Control List (ACL)."
          ],
          "type": {
            "key": {
              "type": "string",
              "maxLength": 64
            }
          },
          "group": "/ACL/Access Control List Configuration"
        },
        "in_progress_version": {
          "category": "status",
          "doc": [
            "The version of the 'in_progress' Access Control List.  This value is copied from",
            "the cfg_version column when the ACL processing begins. This value is cleared",
            "when the ACL status is updated to 'applied' or 'rejected.'"
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/ACL/Access Control List Status"
        },
        "cfg_version": {
          "category": "configuration",
          "doc": [
            "The version of the 'cfg_aces' column. This value is incremented by the",
            "management interface - CLI/REST/Web UI, etc. every time it changes the",
            "'cfg_aces' value."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/ACL/Access Control List Configuration"
        },
        "list_type": {
          "category": "configuration",
          "mutable": false,
          "doc": [
            "Type of an Access Control List  Accepted values: 'ipv4'"
          ],
          "type": {
            "key": {
              "enum": [
                "ipv4"
              ],
              "type": "string"
            }
          },
          "group": "/ACL/Access Control List Configuration"
        },
        "cur_aces": {
          "category": "status",
          "group": "/ACL/Access Control List Status",
          "relationship": "reference",
          "doc": [
            "The currently configured version of the Access Control List.  Access Control",
            "Entries (ACE) specified in this version of the ACL are defined in",
            "[ACL_Entry](ACL_Entry)"
          ],
          "keyname": "sequence_number",
          "type": {
            "max": 512,
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "value": {
              "type": "uuid",
              "refTable": "ACL_Entry"
            },
            "min": 0
          }
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          },
          "group": "/ACL/Common Columns"
        },
        "cfg_aces": {
          "category": "configuration",
          "group": "/ACL/Access Control List Configuration",
          "relationship": "1:m",
          "doc": [
            "The desired version of the Access Control List.  Access Control Entries (ACE)",
            "specified in this version of the ACL are defined in [ACL_Entry](ACL_Entry)"
          ],
          "keyname": "sequence_number",
          "type": {
            "max": 512,
            "key": {
              "minInteger": 0,
              "maxInteger": 4294967295,
              "type": "integer"
            },
            "value": {
              "type": "uuid",
              "refTable": "ACL_Entry"
            },
            "min": 0
          }
        }
      },
      "title": "Access Control List"
    },
    "ACL_Entry": {
      "columns": {
        "comment": {
          "category": "configuration",
          "doc": [
            "Comment to associate with the specified ACE. Optional parameter."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 256
            },
            "min": 0
          }
        },
        "count": {
          "category": "configuration",
          "mutable": false,
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "doc": [
            "Count Action: enable hit counts in hardware for packets that match this ACL",
            "entry Optional parameter for IPv4 ACL entries The following value is accepted:",
            "true"
          ]
        },
        "protocol": {
          "category": "configuration",
          "mutable": false,
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 255,
              "type": "integer"
            },
            "min": 0
          },
          "doc": [
            "IPv4 Protocol Optional parameter.  If no protocol is specified the ACE will not",
            "match on protocol."
          ]
        },
        "log": {
          "category": "configuration",
          "mutable": false,
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "doc": [
            "Log Action: enable ACL logging for packets that match this ACL entry Optional",
            "parameter for IPv4 ACL entries The following value is accepted: true"
          ]
        },
        "src_l4_port_range_reverse": {
          "category": "configuration",
          "mutable": false,
          "doc": [
            "Specifies if the values in src_l4_port_min and src_l4_port_max should be treated",
            "as specifying values not to be matched. Optional parameter for IPv4 ACL entries.",
            "Applicable to TCP and UDP protocols."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "group": "/ACL_Entry/ACL L4 Port Configuration"
        },
        "other_config": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          }
        },
        "src_ip": {
          "category": "configuration",
          "mutable": false,
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 100
            },
            "min": 0
          },
          "doc": [
            "Source IPv4 Address: Optional parameter.  If no IP address is specified the ACE",
            "will not match on source IP address.  The following IPv4 address formats are",
            "accepted: X.X.X.X/X.X.X.X"
          ]
        },
        "dst_l4_port_max": {
          "category": "configuration",
          "mutable": false,
          "doc": [
            "Destination L4 Port Max: specifies the maximum value It is used in conjunction",
            "with dst_l4_port_min and dst_l4_port_range_reverse to determine the desired",
            "destination L4 port functionality.  Optional parameter for IPv4 ACL entries."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 65535,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/ACL_Entry/ACL L4 Port Configuration"
        },
        "src_l4_port_max": {
          "category": "configuration",
          "mutable": false,
          "doc": [
            "Source L4 Port Max: specifies the maximum value It is used in conjunction with",
            "src_l4_port_min and src_l4_port_range_reverse to determine the desired source L4",
            "port functionality.  Optional parameter for IPv4 ACL entries."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 65535,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/ACL_Entry/ACL L4 Port Configuration"
        },
        "action": {
          "category": "configuration",
          "mutable": false,
          "type": {
            "max": 1,
            "key": {
              "enum": [
                "permit",
                "deny"
              ],
              "type": "string"
            },
            "min": 0
          },
          "doc": [
            "Match Action: Optional parameter for IPv4 ACL entries. There are two types:",
            "\"permit\" and \"deny\" If no action is specified the ACE will not be programmed in",
            "hw."
          ]
        },
        "dst_ip": {
          "category": "configuration",
          "mutable": false,
          "type": {
            "max": 1,
            "key": {
              "type": "string",
              "maxLength": 100
            },
            "min": 0
          },
          "doc": [
            "Destination IPv4 Address: Optional parameter.  If no IP address is specified the",
            "ACE will not match on destination IP address  The following IPv4 address formats",
            "are accepted: X.X.X.X/X.X.X.X"
          ]
        },
        "dst_l4_port_range_reverse": {
          "category": "configuration",
          "mutable": false,
          "doc": [
            "Specifies if the values in dst_l4_port_min and dst_l4_port_max should be treated",
            "as specifying values not to be matched. Optional parameter for IPv4 ACL entries.",
            "Applicable to TCP and UDP protocols."
          ],
          "type": {
            "max": 1,
            "key": {
              "type": "boolean"
            },
            "min": 0
          },
          "group": "/ACL_Entry/ACL L4 Port Configuration"
        },
        "src_l4_port_min": {
          "category": "configuration",
          "mutable": false,
          "doc": [
            "Source L4 Port: specifies the IPv4 L4 source port to be used as the minimum",
            "value.  It is used in conjunction with src_l4_port_max and",
            "src_l4_port_range_reverse to determine the desired source L4 port functionality.",
            "Optional parameter for IPv4 ACL entries."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 65535,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/ACL_Entry/ACL L4 Port Configuration"
        },
        "dst_l4_port_min": {
          "category": "configuration",
          "mutable": false,
          "doc": [
            "Source L4 Port: specifies the IPv4 L4 source port to be used as the minimum",
            "value.  It is used in conjunction with dst_l4_port_max and",
            "dst_l4_port_range_reverse to determine the desired destination L4 port",
            "functionality.  Optional parameter for IPv4 ACL entries."
          ],
          "type": {
            "max": 1,
            "key": {
              "minInteger": 0,
              "maxInteger": 65535,
              "type": "integer"
            },
            "min": 0
          },
          "group": "/ACL_Entry/ACL L4 Port Configuration"
        },
        "external_ids": {
          "category": "configuration",
          "type": {
            "max": "unlimited",
            "key": "string",
            "value": "string",
            "min": 0
          }
        }
      },
      "title": "Access Control Entry"
    },
    "Notification_Subscriber": {
      "indexes": [
        [
          "name"
        ]
      ],
      "columns": {
        "notification_subscriptions": {
          "category": "configuration",
          "group": "/Notification_Subscriber/Configuration",
          "relationship": "1:m",
          "doc": [
            "List of notification subscriptions by name for this subscriber."
          ],
          "keyname": "name",
          "type": {
            "max": "unlimited",
            "key": {
              "type": "string"
            },
            "value": {
              "type": "uuid",
              "refTable": "Notification_Subscription"
            },
            "min": 0
          }
        },
        "type": {
          "category": "configuration",
          "mutable": false,
          "doc": [
            "Notification transport type. For WebSockets the type is \"ws\"."
          ],
          "type": {
            "key": {
              "enum": [
                "ws"
              ],
              "type": "string"
            }
          },
          "group": "/Notification_Subscriber/Configuration"
        },
        "name": {
          "category": "configuration",
          "mutable": false,
          "doc": [
            "Name of the notification subscriber."
          ],
          "type": "string",
          "group": "/Notification_Subscriber/Configuration"
        }
      },
      "isRoot": true,
      "title": "Notification subscriber information"
    },
    "Notification_Subscription": {
      "columns": {
        "resource": {
          "category": "configuration",
          "mutable": false,
          "doc": [
            "URI of the resource being subscribed to for notifications."
          ],
          "type": "string",
          "group": "/Notification_Subscription/Configuration"
        }
      },
      "title": "Notification subscription information"
    }
  }
}
